class BST {
    Node {
        number value,
        Node left,
        Node right
    }
    
    number v = 0;
    Node root = Node(3);
    
    fun clear():void {
        root = Node(3);
        v = 0;
    }
    
    fun add():void {
        v = v + 1;
        addRec(root, v);
    }

    fun addRec(Node n, number val):void {
        if (n == null) {
            return;
        }
        if (n.value <= val) {
            if (n.left == null) {
                n.left = Node(val);
            } else {
                addRec(n.left, val);
            }
        } else {
            if (n.right == null) {
                n.right = Node(val);
            } else {
                addRec(n.right, val);
            }
        }
    }
}