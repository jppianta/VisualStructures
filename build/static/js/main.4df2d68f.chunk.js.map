{"version":3,"sources":["grammar/grammar.js","images/newLogo.svg","EventManager.js","outsiders/ace/Ace.js","bars/EditorBar.js","Tabs.js","panels/DocumentationPanel.js","Step.js","History.js","panels/Runtime/Humanizer.js","panels/Runtime/HistoryBar.js","panels/Runtime/InfoPanel.js","panels/Runtime/RuntimePanel.js","panels/ExamplesTab/ExamplesPanel.js","panels/EditorPanel.js","outsiders/visjs/Visualizer.js","bars/VisualizerBar.js","panels/VisualizerPanel.js","Interpreter.js","panels/MainPanel.js","bars/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["peg$SyntaxError","message","expected","found","location","this","name","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","i","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","M","peg$parseM","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","op","eq","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","left","right","operation","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","l","map","c","peg$c30","f","peg$c31","peg$c32","peg$c33","atr","peg$c34","cHead","cTail","concat","d","peg$c35","vari","value","variable","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","head","tail","reduce","result","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","n","index","peg$c47","peg$c48","peg$c49","r","peg$c50","peg$c51","peg$c52","v","parameters","peg$c53","functionName","call","peg$c54","peg$c55","peg$classExpectation","peg$c56","peg$c57","peg$c58","peg$c59","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","res","peg$c77","peg$otherExpectation","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","b","peg$c85","peg$c86","peg$c87","peg$c88","t","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","p","peg$c94","peg$c95","peg$c96","e","condition","block","else","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","vHead","vTail","aux","val","Object","assign","peg$c110","peg$c111","peg$c112","node","attributions","functions","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","peg$buildStructuredError","s0","s1","s3","s5","s7","s9","s11","s13","substr","peg$parse_","peg$parseId","peg$parseParameters","peg$parseNode","s2","s4","peg$parseLineCommand","peg$parseLineCommands","peg$parseFunction","peg$parseFunctions","peg$parseClass","peg$parseRelational","peg$parseCompareOperators","peg$parseEquals","peg$parseCompares","peg$parseExpression","peg$parseB","peg$parseAdditive","peg$parseBoolOperator","peg$parseMult","peg$parsePlusMinus","peg$parsePrimary","peg$parseMultDiv","peg$parseOneNumber","peg$parseNumber","peg$parseBool","peg$parseNull","peg$parseFunctionCall","peg$parseIdRS","peg$parse_1","peg$parseReturn","peg$parseType","peg$parseDeclaration","peg$parseAttribution","peg$parseBlockCommand","peg$parseIf","peg$parseCondition","peg$parseFunctionBlock","peg$parseWhile","peg$parseOneChar","peg$parseUnderline","peg$parseRS","s6","s8","peg$parseFunctionAccess","peg$parseArrayAccess","peg$parseObjectAccess","test","charAt","peg$parseVar","peg$parseElseB","peg$parseElseA","peg$parseCommands","s15","__webpack_require__","EventManager","events","add","callback","Signal","dispatch","_len","arguments","params","_key","remove","instance","getInstance","AceEditor","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","setCode","code","editor","getSession","setValue","undefined","panelCallback","inherits","createClass","key","_this2","edit","config","set","setTheme","setUseWorker","setTabSize","setOptions","fontFamily","showPrintMargin","on","getValue","react_default","a","createElement","id","className","Component","EditorBar","apply","errorText","errorLocation","Tabs","onClick","setState","visibleTab","tab","tabs","setTab","bind","assertThisInitialized","children","forEach","elements","state","tabName","es_button","style","display","DocumentationPanel","overflowY","Step","info","nodes","edges","setUp","prop","edge","from","to","keys","getNodes","getEdges","stepHistory","History","al","actionList","currentStep","step","sl","action","displayStep","idx","getVisualStep","Humanizer","types","number","humanizeNumber","bool","humanizeBool","Node","humanizeNode","humanizeDeclaration","humanizeAttribution","humanizeFunction","humanizeIf","humanizeWhile","humanizeVariable","isArray","humanizeParameters","current","parameter","endsWith","arrayVar","first","access","HistoryBar","onChange","jumpToStep","stepName","humanizer","humanizeStep","numberOfItems","updateHistory","setStepList","pagination","total","InfoPanel","handleClick","last","split","menu","createMenu","onNodeClick","nodeIndex","initial","copy","obj","_this3","createStructure","theme","mode","createSubMenu","Item","_this4","path","title","SubMenu_default","onTitleClick","RuntimePanel","HistoryBar_HistoryBar","InfoPanel_InfoPanel","examples","require","ExamplesPanel","_ref","confirm","success","subKey","popconfirm","onConfirm","okText","cancelText","href","parseExaples","EditorPanel","textChanged","parseText","error","updateCode","parsed","err","parseErrorMessage","setErrorMessage","Tabs_Tabs","Ace_AceEditor","RuntimePanel_RuntimePanel","DocumentationPanel_DocumentationPanel","ExamplesPanel_ExamplesPanel","EditorBar_EditorBar","Visualizer","updateNetwork","visualizer","nodeColors","color","background","border","container","document","getElementById","Network","physics","autoResize","width","height","layout","hierarchical","direction","properties","network","firstElementChild","backgroundColor","canvas","_updateNetwork","asyncToGenerator","regenerator_default","mark","_callee","newStep","wrap","_context","prev","next","JSON","stringify","setData","stop","_x","destroy","VisualizerBar","handleChange","selected","runFunction","executeFunction","items","item","justifyContent","alignItems","dropdown","overlay","trigger","icon","VisualizerPanel","window","addEventListener","updateDimensions","removeEventListener","tabSize","getClientRects","Visualizer_Visualizer","VisualizerBar_VisualizerBar","Interpreter","scope","typeParse","parseNumber","parseBool","parseNode","void","idCount","currentFunction","clearScope","setGlobal","functionParameters","fun","getFunction","createFunctionScope","returnValue","executeBlock","pop","functionType","some","ope","handleDeclaration","lastScope","handleAttribution","handleIf","handleWhile","handleReturn","findGlobalNode","addStep","global","addScope","values","parseParameters","layer","isNull","memValue","getValueFromMemory","console","Number","isNaN","operationResult","parseNumberOperation","+","d1","d2","-","*","/","toBoolean","parseBoolOperator","operator","sides","getBothSides","memLeft","memRight","rightValue","com","parsedValue","sustituteValueInMemory","ifBlock","whileBlock","newValue","ret","rest","element","father","getVarFromArray","_this5","createStepFromNode","createStepFromNodeRec","level","_this6","data","$been","label","String","arrows","MainPanel","updateItems","interpreter","hasCode","newItems","EditorPanel_EditorPanel","VisualizerPanel_VisualizerPanel","Header","src","newLogo","alt","App","Header_Header","MainPanel_MainPanel","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","src_App","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4df2d68f.chunk.js","sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { M: peg$parseM },\n      peg$startRuleFunction  = peg$parseM,\n\n      peg$c0 = \"!=\",\n      peg$c1 = peg$literalExpectation(\"!=\", false),\n      peg$c2 = \"==\",\n      peg$c3 = peg$literalExpectation(\"==\", false),\n      peg$c4 = function(op, eq) { return eq ? op + eq : op },\n      peg$c5 = \">\",\n      peg$c6 = peg$literalExpectation(\">\", false),\n      peg$c7 = \"<\",\n      peg$c8 = peg$literalExpectation(\"<\", false),\n      peg$c9 = \"=\",\n      peg$c10 = peg$literalExpectation(\"=\", false),\n      peg$c11 = \"&&\",\n      peg$c12 = peg$literalExpectation(\"&&\", false),\n      peg$c13 = \"||\",\n      peg$c14 = peg$literalExpectation(\"||\", false),\n      peg$c15 = \"+\",\n      peg$c16 = peg$literalExpectation(\"+\", false),\n      peg$c17 = \"-\",\n      peg$c18 = peg$literalExpectation(\"-\", false),\n      peg$c19 = \"*\",\n      peg$c20 = peg$literalExpectation(\"*\", false),\n      peg$c21 = \"/\",\n      peg$c22 = peg$literalExpectation(\"/\", false),\n      peg$c23 = function(left, op, right) {\n      \treturn {\n              type: 'bool',\n          \toperation: op,\n              left,\n              right\n          }\n      },\n      peg$c24 = function(left, op, right) {\n      \treturn {\n              type: 'number',\n          \toperation: op,\n              left,\n              right\n          }\n      },\n      peg$c25 = \"(\",\n      peg$c26 = peg$literalExpectation(\"(\", false),\n      peg$c27 = \")\",\n      peg$c28 = peg$literalExpectation(\")\", false),\n      peg$c29 = function(l) {\n      \treturn l.map(c => {\n          \treturn c[0];\n          })\n      },\n      peg$c30 = function(f) {\n      \treturn f.map(c => {\n          \treturn c[0];\n          })\n      },\n      peg$c31 = \";\",\n      peg$c32 = peg$literalExpectation(\";\", false),\n      peg$c33 = function(atr) {return atr},\n      peg$c34 = function(cHead, cTail) {\n      \treturn [cHead].concat(cTail.map(d => {\n          \treturn d[1];\n          }));\n      },\n      peg$c35 = function(type, vari, value) {\n      \treturn {\n              operation: \"Declaration\",\n              variable: vari,\n              value: value,\n          \ttype: type\t\n          }\n      },\n      peg$c36 = function(vari, value) {\n      \treturn {\n              operation: \"Attribution\",\n              variable: vari,\n              value: value\t\n          }\n      },\n      peg$c37 = \"return\",\n      peg$c38 = peg$literalExpectation(\"return\", false),\n      peg$c39 = function(value) {\n          return {\n              operation: 'Return',\n              value: value && value[1]\n          }\n      },\n      peg$c40 = function(head, tail) {\n      \treturn head+(tail.length>0 ? tail.reduce((result, ch) => {\n          \treturn result+=ch;\n          }) : \"\");\n      },\n      peg$c41 = function(head, tail) {\n          return tail === [] ? [head] : [head].concat(tail);\n      },\n      peg$c42 = \"[\",\n      peg$c43 = peg$literalExpectation(\"[\", false),\n      peg$c44 = \"]\",\n      peg$c45 = peg$literalExpectation(\"]\", false),\n      peg$c46 = function(n) {\n      \treturn {\n          \ttype: 'Array',\n              index: n\n          }\n      },\n      peg$c47 = \".\",\n      peg$c48 = peg$literalExpectation(\".\", false),\n      peg$c49 = function(r) {\n      \treturn {\n          \ttype: 'Object',\n              name: r[1]\n          }\n      },\n      peg$c50 = \",\",\n      peg$c51 = peg$literalExpectation(\",\", false),\n      peg$c52 = function(v) {\n      \treturn {\n          \ttype: 'Function',\n              parameters: v ? [v[0]].concat(v[1].map(d => {\n              \treturn d[2]\n              })) : []\n          }\n      },\n      peg$c53 = function(functionName, call) {\n          return {\n              operation: call.type,\n              parameters: call.parameters,\n              name: functionName\n          }\n      },\n      peg$c54 = /^[a-zA-Z]/,\n      peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c56 = /^[0-9]/,\n      peg$c57 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c58 = \"_\",\n      peg$c59 = peg$literalExpectation(\"_\", false),\n      peg$c60 = function(head, tail) {\n      \treturn [head].concat((tail).map(d => {\n          \treturn d[1]\n          })).map(d => {\n          \treturn {\n              \tvalue: d\n              }\n          }).reduceRight((res, v) => {\n          \tv.next = res\n              return v\n          })\n      },\n      peg$c61 = \"number\",\n      peg$c62 = peg$literalExpectation(\"number\", false),\n      peg$c63 = \"void\",\n      peg$c64 = peg$literalExpectation(\"void\", false),\n      peg$c65 = \"string\",\n      peg$c66 = peg$literalExpectation(\"string\", false),\n      peg$c67 = \"bool\",\n      peg$c68 = peg$literalExpectation(\"bool\", false),\n      peg$c69 = \"char\",\n      peg$c70 = peg$literalExpectation(\"char\", false),\n      peg$c71 = \"Node\",\n      peg$c72 = peg$literalExpectation(\"Node\", false),\n      peg$c73 = \"null\",\n      peg$c74 = peg$literalExpectation(\"null\", false),\n      peg$c75 = function() {\n      \treturn {\n          \ttype: 'Node',\n              value: null\n          }\n      },\n      peg$c76 = function(ch) {\n      \treturn {\n          \ttype: 'number',\n              value: ch.reduce((res, c) => {\n          \t\t\treturn res+=c;\n          \t})\n          }\n      },\n      peg$c77 = peg$otherExpectation(\"whitespace\"),\n      peg$c78 = /^[ \\t\\n\\r]/,\n      peg$c79 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c80 = \"true\",\n      peg$c81 = peg$literalExpectation(\"true\", false),\n      peg$c82 = \"false\",\n      peg$c83 = peg$literalExpectation(\"false\", false),\n      peg$c84 = function(b) {\n      \treturn {\n          \ttype: 'bool',\n              value: b\n          }; \n      },\n      peg$c85 = function(b) {\n      \treturn b;\n      },\n      peg$c86 = \"[]\",\n      peg$c87 = peg$literalExpectation(\"[]\", false),\n      peg$c88 = function(t, v, i) {\n      \treturn [i,t+(v ? v : \"\")]\n      },\n      peg$c89 = \"{\",\n      peg$c90 = peg$literalExpectation(\"{\", false),\n      peg$c91 = \"}\",\n      peg$c92 = peg$literalExpectation(\"}\", false),\n      peg$c93 = function(p) { \n      \treturn {\n          \toperation: \"node\",\n              parameters: p || {}\n          }\n      },\n      peg$c94 = \"if\",\n      peg$c95 = peg$literalExpectation(\"if\", false),\n      peg$c96 = function(c, f, e) {\n      \treturn {\n          \toperation: \"if\",\n              condition: c,\n              block: f,\n              else: e\n          }\n      },\n      peg$c97 = \"else\",\n      peg$c98 = peg$literalExpectation(\"else\", false),\n      peg$c99 = function(e) { return e ? e[2] : null; },\n      peg$c100 = \"while\",\n      peg$c101 = peg$literalExpectation(\"while\", false),\n      peg$c102 = function(c, f) {\n      \treturn {\n          \toperation: \"while\",\n              condition: c,\n              block: f\n          }\n      },\n      peg$c103 = function(c) { return c; },\n      peg$c104 = \"fun\",\n      peg$c105 = peg$literalExpectation(\"fun\", false),\n      peg$c106 = \":\",\n      peg$c107 = peg$literalExpectation(\":\", false),\n      peg$c108 = function(i, p, t, f) {\n      \treturn {\n          \toperation: \"function\",\n              name: i,\n              parameters: p || {},\n              type: t,\n              block: f\n          }\n      },\n      peg$c109 = function(vHead, vTail) {\n      \treturn [vHead].concat(vTail.map((t) => {\n          \treturn t[3]\n          })).map(d => {\n          \tconst aux = {};\n              aux[d[0]] = d[1]\n          \treturn aux;\n          }).reduce((res, val) => {\n          \treturn Object.assign(res, val);\n          })\n      },\n      peg$c110 = \"class\",\n      peg$c111 = peg$literalExpectation(\"class\", false),\n      peg$c112 = function(i, n, l, f) {\n      \treturn { \n          \toperation: \"class\",\n          \tnode: n,\n          \tattributions: l,\n          \tfunctions: f\n          }\n      },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseM() {\n    var s0;\n\n    s0 = peg$parseClass();\n\n    return s0;\n  }\n\n  function peg$parseRelational() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c0) {\n      s0 = peg$c0;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c2) {\n        s0 = peg$c2;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCompares();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCompares() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCompareOperators();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEquals();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCompareOperators() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEquals() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c9;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBoolOperator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c11) {\n      s0 = peg$c11;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c13) {\n        s0 = peg$c13;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePlusMinus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c15;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultDiv() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c19;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c21;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseB();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseRelational();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseB();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c23(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseB();\n    }\n\n    return s0;\n  }\n\n  function peg$parseB() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditive();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseBoolOperator();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseB();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c23(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAdditive();\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditive() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseMult();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePlusMinus();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseAdditive();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c24(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMult();\n    }\n\n    return s0;\n  }\n\n  function peg$parseMult() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrimary();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseMultDiv();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseMult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c24(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrimary();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimary() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parseNumber();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseBool();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNull();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunctionCall();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseIdRS();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s1 = peg$c25;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c26); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseExpression();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s3 = peg$c27;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineCommands() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseLineCommand();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parseLineCommand();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c29(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFunctions() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseFunction();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parseFunction();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c30(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLineCommand() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFunctionCall();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseReturn();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseDeclaration();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseAttribution();\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBlockCommand() {\n    var s0;\n\n    s0 = peg$parseIf();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseWhile();\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommands() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLineCommand();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseBlockCommand();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseLineCommand();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseBlockCommand();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseLineCommand();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseBlockCommand();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c34(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDeclaration() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseType();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_1();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseExpression();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c35(s1, s3, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAttribution() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdRS();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_1();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseExpression();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseId() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseOneChar();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseOneChar();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseOneNumber();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseUnderline();\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseOneChar();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseOneNumber();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseUnderline();\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdRS() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseRS();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseRS();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArrayAccess() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c42;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c44;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c46(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseObjectAccess() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c47;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseId();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c49(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFunctionAccess() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c50;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c51); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseExpression();\n              if (s9 !== peg$FAILED) {\n                s7 = [s7, s8, s9];\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c50;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c51); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parseExpression();\n                if (s9 !== peg$FAILED) {\n                  s7 = [s7, s8, s9];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c27;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c52(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionCall() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFunctionAccess();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c53(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRS() {\n    var s0;\n\n    s0 = peg$parseArrayAccess();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseObjectAccess();\n    }\n\n    return s0;\n  }\n\n  function peg$parseOneChar() {\n    var s0;\n\n    if (peg$c54.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseOneNumber() {\n    var s0;\n\n    if (peg$c56.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnderline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 95) {\n      s0 = peg$c58;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdAtribbute() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s4 = peg$c47;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseId();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c47;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseId();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c60(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6) === peg$c61) {\n      s0 = peg$c61;\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c63) {\n        s0 = peg$c63;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c65) {\n          s0 = peg$c65;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c67) {\n            s0 = peg$c67;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c69) {\n              s0 = peg$c69;\n              peg$currPos += 4;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c71) {\n                s0 = peg$c71;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNull() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c73) {\n      s1 = peg$c73;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c75();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseOneNumber();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseOneNumber();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c76(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c78.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c79); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c78.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_1() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c78.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c79); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c78.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBool() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c80) {\n      s1 = peg$c80;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c84(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCondition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c27;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c85(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVar() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseType();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c86) {\n        s2 = peg$c86;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_1();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseId();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c88(s1, s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNode() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c71) {\n      s1 = peg$c71;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s3 = peg$c89;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c90); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseParameters();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s7 = peg$c91;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c93(s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIf() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c94) {\n      s1 = peg$c94;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCondition();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseFunctionBlock();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseElseA();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c96(s3, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElseA() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c97) {\n      s2 = peg$c97;\n      peg$currPos += 4;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c98); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseElseB();\n        if (s4 !== peg$FAILED) {\n          s2 = [s2, s3, s4];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c99(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseElseB() {\n    var s0;\n\n    s0 = peg$parseIf();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionBlock();\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c100) {\n      s1 = peg$c100;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c101); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCondition();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseFunctionBlock();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c102(s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionBlock() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c89;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c90); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCommands();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s5 = peg$c91;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c92); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c103(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c104) {\n      s1 = peg$c104;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c105); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_1();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s5 = peg$c25;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c26); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseParameters();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s9 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 58) {\n                          s11 = peg$c106;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseType();\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parseFunctionBlock();\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c108(s3, s7, s13, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseParameters() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseVar();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c50;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseVar();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c50;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c51); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseVar();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c109(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClass() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c110) {\n      s1 = peg$c110;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c111); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c89;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c90); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseNode();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseLineCommands();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseFunctions();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                              s13 = peg$c91;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c112(s3, s7, s9, s11);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","module.exports = __webpack_public_path__ + \"static/media/newLogo.a247b4ce.svg\";","import { Signal } from 'signals';\n\nclass EventManager {\n    events = {};\n\n    add = (name, callback) => {\n        events[name] = new Signal();\n        events[name].add(callback);\n    }\n\n    dispatch = (name, ...params) => {\n        events[name] && events[name].dispatch(params);\n    }\n\n    remove = (name, callback) => {\n        events[name] && events[name].remove(callback);\n    }\n}\n\nexport const events = (() => {\n    let instance;\n\n    const createInstance = () => {\n        if (!instance) {\n            instance = new EventManager();\n        }\n        return instance;\n    }\n\n    return {\n        getInstance: createInstance\n    }\n})();","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { edit, config } from 'ace-builds';\n\nexport class AceEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n        this.events.add('setCode', this.setCode);\n\n        this.editor = undefined;\n        this.text = '';\n        this.panelCallback = props.panelCallback;\n    }\n\n    setCode = (code) => {\n        code = code[0];\n        if (this.editor) {\n            this.editor.getSession().setValue(code);\n        }\n    }\n\n    componentDidMount() {\n        this.editor = edit('ace-container');\n        config.set('basePath', '/VisualStructures/lib/ace/');\n        this.editor.setTheme('ace/theme/tomorrow_night');\n        this.editor.getSession().setUseWorker(false);\n        this.editor.getSession().setTabSize(4);\n        this.editor.setOptions({\n            fontFamily: 'monaco',\n            showPrintMargin: false\n        });\n        // this.editor.getSession().setMode('ace/mode/javascript');\n        this.editor.getSession().on('change', (e) => {\n            this.panelCallback(this.editor.getSession().getValue());\n        });\n    }\n\n    render() {\n        return (\n            <div id='ace-container' className=\"Ace\"></div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport class EditorBar extends Component {\n    render() {\n        return (\n            <div className=\"EditorBar\">\n                <div className=\"TextDiv\">\n                    <span>{this.props.errorText}</span>\n                </div>\n                <div className=\"LocationDiv\">\n                    <span>{this.props.errorLocation}</span>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { events } from './EventManager';\nimport { Button } from 'antd';\n\nexport class Tabs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.tabs = [];\n\n        this.events = events.getInstance();\n\n        this.events.add('setTab', this.setTab.bind(this));\n\n        (props.children || []).forEach(tab => {\n            if (tab.type === 'tab') {\n                this.tabs.push({\n                    name: tab.props.name || '',\n                    elements: tab.props.children || []\n                });\n            }\n        });\n        this.state = {\n            visibleTab: this.tabs.length && this.tabs[0].name\n        }\n    }\n\n    onClick = (e) => {\n        this.setState({ visibleTab: e.tab });\n    }\n\n    setTab(tabName) {\n        this.setState({ visibleTab: tabName[0] });\n    }\n\n    render() {\n        return (\n            <div className=\"Tabs\">\n                <div className='TabButtons' id=\"tabButtons\">\n                    {\n                        this.tabs.map(tab => {\n                            return <Button type={this.state.visibleTab === tab.name ? 'primary' : 'default'} key={tab.name} onClick={this.onClick.bind(this, { tab: tab.name })}>{tab.name}</Button>\n                        })\n                    }\n                </div>\n                <div className='TabContents'>\n                    {\n                        this.tabs.map(tab => {\n                            return (\n                                <div key={tab.name} style={this.state.visibleTab === tab.name ? {} : {display: 'none'}}>\n                                    {tab.elements}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport class DocumentationPanel extends Component {\n    render() {\n        return (\n            <div className=\"DocumentationPanel\" style={{display: 'block', overflowY: 'auto'}}>\n                <h1>VsLang</h1>\n                <h2>Class</h2>\n                <p>\n                    Every module of this language is a essencialy a class, this is where all the definitions must be. Every class must have a definition of a Node, which will be explained next, and a name.\n                    The most basic example of a class would be\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"class Example {\\n    Node {\\n    }\\n}\"}\n                        </code>\n                    </pre>\n                </div>\n                <h2>Node</h2>\n                <p>\n                    The Node is a must have on every class because the ideia of the language is to work around data structures, and the best way to control data in data structures is with nodes. \n                    The way you define a Node is the same way you define parameters, type of the property followed by the name of the property. An example of a Node would be\n\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"Node {\\n\"}\n                            {\"    number value,\\n\"}\n                            {\"    Node next\\n\"}\n                            {\"}\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    The types available available in the language are number, string, bool and Node.\n                </p>\n                <h2>Declaration</h2>\n                <p>\n                    The declarations are the made writing the type of the variable, followed by the name of it, equals the value. For example\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"Node root = Node(2);\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    As you can see, we have just created a Node called root, with value equals 2. When calling functions, every property not passed on the function called will be set to null.\n                    In this case, the property next of our variable is set to null, since a value was not passed.\n                </p>\n                <h2>Attribution</h2>\n                <p>\n                    Well, the attribution has not a lot of mistery, is the same as the declaration, but without the type definition. The variable must have already been defined, of course.\n                </p>\n                <h2>Function</h2>\n                <p>\n                    Functions are declared using the word 'fun', followed by its name and the parameters inside braces, followed by ':' and its return type.\n                    The code of the function comes next inside curly braces. Just like this \n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"fun add(number val): void {\\n\"}\n                            {\"    Node aux = root;\\n\"}\n                            {\"    if (aux == null) {\\n\"}\n                            {\"        Node aux = Node(val);\\n\"}\n                            {\"    } else {\\n\"}\n                            {\"        while (aux.next != null) {\\n\"}\n                            {\"            aux = aux.next;\\n\"}\n                            {\"        }\\n\"}\n                            {\"        aux.next = Node(val);\\n\"}\n                            {\"    }\\n\"}\n                            {\"}\\n\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    Preety cool, huh? And as you select the add function on the visualizer bar and press Run, you will see the root node being drawn. \n                    Remender, the first node declared will be the the one vizualied. At least for now.\n                </p>\n            </div>\n        );\n    }\n}","export class Step {\n    nodes = {};\n    edges = [];\n\n    constructor(info) {\n        this.setUp(info);\n    }\n\n    setUp(info) {\n        this.operation = info.operation;\n        this.functionName = info.functionName;\n        (info.nodes || []).forEach(node => {\n            this.nodes[node.id] = {\n                prop: node.prop,\n            };\n            delete node.prop;\n            this.nodes[node.id].info = node;\n        });\n        (info.edges || []).forEach(edge => {\n            this.edges.push(edge);\n            this.nodes[edge.from].edge = {\n                to: edge.to\n            };\n        });\n    }\n\n    getEdges() {\n        return this.edges;\n    }\n\n    getNodes() {\n        return Object.keys(this.nodes).map(key => this.nodes[key].info);\n    }\n\n    getVisualStep() {\n        return {\n            nodes: this.getNodes(),\n            edges: this.getEdges()\n        }\n    }\n}","import { events } from './EventManager';\nimport { Step } from './Step';\n\nclass History {\n    constructor(al) {\n        this.events = events.getInstance();\n        this.actionList = al || [];\n        this.currentStep = 0;\n    }\n\n    pushStep(step) {\n        this.actionList.push(new Step(step));\n    }\n\n    setStepList(sl) {\n        this.actionList = sl.map(action => new Step(action));\n        this.currentStep = 0;\n        this.displayStep();\n    }\n\n    clear() {\n        this.actionList = [];\n        this.currentStep = 0;\n    }\n\n    nextStep() {\n        this.currentStep = this.currentStep + 1 === this.actionList.length ? this.currentStep : this.currentStep + 1;\n        this.displayStep();\n    }\n\n    lastStep() {\n        this.currentStep = this.currentStep === 0 ? this.currentStep : this.currentStep - 1;\n        this.displayStep();\n    }\n\n    jumpToStep(idx) {\n        if (idx >=0 && idx < this.actionList.length) {\n            this.currentStep = idx;\n            this.displayStep();\n        }\n    }\n\n    displayStep() {\n        const step = this.actionList[this.currentStep].getVisualStep();\n        this.events.dispatch('newStep', step);\n    }\n}\n\nexport const stepHistory = new History();","export class Humanizer {\n    types = {\n        'number': this.humanizeNumber.bind(this),\n        'bool': this.humanizeBool.bind(this),\n        'Node': this.humanizeNode.bind(this)\n    }\n\n    humanizeStep(step) {\n        switch (step.operation) {\n            case 'Declaration':\n                return this.humanizeDeclaration(step);\n            case 'Attribution':\n                return this.humanizeAttribution(step);\n            case 'Function':\n                return this.humanizeFunction(step);\n            case 'if':\n                return this.humanizeIf(step);\n            case 'while':\n                return this.humanizeWhile(step);\n            case 'Return':\n                return;\n            default: return false;\n        }\n    }\n\n    humanizeDeclaration(step) {\n        return `${step.type} ${step.variable} = ${step.value.type ? this.types[step.value.type](step.value) : this.humanizeFunction(step.value)}`\n    }\n\n    humanizeAttribution(step) {\n        return `${this.humanizeVariable(step.variable)} = ${step.value.type ? this.types[step.value.type](step.value) : this.humanizeFunction(step.value)}`\n    }\n\n    humanizeNumber(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (op.operation) {\n            return `(${this.humanizeNumber(op.left)} ${op.operation} ${this.humanizeNumber(op.right)})`\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        return op.value;\n    }\n\n    humanizeNode(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        return op.value;\n    }\n\n    humanizeBool(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (op.operation) {\n            return `(${this.humanizeBool(op.left)} ${op.operation} ${this.humanizeBool(op.right)})`\n        }\n        return op.value;\n    }\n\n    humanizeIf(op) {\n        return `if (${this.humanizeBool(op.condition)})`\n    }\n\n    humanizeWhile(op) {\n        return `while (${this.humanizeBool(op.condition)})`\n    }\n\n    humanizeFunction(op) {\n        if (Array.isArray(op)) {\n            return this.humanizeVariable(op);\n        }\n        return `${op.name}(${this.humanizeParameters(op.parameters)})`;\n    }\n\n    humanizeParameters(parameters) {\n        const res = parameters.reduce((current, parameter) => {\n            return current + (parameter.type ? this.types[parameter.type](parameter) : this.humanizeVariable(parameter)) + ', ';\n        }, '') || '';\n        if (res.endsWith(', ')) {\n            return res.slice(0, -2);\n        }\n        return res;\n    }\n\n    humanizeVariable(variable) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        const first = arrayVar[0];\n        const rest = arrayVar.slice(1);\n        return rest.reduce((current, access) => {\n            return current + (access.type === 'Object' ? `.${access.name}` : `[${access.index}]`)\n        }, first);\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { stepHistory } from '../../History';\nimport { Humanizer } from './Humanizer';\nimport { Pagination } from 'antd';\n\nexport class HistoryBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.events.add('updateHistory', this.updateHistory.bind(this));\n\n        this.humanizer = new Humanizer();\n\n        this.state = {\n            numberOfItems: 0,\n            functionName: '',\n            stepName: ''\n        }\n    }\n\n    onChange = (idx) => {\n        idx = idx - 1;\n        stepHistory.jumpToStep(idx);\n        const step = stepHistory.actionList[idx]\n        this.setState({\n            functionName: step.functionName,\n            stepName: this.humanizer.humanizeStep(step.operation),\n            numberOfItems: this.state.numberOfItems\n        });\n        this.updateHistory();\n    }\n\n    updateHistory(actionList) {\n        if (actionList) {\n            actionList = actionList[0]\n            stepHistory.setStepList(actionList);\n            this.setState({\n                functionName: actionList[0] ?actionList[0].functionName : '',\n                stepName: actionList[0] ? this.humanizer.humanizeStep(actionList[0].operation) : '',\n                numberOfItems: actionList.length\n            });\n        }\n    }\n\n    render() {\n        return (\n            this.state.numberOfItems > 0 ?\n                <div className=\"HistoryBar\">\n                    <h2>Steps</h2>\n                    <div className=\"Step\">\n                        <span className=\"Function\">{this.state.functionName}</span>\n                        <span className=\"Operation\">{this.state.stepName}</span>\n                    </div>\n                    {\n                        this.state.numberOfItems > 0 ? <Pagination total={this.state.numberOfItems * 10} onChange={this.onChange} /> : null\n                    }\n                </div> :\n                null\n        );\n    }\n}","import React, { Component } from 'react';\nimport { stepHistory } from '../../History';\nimport { events } from '../../EventManager';\nimport { Menu } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\n\nexport class InfoPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.events.add('nodeClicked', this.onNodeClick);\n\n        this.info = {};\n\n\n        this.state = {\n            menu: null\n        }\n    }\n\n    createStructure(info, initial) {\n        return this.copy(info, initial)\n    }\n\n    copy(obj, initial) {\n        const res = {};\n        Object.keys(obj).forEach(key => {\n            let val;\n            if (initial) {\n                val = obj[key].value;\n            } else {\n                val = obj[key];\n            }\n            if (val && val instanceof Object) {\n                res[key] = () => { return this.copy(val, initial); };\n            } else {\n                res[key] = val;\n            }\n        });\n        return res;\n    }\n\n    createMenu(info) {\n        let initial = false;\n        if (info) {\n            initial = true;\n            this.info = this.createStructure(info, initial);\n        }\n        return (\n            <Menu theme='dark' mode='inline'>\n                {\n                    Object.keys(this.info).map(key => {\n                        if (typeof this.info[key] === 'function' || this.info[key] instanceof Object) {\n                            return this.createSubMenu(key, this.info[key]);\n                        } else {\n                            const val = `${key}: ${this.info[key]}`\n                            return <Menu.Item key={val}>{val}</Menu.Item>\n                        }\n                    })\n                }\n            </Menu>\n        );\n    }\n\n    handleClick = (key) => {\n        key = key.split('/');\n        const last = key[key.length - 1];\n        key = key.slice(0, -1);\n        const node = key.reduce((current, name) => current && current[name], this.info);\n        if (typeof node[last] === 'function') {\n            node[last] = node[last]();\n            this.setState({\n                menu: this.createMenu()\n            })\n        }\n    }\n\n    createSubMenu(name, info) {\n        const path = name.split('/');\n        const title = path[path.length - 1];\n        return (\n            typeof info === 'function' ? \n            <SubMenu key={name} title={title} onTitleClick={this.handleClick.bind(this, name)} /> :\n            <SubMenu key={name} title={title} >\n                {\n                    Object.keys(info).map(key => {\n                        if (typeof info[key] === 'function' || info[key] instanceof Object) {\n                            return this.createSubMenu(`${name}/${key}`, info[key]);\n                        } else {\n                            const val = `${key}: ${info[key]}`\n                            return <Menu.Item key={val}>{val}</Menu.Item>\n                        }\n                    })\n                }\n            </SubMenu>\n        );\n    }\n\n    onNodeClick = (nodeIndex) => {\n        nodeIndex = nodeIndex[0];\n\n        const step = stepHistory.actionList[stepHistory.currentStep];\n\n        const node = step.nodes[nodeIndex];\n\n        if (node) {\n            const info = node.prop;\n\n            this.setState({\n                menu: this.createMenu(info)\n            });\n        }\n    }\n\n    render() {\n        return (\n            this.state.menu ?\n            <div className=\"InfoPanel\">\n                <h2>Node Info</h2>\n                <div style={{overflowY: 'auto'}}>\n                    {\n                        this.state.menu\n                    }\n                </div>\n            </div> :\n            null\n        );\n    }\n}","import React, { Component } from 'react';\nimport { HistoryBar } from './HistoryBar';\nimport { InfoPanel } from './InfoPanel';\n\nexport class RuntimePanel extends Component {\n    render() {\n        return (\n            <div className=\"RuntimePanel\">\n                <HistoryBar />\n                <InfoPanel />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Menu, Popconfirm, message } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { events } from '../../EventManager.js';\n\nconst examples = require('./Examples/examples.json')\n\nexport class ExamplesPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n    }\n\n    onClick = ({ key }) => {\n        const path = key.split('/');\n        const text = path.reduce((current, key) => current[key], examples);\n        this.events.dispatch('setCode', text);\n        this.events.dispatch('setTab', 'Code');\n    }\n\n    confirm = (key) => {\n        const path = key.split('/');\n        const text = path.reduce((current, key) => current[key], examples);\n        this.events.dispatch('setCode', text);\n        this.events.dispatch('setTab', 'Code');\n        message.success(`${path[path.length - 1]} loaded`);\n    }\n\n    parseExaples() {\n        const types = Object.keys(examples);\n        return (\n            <Menu mode='inline' theme='dark'>\n                {\n                    types.map(key => {\n                        return (\n                            <SubMenu key={key} title={key}>\n                                {\n                                    Object.keys(examples[key]).map(subKey => {\n                                        return (\n                                            <Menu.Item key={key + '/' + subKey}>\n                                                <Popconfirm title=\"Are you sure you want to overwrite the editor?\" onConfirm={this.confirm.bind(this, key + '/' + subKey)} okText=\"Yes\" cancelText=\"No\">\n                                                    <a href=\"#\">{subKey}</a>\n                                                </Popconfirm>\n                                            </Menu.Item>\n                                        );\n                                    })\n                                }\n                            </SubMenu>\n                        );\n                    })\n                }\n            </Menu>\n        );\n    }\n\n    render() {\n        return this.parseExaples();\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../EventManager';\nimport { parse } from '../grammar/grammar';\nimport { AceEditor } from '../outsiders/ace/Ace';\nimport { EditorBar } from '../bars/EditorBar';\nimport { Tabs } from '../Tabs';\nimport { DocumentationPanel } from './DocumentationPanel';\nimport { RuntimePanel } from './Runtime/RuntimePanel';\nimport { ExamplesPanel } from './ExamplesTab/ExamplesPanel';\n\nexport class EditorPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n        this.events.add('textChanged', this.textChanged);\n        this.text = '';\n        this.error = undefined;\n        this.errorLocation = undefined;\n\n        this.state = {\n            error: '',\n            errorLocation: ''\n        };\n        this.updateCode = props.updateCode;\n    }\n\n    textChanged = (text) => {\n        this.text = text;\n        this.parseText();\n    }\n\n    parseText() {\n        try {\n            const parsed = parse(this.text);\n            this.updateCode(parsed);\n            this.error = 'Compiled!';\n            this.errorLocation = null;\n        } catch (err) {\n            this.parseErrorMessage(err);\n        } finally {\n            this.setErrorMessage();\n        }\n    }\n\n    parseErrorMessage(error) {\n        this.error = error.name + ': ' + error.message;\n        this.errorLocation = error.location && `Line ${error.location.start.line}, Column ${error.location.start.column}`;\n        this.setErrorMessage();\n    }\n\n    setErrorMessage() {\n        this.setState({\n            error: this.error,\n            errorLocation: this.errorLocation\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"EditorPanel\">\n                <Tabs>\n                    <tab name='Code'>\n                        <AceEditor \n                            panelCallback = {this.textChanged.bind(this)}  \n                        />\n                    </tab>\n                    <tab name='Runtime'>\n                        <RuntimePanel />\n                    </tab>\n                    <tab name='Documentation'>\n                        <DocumentationPanel />\n                    </tab>\n                    <tab name='Examples'>\n                        <ExamplesPanel />\n                    </tab>\n                </Tabs>\n                <EditorBar \n                    errorText = {this.state.error}\n                    errorLocation = {this.state.errorLocation}\n                />\n            </div>\n        );\n}\n}","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { Network } from 'vis';\n\nexport class Visualizer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.events.add('newStep', this.updateNetwork.bind(this));\n\n        this.visualizer = undefined;\n\n        this.nodes = [];\n\n        this.nodeColors = {\n            color: {\n                background: '#e5ffff',\n                border: '#80cbc4'\n            }\n        }\n    }\n\n    componentDidMount() {\n        const container = document.getElementById('vis-container');\n        const options = {\n            physics: false,\n            autoResize: true,\n            width: '',\n            height: '',\n            layout: {\n                hierarchical: {\n                    direction: 'UD'\n                }\n            }\n        }\n        this.visualizer = new Network(container, {}, options);\n        this.visualizer.on('click', (properties) => {\n            this.events.dispatch('nodeClicked', properties.nodes[0]);\n        });\n        const network = container.firstElementChild;\n        network.style.backgroundColor = '#1D1F21';\n        const canvas = network.firstElementChild;\n        canvas.height = '';\n        canvas.width = '';\n    }\n\n    async updateNetwork(step) {\n        step = step[0];\n        const newStep = JSON.parse(JSON.stringify(step));\n        this.nodes = newStep.nodes;\n        newStep.nodes = newStep.nodes.map(node => {\n            delete node.prop;\n            Object.assign(node, this.nodeColors);\n            return node;\n        })\n        this.visualizer.setData(newStep);\n    }\n\n    componentWillUnmount() {\n        this.visualizer.destroy();\n        this.visualizer = null;\n        this.events.destroy('newStep', this.updateNetwork);\n    }\n\n    render() {\n        return (\n            <div id='vis-container' className=\"Visualizer\"></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../EventManager';\nimport { Button, Dropdown, Icon, Menu } from 'antd';\n\nexport class VisualizerBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.style = {\n            height: '10%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        };\n\n        this.state = {\n            selected: null\n        }\n\n        this.executeFunction = props.executeFunction;\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = ({ key }) => {\n        this.setState({\n            selected: key\n        });\n    }\n\n    runFunction = () => {\n        if (this.state.selected) {\n            this.executeFunction(this.state.selected);\n            this.events.dispatch('setTab', 'Runtime');\n        }\n    }\n\n    createMenu = (items) => {\n        return (\n            <Menu onClick={this.handleChange}>\n                {\n                    items.map(item => {\n                        return <Menu.Item key={item}>\n                            <a>\n                                {item}\n                            </a>\n                        </Menu.Item>\n                    })\n                }\n            </Menu>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"VisualizerBar\">\n                {\n                    this.props.items.length > 0 ?\n                        <Dropdown overlay={this.createMenu(this.props.items)} trigger={['click']}>\n                            {\n                                this.state.selected ?\n                                    <a className=\"ant-dropdown-link\" href=\"#\">\n                                        {this.state.selected} <Icon type=\"down\" />\n                                    </a> :\n                                    <a className=\"ant-dropdown-link\" href=\"#\">\n                                        Functions <Icon type=\"down\" />\n                                    </a>\n                            }\n                        </Dropdown> :\n                        <a className=\"ant-dropdown-link\" href=\"#\">\n                            Functions\n                        </a>\n                }\n                <Button type=\"primary\" onClick={this.runFunction}>Run</Button>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Visualizer } from '../outsiders/visjs/Visualizer';\nimport { VisualizerBar } from '../bars/VisualizerBar';\n\nexport class VisualizerPanel extends Component {\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n        this.updateDimensions();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    updateDimensions() {\n        const tabEl = document.getElementById('tabButtons');\n        const tabSize = tabEl.getClientRects()[0];\n        const fillerEl = document.getElementById('filler');\n        fillerEl.style.height = tabSize.height + 'px';\n    }\n\n    render() {\n        return (\n            <div className=\"VisualizerPanel\">\n                <div className=\"container\">\n                    <div id=\"filler\"></div>\n                    <Visualizer />\n                </div>\n                <VisualizerBar items={this.props.items} executeFunction={this.props.executeFunction} />\n            </div>\n        );\n    }\n}","import { events } from './EventManager';\n\nexport class Interpreter {\n    scope = [{}];\n    typeParse = {\n        'number': this.parseNumber.bind(this),\n        'bool': this.parseBool.bind(this),\n        'Node': this.parseNode.bind(this),\n        'void': () => undefined\n    }\n\n    constructor() {\n        this.events = events.getInstance();\n        this.idCount = 0;\n        this.actionList = [];\n        this.currentFunction = '';\n    }\n\n    hasCode() {\n        return !!this.code;\n    }\n\n    setCode(code) {\n        this.clearScope();\n        this.code = code;\n        this.setGlobal();\n    }\n\n    executeFunction(functionName, functionParameters = [], initial = false) {\n        const fun = this.getFunction(functionName);\n        if (fun) {\n            this.currentFunction = functionName;\n            const scope = fun.parameters ? this.createFunctionScope(fun)(functionParameters) : {};\n            this.scope.push(scope);\n            const returnValue = this.executeBlock(fun.block, fun.type);\n            this.scope.pop();\n            if (initial) {\n                this.events.dispatch('updateHistory', this.actionList);\n            }\n            return returnValue;\n        }\n    }\n\n    executeBlock(block, functionType,) {\n        let returnValue;\n        (block || []).some(op => {\n            const ope = JSON.parse(JSON.stringify(op));\n            switch (ope.operation) {\n                case 'Declaration':\n                    this.handleDeclaration(ope, this.lastScope());\n                    break;\n                case 'Attribution':\n                    this.handleAttribution(ope, this.lastScope());\n                    break;\n                case 'Function':\n                    this.executeFunction(ope.name, ope.parameters);\n                    break;\n                case 'if':\n                    this.handleIf(ope);\n                    break;\n                case 'while':\n                    this.handleWhile(ope);\n                    break;\n                case 'Return':\n                    returnValue = this.handleReturn(ope, functionType);\n                    return true;\n                default: return false;\n            }\n            const node = this.findGlobalNode();\n            this.addStep(node, ope);\n            return false;\n        });\n        return returnValue;\n    }\n\n    findGlobalNode() {\n        const global = this.scope[1];\n        const keys = Object.keys(global);\n        let result;\n        keys.some(key => {\n            if (global[key].type === 'Node') {\n                result = global[key];\n                return true;\n            }\n            return false;\n        });\n        return result;\n    }\n\n    getFunction(functionName) {\n        let result;\n        this.code.functions.some(fun => {\n            if (fun.name === functionName) {\n                result = fun;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    }\n\n    clearScope() {\n        this.scope = [{}];\n        this.actionList = [];\n    }\n\n    setGlobal() {\n        this.clearScope();\n        this.scope[0]['Node'] = this.createFunctionScope(this.code.node);\n        this.addScope(this.code);\n    }\n\n    createFunctionScope(fun) {\n        return (values) => {\n            const parameters = this.parseParameters(fun.parameters);\n            const keys = Object.keys(parameters);\n            for (let i = 0; i < keys.length; i++) {\n                parameters[keys[i]] = values[i] ? this.typeParse[parameters[keys[i]].type](values[i]) : { type: 'Node', value: null };\n            }\n            return parameters;\n        };\n    }\n\n    lastScope() {\n        return this.scope[this.scope.length - 1];\n    }\n\n    addScope(block) {\n        const layer = {};\n        block.attributions && block.attributions.forEach(op => {\n            switch (op.operation) {\n                case 'Declaration':\n                    this.handleDeclaration(op, layer);\n                    break;\n                case 'Attribution':\n                    this.handleAttribution(op, layer);\n                    break;\n                default: break;\n            }\n        });\n        this.scope.push(layer);\n    }\n\n    parseParameters(parameters) {\n        const result = {}\n        const keys = Object.keys(parameters);\n        keys.forEach(key => {\n            result[key] = {\n                type: parameters[key]\n            }\n        });\n        return result;\n    }\n\n    isNull(variable) {\n        return variable.type === 'Node' && variable.value === null;\n    }\n\n    parseNode(node) {\n        if (this.isNull(node)) {\n            return node;\n        }\n        const name = node.name;\n        const parameters = node.parameters;\n        if (name !== 'Node') {\n            if (node.operation === 'Function') {\n                return this.executeFunction(name, parameters);\n            }\n            const memValue = this.getValueFromMemory(node, this.lastScope());\n            if (memValue) {\n                return memValue;\n            }\n            console.error(`${parameters} not a Node`);\n            return;\n        }\n        if (!Array.isArray(parameters)) {\n            if (!(parameters === null)) {\n                console.error(`${parameters} not a Node`);\n                return;\n            }\n        }\n        const value = this.scope[0]['Node'](parameters);\n        return {\n            type: 'Node',\n            value\n        }\n    }\n\n    parseNumber(variable) {\n        if (variable === undefined) return variable;\n        if (variable.operation === 'Function') {\n            return this.executeFunction(variable.name, variable.parameters);\n        }\n        const memValue = this.getValueFromMemory(variable, this.lastScope());\n        if (memValue) {\n            return memValue;\n        }\n        const value = variable.value;\n        const result = Number(value);\n        if (!isNaN(result)) {\n            variable.value = result;\n            return variable;\n        }\n        if (variable.operation) {\n            const operationResult = this.parseNumberOperation(variable.left, variable.right, variable.operation);\n            delete variable.left;\n            delete variable.right;\n            delete variable.operation;\n            variable.value = operationResult;\n            variable.type = 'number';\n            return variable;\n        }\n        console.error(`Value ${value} is not a number`);\n    }\n\n    parseNumberOperation(left, right, op) {\n        left = this.parseNumber(left).value;\n        right = this.parseNumber(right).value;\n        const operators = {\n            '+': (d1, d2) => d1 + d2,\n            '-': (d1, d2) => d1 - d2,\n            '*': (d1, d2) => d1 * d2,\n            '/': (d1, d2) => d1 / d2,\n        }\n        return operators[op](left, right);\n    }\n\n    parseBool(op) {\n        if (op.operation === 'Function') {\n            return this.executeFunction(op.name, op.parameters);\n        }\n        const memValue = this.getValueFromMemory(op, this.lastScope());\n        if (memValue) {\n            return memValue;\n        }\n\n        let value = this.toBoolean(op.value);\n        if (value !== undefined) {\n            op.value = value;\n            return op;\n        }\n        if (op.operation) {\n            value = this.parseBoolOperator(op.operation, op.left, op.right);\n            op.value = value;\n            delete op.operation;\n            delete op.left;\n            delete op.right;\n            return op;\n        }\n    }\n\n    parseBoolOperator(operator, left, right) {\n        let sides;\n        switch (operator) {\n            case '||': return this.parseBool(left).value || this.parseBool(right).value;\n            case '&&': return this.parseBool(left).value && this.parseBool(right).value;\n            case '<': return this.parseNumber(left).value < this.parseNumber(right).value;\n            case '>': return this.parseNumber(left).value > this.parseNumber(right).value;\n            case '<=': return this.parseNumber(left).value <= this.parseNumber(right).value;\n            case '>=': return this.parseNumber(left).value >= this.parseNumber(right).value;\n            case '==':\n                sides = this.getBothSides(left, right);\n                if (sides) {\n                    return sides[0] === sides[1];\n                }\n                break;\n            case '!=':\n                sides = this.getBothSides(left, right);\n                if (sides) {\n                    return sides[0] !== sides[1];\n                }\n                break;\n            default: break;\n        }\n    }\n\n    toBoolean(value) {\n        switch (value) {\n            case 'true': return true;\n            case 'false': return false;\n            default: break;\n        }\n    }\n\n    getBothSides(left, right) {\n        try {\n            const memLeft = this.getValueFromMemory(left, this.lastScope());\n            const memRight = this.getValueFromMemory(right, this.lastScope());\n            if (memLeft && memRight) {\n                return [memLeft.value, memRight.value];\n            }\n            if (memLeft) {\n                const type = memLeft.type;\n                const rightValue = this.typeParse[type](right);\n                return [memLeft.value, rightValue.value];\n            }\n            if (memRight) {\n                const type = memRight.type;\n                const leftValue = this.typeParse[type](left);\n                return [leftValue.value, memRight.value];\n            }\n            left = this.parseNumber(left);\n            right = this.parseNumber(right);\n            return [left, right]\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    handleDeclaration(com, scope) {\n        if (scope[com.variable]) {\n            console.error(`Variable ${com.variable} already declared`);\n        } else {\n            const parsedValue = this.typeParse[com.type](com.value);\n            if (parsedValue !== undefined) {\n                scope[com.variable] = parsedValue;\n                return true;\n            }\n            return false;\n        }\n    }\n\n    handleAttribution(com, scope) {\n        this.sustituteValueInMemory(com.variable, scope, com.value);\n    }\n\n    handleReturn(com, type) {\n        return this.typeParse[type](com.value);\n    }\n\n    getLastAccess(com) {\n        const arr = JSON.parse(JSON.stringify(com.variable instanceof Array ? com.variable : [com.variable]));\n        const arrayVar = arr.slice(1);\n        return arrayVar.pop();\n    }\n\n    handleIf(ifBlock) {\n        const condition = JSON.parse(JSON.stringify(ifBlock.condition));\n        const parsedCondition = this.parseBool(condition);\n        if (parsedCondition.value) {\n            this.scope.push({});\n            this.executeBlock(ifBlock.block);\n            this.scope.pop();\n        } else {\n            if (ifBlock.else) {\n                this.scope.push({});\n                this.executeBlock(ifBlock.else);\n                this.scope.pop();\n            }\n        }\n    }\n\n    handleWhile(whileBlock) {\n        this.scope.push({});\n        while (true) {\n            const condition = JSON.parse(JSON.stringify(whileBlock.condition));\n            const parsedCondition = this.parseBool(condition);\n            if (!parsedCondition.value) {\n                this.scope.pop();\n                return;\n            }\n            this.executeBlock(whileBlock.block);\n        }\n    }\n\n    sustituteValueInMemory(variable, scope, newValue) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        let ret = scope[arrayVar[0]];\n        if (!ret) {\n            for (let i = this.scope.length - 1; i >= 0; i--) {\n                ret = this.scope[i][arrayVar[0]];\n                if (ret) {\n                    if (arrayVar.length === 1) {\n                        this.scope[i][arrayVar[0]] = this.typeParse[this.scope[i][arrayVar[0]].type](newValue);\n                        return;\n                    }\n                    break;\n                }\n            }\n            if (!ret) {\n                return console.error(`Variable ${arrayVar[0]} not found`);\n            }\n        }\n        const rest = arrayVar.slice(1);\n        const last = rest.pop();\n        rest.forEach(element => {\n            if (element.type === 'Object') {\n                ret = ret.value[element.name];\n                if (ret === undefined) {\n                    console.error(`Property ${element.name} not found`);\n                }\n            } else if (element.type === 'Array') {\n                ret = ret.value[this.parseNumber(element.index)];\n                if (!ret) {\n                    console.error(`Index ${element.index} not found`);\n                }\n            }\n        });\n        if (last.type === 'Object') {\n            if (ret.value[last.name] !== undefined) {\n                ret.value[last.name] = this.typeParse[ret.value[last.name].type](newValue);\n            } else {\n                console.error(`Property ${last.name} not found`);\n            }\n        } else if (last.type === 'Array') {\n            ret.value[this.parseNumber(last.index)] = newValue;\n        }\n    }\n\n    getValueFromMemory(variable, scope, father) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        return this.getVarFromArray(arrayVar, scope, father);\n    }\n\n    getVarFromArray(variable, scope, father = false) {\n        let ret = scope[variable[0]];\n        if (!ret) {\n            for (let i = this.scope.length - 1; i >= 0; i--) {\n                ret = this.scope[i][variable[0]];\n                if (ret) {\n                    break;\n                }\n            }\n            if (!ret) {\n                return undefined;\n            }\n        }\n        const rest = variable.slice(1);\n        if (father) {\n            rest.pop();\n        }\n        rest.forEach(element => {\n            if (element.type === 'Object') {\n                ret = ret.value[element.name];\n                if (ret === undefined) {\n                    console.error(`Property ${element.name} not found`);\n                }\n            } else if (element.type === 'Array') {\n                ret = ret.value[this.parseNumber(element.index)];\n                if (!ret) {\n                    console.error(`Index ${element.index} not found`);\n                }\n            }\n        });\n        return ret;\n    }\n\n    addStep(node, op) {\n        if (node) {\n            if (op.operation === 'Attribution' || op.operation === 'Declaration') {\n                const step = Object.assign({ operation: op, functionName: this.currentFunction }, this.createStepFromNode(node));\n                this.actionList.push(step);\n            }\n        }\n    }\n\n    createStepFromNode(node) {\n        this.idCount = 0;\n        return this.createStepFromNodeRec(node, 0, 0);\n    }\n\n    createStepFromNodeRec(node, id, level) {\n        const data = {\n            nodes: [],\n            edges: []\n        };\n        if (!node.value) return data;\n        if (node.$been !== undefined) return {\n            id: node.$been\n        };\n        data.nodes.push({ id, label: String(id), prop: node.value, level });\n        node.$been = id;\n        const keys = Object.keys(node.value);\n        let next;\n        level++;\n        keys.forEach(key => {\n            if (node.value[key].type === 'Node' && node.value[key].value !== null) {\n                this.idCount++;\n                next = this.idCount;\n                const res = this.createStepFromNodeRec(node.value[key], next, level);\n                if ('id' in res) {\n                    data.edges.push({ from: id, to: res.id, arrows: 'to' });\n                } else {\n                    data.edges.push({ from: id, to: next, arrows: 'to' });\n                    data.edges = data.edges.concat(res.edges);\n                    data.nodes = data.nodes.concat(res.nodes);\n                }\n            }\n        });\n        delete node.$been;\n        return data;\n    }\n}","import React, { Component } from 'react';\nimport { EditorPanel } from './EditorPanel';\nimport { VisualizerPanel } from './VisualizerPanel';\nimport { Interpreter } from '../Interpreter';\n\nexport class MainPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        }\n\n        this.interpreter = new Interpreter();\n    }\n\n    updateCode = (code) => {\n        this.updateItems(code.functions);\n        this.interpreter.setCode(code);\n    }\n\n    updateItems(items) {\n        const newItems = items.map(item => {\n            return item.name\n        }); \n        this.setState({\n            items: newItems\n        });\n    }\n\n    executeFunction = (functionName) => {\n        if (this.interpreter.hasCode()) {\n            this.interpreter.executeFunction(functionName, [], true);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MainPanel\">\n                <EditorPanel updateCode={this.updateCode.bind(this)}/>\n                <VisualizerPanel items={this.state.items} executeFunction={this.executeFunction.bind(this)}/>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport newLogo from '../images/newLogo.svg';\n\nexport class Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <img src={newLogo} alt=''></img>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './styles/css/index.css';\nimport { MainPanel } from './panels/MainPanel';\nimport { Header } from './bars/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MainPanel />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}