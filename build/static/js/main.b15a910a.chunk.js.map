{"version":3,"sources":["images/newLogo.svg","EventManager.js","outsiders/ace/Ace.js","bars/EditorBar.js","Tabs.js","panels/DocumentationPanel.js","Step.js","History.js","panels/Runtime/Humanizer.js","panels/Runtime/HistoryBar.js","panels/Runtime/RuntimePanel.js","panels/ExamplesTab/ExamplesPanel.js","panels/EditorPanel.js","outsiders/visjs/Visualizer.js","bars/VisualizerBar.js","panels/VisualizerPanel.js","Interpreter.js","panels/MainPanel.js","bars/Header.js","App.js","registerServiceWorker.js","index.js","grammar/grammar.js"],"names":["module","exports","__webpack_require__","p","EventManager","events","add","name","callback","Signal","dispatch","_len","arguments","length","params","Array","_key","remove","instance","getInstance","AceEditor","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setCode","code","editor","getSession","setValue","undefined","text","panelCallback","inherits","createClass","key","value","_this2","edit","config","set","setTheme","setUseWorker","setTabSize","setOptions","fontFamily","showPrintMargin","on","e","getValue","react_default","a","createElement","id","className","Component","EditorBar","apply","errorText","errorLocation","Tabs","onClick","setState","visibleTab","tab","tabs","setTab","bind","assertThisInitialized","children","forEach","type","push","elements","state","tabName","map","es_button","style","display","DocumentationPanel","overflowY","Step","info","nodes","edges","setUp","operation","functionName","node","prop","edge","from","to","keys","getNodes","getEdges","History","al","actionList","currentStep","step","sl","action","displayStep","idx","getVisualStep","Humanizer","types","number","humanizeNumber","bool","humanizeBool","Node","humanizeNode","humanizeDeclaration","humanizeAttribution","humanizeFunction","humanizeIf","humanizeWhile","concat","variable","humanizeVariable","op","left","right","isArray","condition","humanizeParameters","parameters","res","reduce","current","parameter","endsWith","slice","arrayVar","first","access","index","HistoryBar","onChange","history","jumpToStep","stepName","humanizer","humanizeStep","numberOfItems","updateHistory","setStepList","pagination","total","RuntimePanel","HistoryBar_HistoryBar","examples","require","ExamplesPanel","_ref","split","menu","mode","SubMenu_default","title","subKey","Item","parseExaples","EditorPanel","textChanged","parseText","error","updateCode","parsed","parse","err","parseErrorMessage","setErrorMessage","message","location","start","line","column","Tabs_Tabs","Ace_AceEditor","RuntimePanel_RuntimePanel","DocumentationPanel_DocumentationPanel","ExamplesPanel_ExamplesPanel","EditorBar_EditorBar","Visualizer","updateNetwork","visualizer","nodeColors","color","background","border","container","document","getElementById","Network","physics","autoResize","width","height","layout","hierarchical","direction","properties","console","log","network","firstElementChild","backgroundColor","canvas","_updateNetwork","asyncToGenerator","regenerator_default","mark","_callee","newStep","wrap","_context","prev","next","JSON","stringify","assign","setData","stop","_x","destroy","VisualizerBar","handleChange","selected","runFunction","executeFunction","createMenu","items","item","justifyContent","alignItems","dropdown","overlay","trigger","href","icon","VisualizerPanel","window","addEventListener","updateDimensions","removeEventListener","tabSize","getClientRects","Visualizer_Visualizer","VisualizerBar_VisualizerBar","Interpreter","scope","typeParse","parseNumber","parseBool","parseNode","void","idCount","currentFunction","clearScope","setGlobal","functionParameters","initial","fun","getFunction","createFunctionScope","returnValue","executeBlock","block","pop","functionType","some","ope","handleDeclaration","lastScope","handleAttribution","handleIf","handleWhile","handleReturn","findGlobalNode","addStep","result","global","functions","addScope","values","parseParameters","i","_this3","layer","attributions","isNull","memValue","getValueFromMemory","Number","isNaN","operationResult","parseNumberOperation","+","d1","d2","-","*","/","toBoolean","parseBoolOperator","operator","sides","getBothSides","memLeft","memRight","rightValue","com","parsedValue","sustituteValueInMemory","ifBlock","else","whileBlock","newValue","_this4","ret","rest","last","element","father","getVarFromArray","_this5","createStepFromNode","createStepFromNodeRec","level","_this6","data","$been","label","String","arrows","MainPanel","updateItems","interpreter","hasCode","newItems","EditorPanel_EditorPanel","VisualizerPanel_VisualizerPanel","Header","src","newLogo","alt","App","Header_Header","MainPanel_MainPanel","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","peg$SyntaxError","expected","found","Error","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","sort","join","describeExpected","describeFound","SyntaxError","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","M","peg$parseM","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","peg$c3","peg$c4","eq","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","l","c","peg$c30","f","peg$c31","peg$c32","peg$c33","atr","peg$c34","cHead","cTail","d","peg$c35","vari","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","head","tail","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","n","peg$c47","peg$c48","peg$c49","r","peg$c50","peg$c51","peg$c52","v","peg$c53","peg$c54","peg$c55","peg$classExpectation","peg$c56","peg$c57","peg$c58","peg$c59","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$otherExpectation","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","b","peg$c85","peg$c86","peg$c87","peg$c88","t","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","vHead","vTail","aux","val","peg$c110","peg$c111","peg$c112","peg$currPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s3","s5","s7","s9","s11","s13","substr","peg$parse_","peg$parseId","peg$parseParameters","peg$parseNode","s2","s4","peg$parseLineCommand","peg$parseLineCommands","peg$parseFunction","peg$parseFunctions","peg$parseClass","peg$parseRelational","peg$parseCompareOperators","peg$parseEquals","peg$parseCompares","peg$parseExpression","peg$parseB","peg$parseAdditive","peg$parseBoolOperator","peg$parseMult","peg$parsePlusMinus","peg$parsePrimary","peg$parseMultDiv","peg$parseOneNumber","peg$parseNumber","peg$parseBool","peg$parseNull","peg$parseFunctionCall","peg$parseIdRS","peg$parse_1","peg$parseReturn","peg$parseType","peg$parseDeclaration","peg$parseAttribution","peg$parseBlockCommand","peg$parseIf","peg$parseCondition","peg$parseFunctionBlock","peg$parseWhile","peg$parseOneChar","peg$parseUnderline","peg$parseRS","s6","s8","peg$parseFunctionAccess","peg$parseArrayAccess","peg$parseObjectAccess","test","charAt","peg$parseVar","peg$parseElseB","peg$parseElseA","peg$parseCommands","s15"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8iBCElCC,wCACFC,OAAS,QAETC,IAAM,SAACC,EAAMC,GACTH,EAAOE,GAAQ,IAAIE,SACnBJ,EAAOE,GAAMD,IAAIE,SAGrBE,SAAW,SAACH,GAAoB,QAAAI,EAAAC,UAAAC,OAAXC,EAAW,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAXF,EAAWE,EAAA,GAAAJ,UAAAI,GAC5BX,EAAOE,IAASF,EAAOE,GAAMG,SAASI,SAG1CG,OAAS,SAACV,EAAMC,GACZH,EAAOE,IAASF,EAAOE,GAAMU,OAAOT,KAI/BH,EAAU,WACnB,IAAIa,EASJ,MAAO,CACHC,YARmB,WAInB,OAHKD,IACDA,EAAW,IAAId,GAEZc,IAPQ,mBCfVE,EAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAUVQ,QAAU,SAACC,GACPA,EAAOA,EAAK,GACRR,EAAKS,QACLT,EAAKS,OAAOC,aAAaC,SAASH,IAXtCR,EAAKlB,OAASA,EAAOc,cACrBI,EAAKlB,OAAOC,IAAI,UAAWiB,EAAKO,SAEhCP,EAAKS,YAASG,EACdZ,EAAKa,KAAO,GACZb,EAAKc,cAAgBf,EAAMe,cARZd,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAJ,EAAAC,GAAAG,OAAAe,EAAA,EAAAf,CAAAJ,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,WAmBwB,IAAAC,EAAAhB,KAChBA,KAAKM,OAASW,eAAK,iBACnBC,SAAOC,IAAI,WAAY,8BACvBnB,KAAKM,OAAOc,SAAS,4BACrBpB,KAAKM,OAAOC,aAAac,cAAa,GACtCrB,KAAKM,OAAOC,aAAae,WAAW,GACpCtB,KAAKM,OAAOiB,WAAW,CACnBC,WAAY,SACZC,iBAAiB,IAGrBzB,KAAKM,OAAOC,aAAamB,GAAG,SAAU,SAACC,GACnCX,EAAKL,cAAcK,EAAKV,OAAOC,aAAaqB,gBA/BxD,CAAAd,IAAA,SAAAC,MAAA,WAoCQ,OACIc,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAgBC,UAAU,YArC9CvC,EAAA,CAA+BwC,aCFlBC,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,OAAArC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,GAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAC,MAAApC,KAAAd,YAAA,OAAAY,OAAAc,EAAA,EAAAd,CAAAqC,EAAAxC,GAAAG,OAAAe,EAAA,EAAAf,CAAAqC,EAAA,EAAArB,IAAA,SAAAC,MAAA,WAEQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,YAAO/B,KAAKJ,MAAMyC,YAEtBR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,YAAO/B,KAAKJ,MAAM0C,qBARtCH,EAAA,CAA+BD,qCCElBK,EAAb,SAAA5C,GACI,SAAA4C,EAAY3C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACf1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KAAMJ,KAqBV4C,QAAU,SAACb,GACP9B,EAAK4C,SAAS,CAAEC,WAAYf,EAAEgB,OApB9B9C,EAAK+C,KAAO,GAEZ/C,EAAKlB,OAASA,EAAOc,cAErBI,EAAKlB,OAAOC,IAAI,SAAUiB,EAAKgD,OAAOC,KAAZhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,OAEzBD,EAAMoD,UAAY,IAAIC,QAAQ,SAAAN,GACV,QAAbA,EAAIO,MACJrD,EAAK+C,KAAKO,KAAK,CACXtE,KAAM8D,EAAI/C,MAAMf,MAAQ,GACxBuE,SAAUT,EAAI/C,MAAMoD,UAAY,OAI5CnD,EAAKwD,MAAQ,CACTX,WAAY7C,EAAK+C,KAAKzD,QAAUU,EAAK+C,KAAK,GAAG/D,MAlBlCgB,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAyC,EAAA5C,GAAAG,OAAAe,EAAA,EAAAf,CAAAyC,EAAA,EAAAzB,IAAA,SAAAC,MAAA,SA2BWuC,GACHtD,KAAKyC,SAAS,CAAEC,WAAYY,EAAQ,OA5B5C,CAAAxC,IAAA,SAAAC,MAAA,WA+Ba,IAAAC,EAAAhB,KACL,OACI6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaD,GAAG,cAEvBhC,KAAK4C,KAAKW,IAAI,SAAAZ,GACV,OAAOd,EAAAC,EAAAC,cAAAyB,EAAA,GAAQN,KAAMlC,EAAKqC,MAAMX,aAAeC,EAAI9D,KAAO,UAAY,UAAWiC,IAAK6B,EAAI9D,KAAM2D,QAASxB,EAAKwB,QAAQM,KAAK9B,EAAM,CAAE2B,IAAKA,EAAI9D,QAAU8D,EAAI9D,SAItKgD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEPjC,KAAK4C,KAAKW,IAAI,SAAAZ,GACV,OACId,EAAAC,EAAAC,cAAA,OAAKjB,IAAK6B,EAAI9D,KAAM4E,MAAOzC,EAAKqC,MAAMX,aAAeC,EAAI9D,KAAO,GAAK,CAAC6E,QAAS,SAC1Ef,EAAIS,kBA9CzCb,EAAA,CAA0BL,aCFbyB,EAAb,SAAAhE,GAAA,SAAAgE,IAAA,OAAA7D,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,GAAA7D,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAvB,MAAApC,KAAAd,YAAA,OAAAY,OAAAc,EAAA,EAAAd,CAAA6D,EAAAhE,GAAAG,OAAAe,EAAA,EAAAf,CAAA6D,EAAA,EAAA7C,IAAA,SAAAC,MAAA,WAEQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBwB,MAAO,CAACC,QAAS,QAASE,UAAW,SACrE/B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,iPAIAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACK,2CAIbF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qVAKAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACK,WACA,sBACA,kBACA,OAIbF,EAAAC,EAAAC,cAAA,6FAGAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,sIAGAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACK,0BAIbF,EAAAC,EAAAC,cAAA,sRAIAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,qLAGAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,6NAIAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACK,gCACA,yBACA,2BACA,kCACA,iBACA,uCACA,gCACA,cACA,kCACA,UACA,SAIbF,EAAAC,EAAAC,cAAA,sOA7EhB4B,EAAA,CAAwCzB,+BCF3B2B,EAAb,WAII,SAAAA,EAAYC,GAAOhE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,GAAA7D,KAHnB+D,MAAQ,GAGU/D,KAFlBgE,MAAQ,GAGJhE,KAAKiE,MAAMH,GALnB,OAAAhE,OAAAe,EAAA,EAAAf,CAAA+D,EAAA,EAAA/C,IAAA,QAAAC,MAAA,SAQU+C,GAAM,IAAAjE,EAAAG,KACRA,KAAKkE,UAAYJ,EAAKI,UACtBlE,KAAKmE,aAAeL,EAAKK,cACxBL,EAAKC,OAAS,IAAId,QAAQ,SAAAmB,GACvBvE,EAAKkE,MAAMK,EAAKpC,IAAM,CAClBqC,KAAMD,EAAKC,aAERD,EAAKC,KACZxE,EAAKkE,MAAMK,EAAKpC,IAAI8B,KAAOM,KAE9BN,EAAKE,OAAS,IAAIf,QAAQ,SAAAqB,GACvBzE,EAAKmE,MAAMb,KAAKmB,GAChBzE,EAAKkE,MAAMO,EAAKC,MAAMD,KAAO,CACzBE,GAAIF,EAAKE,QArBzB,CAAA1D,IAAA,WAAAC,MAAA,WA2BQ,OAAOf,KAAKgE,QA3BpB,CAAAlD,IAAA,WAAAC,MAAA,WA8Be,IAAAC,EAAAhB,KACP,OAAOF,OAAO2E,KAAKzE,KAAK+D,OAAOR,IAAI,SAAAzC,GAAG,OAAIE,EAAK+C,MAAMjD,GAAKgD,SA/BlE,CAAAhD,IAAA,gBAAAC,MAAA,WAmCQ,MAAO,CACHgD,MAAO/D,KAAK0E,WACZV,MAAOhE,KAAK2E,gBArCxBd,EAAA,GCGae,EAAb,WACI,SAAAA,EAAYC,GAAK/E,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,GACb5E,KAAKrB,OAASA,EAAOc,cACrBO,KAAK8E,WAAaD,GAAM,GACxB7E,KAAK+E,YAAc,EAJ3B,OAAAjF,OAAAe,EAAA,EAAAf,CAAA8E,EAAA,EAAA9D,IAAA,WAAAC,MAAA,SAOaiE,GACLhF,KAAK8E,WAAW3B,KAAK,IAAIU,EAAKmB,MARtC,CAAAlE,IAAA,cAAAC,MAAA,SAWgBkE,GACRjF,KAAK8E,WAAaG,EAAG1B,IAAI,SAAA2B,GAAM,OAAI,IAAIrB,EAAKqB,KAC5ClF,KAAK+E,YAAc,EACnB/E,KAAKmF,gBAdb,CAAArE,IAAA,QAAAC,MAAA,WAkBQf,KAAK8E,WAAa,GAClB9E,KAAK+E,YAAc,IAnB3B,CAAAjE,IAAA,WAAAC,MAAA,WAuBQf,KAAK+E,YAAc/E,KAAK+E,YAAc,IAAM/E,KAAK8E,WAAW3F,OAASa,KAAK+E,YAAc/E,KAAK+E,YAAc,EAC3G/E,KAAKmF,gBAxBb,CAAArE,IAAA,WAAAC,MAAA,WA4BQf,KAAK+E,YAAmC,IAArB/E,KAAK+E,YAAoB/E,KAAK+E,YAAc/E,KAAK+E,YAAc,EAClF/E,KAAKmF,gBA7Bb,CAAArE,IAAA,aAAAC,MAAA,SAgCeqE,GACHA,GAAM,GAAKA,EAAMpF,KAAK8E,WAAW3F,SACjCa,KAAK+E,YAAcK,EACnBpF,KAAKmF,iBAnCjB,CAAArE,IAAA,cAAAC,MAAA,WAwCQ,IAAMiE,EAAOhF,KAAK8E,WAAW9E,KAAK+E,aAAaM,gBAC/CrF,KAAKrB,OAAOK,SAAS,UAAWgG,OAzCxCJ,EAAA,GCHaU,EAAb,oBAAAA,IAAAxF,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,GAAAtF,KACIuF,MAAQ,CACJC,OAAUxF,KAAKyF,eAAe3C,KAAK9C,MACnC0F,KAAQ1F,KAAK2F,aAAa7C,KAAK9C,MAC/B4F,KAAQ5F,KAAK6F,aAAa/C,KAAK9C,OAJvC,OAAAF,OAAAe,EAAA,EAAAf,CAAAwF,EAAA,EAAAxE,IAAA,eAAAC,MAAA,SAOiBiE,GACT,OAAQA,EAAKd,WACT,IAAK,cACD,OAAOlE,KAAK8F,oBAAoBd,GACpC,IAAK,cACD,OAAOhF,KAAK+F,oBAAoBf,GACpC,IAAK,WACD,OAAOhF,KAAKgG,iBAAiBhB,GACjC,IAAK,KACD,OAAOhF,KAAKiG,WAAWjB,GAC3B,IAAK,QACD,OAAOhF,KAAKkG,cAAclB,GAC9B,IAAK,SACD,OACJ,QAAS,OAAO,KArB5B,CAAAlE,IAAA,sBAAAC,MAAA,SAyBwBiE,GAChB,SAAAmB,OAAUnB,EAAK9B,KAAf,KAAAiD,OAAuBnB,EAAKoB,SAA5B,OAAAD,OAA0CnB,EAAKjE,MAAMmC,KAAOlD,KAAKuF,MAAMP,EAAKjE,MAAMmC,MAAM8B,EAAKjE,OAASf,KAAKgG,iBAAiBhB,EAAKjE,UA1BzI,CAAAD,IAAA,sBAAAC,MAAA,SA6BwBiE,GAChB,SAAAmB,OAAUnG,KAAKqG,iBAAiBrB,EAAKoB,UAArC,OAAAD,OAAoDnB,EAAKjE,MAAMmC,KAAOlD,KAAKuF,MAAMP,EAAKjE,MAAMmC,MAAM8B,EAAKjE,OAASf,KAAKgG,iBAAiBhB,EAAKjE,UA9BnJ,CAAAD,IAAA,iBAAAC,MAAA,SAiCmBuF,GACX,MAAqB,aAAjBA,EAAGpC,UACIlE,KAAKgG,iBAAiBM,GAE7BA,EAAGpC,UACH,IAAAiC,OAAWnG,KAAKyF,eAAea,EAAGC,MAAlC,KAAAJ,OAA2CG,EAAGpC,UAA9C,KAAAiC,OAA2DnG,KAAKyF,eAAea,EAAGE,OAAlF,KAEAnH,MAAMoH,QAAQH,EAAGvF,OACVf,KAAKqG,iBAAiBC,EAAGvF,OAE7BuF,EAAGvF,QA3ClB,CAAAD,IAAA,eAAAC,MAAA,SA8CiBuF,GACT,MAAqB,aAAjBA,EAAGpC,UACIlE,KAAKgG,iBAAiBM,GAE7BjH,MAAMoH,QAAQH,EAAGvF,OACVf,KAAKqG,iBAAiBC,EAAGvF,OAEhC1B,MAAMoH,QAAQH,EAAGvF,OACVf,KAAKqG,iBAAiBC,EAAGvF,OAE7BuF,EAAGvF,QAxDlB,CAAAD,IAAA,eAAAC,MAAA,SA2DiBuF,GACT,MAAqB,aAAjBA,EAAGpC,UACIlE,KAAKgG,iBAAiBM,GAE7BA,EAAGpC,UACH,IAAAiC,OAAWnG,KAAK2F,aAAaW,EAAGC,MAAhC,KAAAJ,OAAyCG,EAAGpC,UAA5C,KAAAiC,OAAyDnG,KAAK2F,aAAaW,EAAGE,OAA9E,KAEGF,EAAGvF,QAlElB,CAAAD,IAAA,aAAAC,MAAA,SAqEeuF,GACP,aAAAH,OAAcnG,KAAK2F,aAAaW,EAAGI,WAAnC,OAtER,CAAA5F,IAAA,gBAAAC,MAAA,SAyEkBuF,GACV,gBAAAH,OAAiBnG,KAAK2F,aAAaW,EAAGI,WAAtC,OA1ER,CAAA5F,IAAA,mBAAAC,MAAA,SA6EqBuF,GACb,OAAIjH,MAAMoH,QAAQH,GACPtG,KAAKqG,iBAAiBC,GAEjC,GAAAH,OAAUG,EAAGzH,KAAb,KAAAsH,OAAqBnG,KAAK2G,mBAAmBL,EAAGM,YAAhD,OAjFR,CAAA9F,IAAA,qBAAAC,MAAA,SAoFuB6F,GAAY,IAAA/G,EAAAG,KACrB6G,EAAMD,EAAWE,OAAO,SAACC,EAASC,GACpC,OAAOD,GAAWC,EAAU9D,KAAOrD,EAAK0F,MAAMyB,EAAU9D,MAAM8D,GAAanH,EAAKwG,iBAAiBW,IAAc,MAChH,KAAO,GACV,OAAIH,EAAII,SAAS,MACNJ,EAAIK,MAAM,GAAI,GAElBL,IA3Ff,CAAA/F,IAAA,mBAAAC,MAAA,SA8FqBqF,GACb,IAAMe,EAAWf,aAAoB/G,MAAQ+G,EAAW,CAACA,GACnDgB,EAAQD,EAAS,GAEvB,OADaA,EAASD,MAAM,GAChBJ,OAAO,SAACC,EAASM,GACzB,OAAON,GAA2B,WAAhBM,EAAOnE,KAAP,IAAAiD,OAA+BkB,EAAOxI,MAAtC,IAAAsH,OAAmDkB,EAAOC,MAA1D,OACnBF,OApGX9B,EAAA,GCMaiC,EAAb,SAAA5H,GACI,SAAA4H,EAAY3H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACf1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,KAAMJ,KAiBV4H,SAAW,SAACpC,GACRA,GAAY,EACZvF,EAAK4H,QAAQC,WAAWtC,GACxB,IAAMJ,EAAOnF,EAAK4H,QAAQ3C,WAAWM,GACrCvF,EAAK4C,SAAS,CACV0B,aAAca,EAAKb,aACnBwD,SAAU9H,EAAK+H,UAAUC,aAAa7C,EAAKd,WAC3C4D,cAAejI,EAAKwD,MAAMyE,gBAE9BjI,EAAKkI,iBAxBLlI,EAAKlB,OAASA,EAAOc,cAErBI,EAAKlB,OAAOC,IAAI,gBAAiBiB,EAAKkI,cAAcjF,KAAnBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,MAEjCA,EAAK4H,QAAU,IAAI7C,EAEnB/E,EAAK+H,UAAY,IAAItC,EAErBzF,EAAKwD,MAAQ,CACTyE,cAAe,EACf3D,aAAc,GACdwD,SAAU,IAdC9H,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAyH,EAAA5H,GAAAG,OAAAe,EAAA,EAAAf,CAAAyH,EAAA,EAAAzG,IAAA,gBAAAC,MAAA,SA+BkB+D,GACNA,IACAA,EAAaA,EAAW,GACxB9E,KAAKyH,QAAQO,YAAYlD,GACzB9E,KAAKyC,SAAS,CACV0B,aAAcW,EAAW,GAAIA,EAAW,GAAGX,aAAe,GAC1DwD,SAAU7C,EAAW,GAAK9E,KAAK4H,UAAUC,aAAa/C,EAAW,GAAGZ,WAAa,GACjF4D,cAAehD,EAAW3F,YAtC1C,CAAA2B,IAAA,SAAAC,MAAA,WA4CQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYjC,KAAKqD,MAAMc,cACvCtC,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAajC,KAAKqD,MAAMsE,WAGxC3H,KAAKqD,MAAMyE,cAAgB,EAAIjG,EAAAC,EAAAC,cAAAkG,EAAA,GAAYC,MAAkC,GAA3BlI,KAAKqD,MAAMyE,cAAoBN,SAAUxH,KAAKwH,WAAe,UAnDnID,EAAA,CAAgCrF,aCHnBiG,EAAb,SAAAxI,GAAA,SAAAwI,IAAA,OAAArI,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,GAAArI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAA/F,MAAApC,KAAAd,YAAA,OAAAY,OAAAc,EAAA,EAAAd,CAAAqI,EAAAxI,GAAAG,OAAAe,EAAA,EAAAf,CAAAqI,EAAA,EAAArH,IAAA,SAAAC,MAAA,WAEQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACqG,EAAD,WAJhBD,EAAA,CAAkCjG,+CCE5BmG,EAAWC,EAAQ,KAEZC,EAAb,SAAA5I,GACI,SAAA4I,EAAY3I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuI,IACf1I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyI,GAAApI,KAAAH,KAAMJ,KAKV4C,QAAU,SAAAgG,GAAW,IAEX9H,EAFW8H,EAAT1H,IACS2H,MAAM,KACL3B,OAAO,SAACC,EAASjG,GAAV,OAAkBiG,EAAQjG,IAAMuH,GACzDxI,EAAKlB,OAAOK,SAAS,UAAW0B,GAChCb,EAAKlB,OAAOK,SAAS,SAAU,SAP/Ba,EAAKlB,OAASA,EAAOc,cAHNI,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAyI,EAAA5I,GAAAG,OAAAe,EAAA,EAAAf,CAAAyI,EAAA,EAAAzH,IAAA,eAAAC,MAAA,WAeQ,IAAMwE,EAAQzF,OAAO2E,KAAK4D,GAC1B,OACIxG,EAAAC,EAAAC,cAAA2G,EAAA,GAAMC,KAAK,SAASnG,QAASxC,KAAKwC,SAE1B+C,EAAMhC,IAAI,SAAAzC,GACN,OACIe,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,CAAShB,IAAKA,EAAK+H,MAAO/H,GAElBhB,OAAO2E,KAAK4D,EAASvH,IAAMyC,IAAI,SAAAuF,GAC3B,OAAOjH,EAAAC,EAAAC,cAAA2G,EAAA,EAAMK,KAAN,CAAWjI,IAAKA,EAAI,IAAIgI,GAASA,WAxBhF,CAAAhI,IAAA,SAAAC,MAAA,WAoCQ,OAAOf,KAAKgJ,mBApCpBT,EAAA,CAAmCrG,aCGtB+G,EAAb,SAAAtJ,GACI,SAAAsJ,EAAYrJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiJ,IACfpJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmJ,GAAA9I,KAAAH,KAAMJ,KAeVsJ,YAAc,SAACxI,GACXb,EAAKa,KAAOA,EACZb,EAAKsJ,aAfLtJ,EAAKlB,OAASA,EAAOc,cACrBI,EAAKlB,OAAOC,IAAI,cAAeiB,EAAKqJ,aACpCrJ,EAAKa,KAAO,GACZb,EAAKuJ,WAAQ3I,EACbZ,EAAKyC,mBAAgB7B,EAErBZ,EAAKwD,MAAQ,CACT+F,MAAO,GACP9G,cAAe,IAEnBzC,EAAKwJ,WAAazJ,EAAMyJ,WAbTxJ,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAmJ,EAAAtJ,GAAAG,OAAAe,EAAA,EAAAf,CAAAmJ,EAAA,EAAAnI,IAAA,YAAAC,MAAA,WAuBQ,IACI,IAAMuI,EAASC,gBAAMvJ,KAAKU,MAC1BV,KAAKqJ,WAAWC,GAChBtJ,KAAKoJ,MAAQ,YACbpJ,KAAKsC,cAAgB,KACvB,MAAOkH,GACLxJ,KAAKyJ,kBAAkBD,GAN3B,QAQIxJ,KAAK0J,qBA/BjB,CAAA5I,IAAA,oBAAAC,MAAA,SAmCsBqI,GACdpJ,KAAKoJ,MAAQA,EAAMvK,KAAO,KAAOuK,EAAMO,QACvC3J,KAAKsC,cAAgB8G,EAAMQ,UAAN,QAAAzD,OAA0BiD,EAAMQ,SAASC,MAAMC,KAA/C,aAAA3D,OAA+DiD,EAAMQ,SAASC,MAAME,QACzG/J,KAAK0J,oBAtCb,CAAA5I,IAAA,kBAAAC,MAAA,WA0CQf,KAAKyC,SAAS,CACV2G,MAAOpJ,KAAKoJ,MACZ9G,cAAetC,KAAKsC,kBA5ChC,CAAAxB,IAAA,SAAAC,MAAA,WAiDQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAACiI,EAAD,KACInI,EAAAC,EAAAC,cAAA,OAAKlD,KAAK,QACNgD,EAAAC,EAAAC,cAACkI,EAAD,CACItJ,cAAiBX,KAAKkJ,YAAYpG,KAAK9C,SAG/C6B,EAAAC,EAAAC,cAAA,OAAKlD,KAAK,WACNgD,EAAAC,EAAAC,cAACmI,EAAD,OAEJrI,EAAAC,EAAAC,cAAA,OAAKlD,KAAK,iBACNgD,EAAAC,EAAAC,cAACoI,EAAD,OAEJtI,EAAAC,EAAAC,cAAA,OAAKlD,KAAK,YACNgD,EAAAC,EAAAC,cAACqI,EAAD,QAGRvI,EAAAC,EAAAC,cAACsI,EAAD,CACIhI,UAAarC,KAAKqD,MAAM+F,MACxB9G,cAAiBtC,KAAKqD,MAAMf,qBArEhD2G,EAAA,CAAiC/G,gDCNpBoI,EAAb,SAAA3K,GACI,SAAA2K,EAAY1K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsK,IACfzK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwK,GAAAnK,KAAAH,KAAMJ,KAEDjB,OAASA,EAAOc,cAErBI,EAAKlB,OAAOC,IAAI,UAAWiB,EAAK0K,cAAczH,KAAnBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,MAE3BA,EAAK2K,gBAAa/J,EAElBZ,EAAKkE,MAAQ,GAEblE,EAAK4K,WAAa,CACdC,MAAO,CACHC,WAAY,UACZC,OAAQ,YAdD/K,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAwK,EAAA3K,GAAAG,OAAAe,EAAA,EAAAf,CAAAwK,EAAA,EAAAxJ,IAAA,oBAAAC,MAAA,WAqBQ,IAAM8J,EAAYC,SAASC,eAAe,iBAY1C/K,KAAKwK,WAAa,IAAIQ,UAAQH,EAAW,GAXzB,CACZI,SAAS,EACTC,YAAY,EACZC,MAAO,GACPC,OAAQ,GACRC,OAAQ,CACJC,aAAc,CACVC,UAAW,SAKvBvL,KAAKwK,WAAW9I,GAAG,QAAS,SAAC8J,GACzBC,QAAQC,IAAIF,KAEhB,IAAMG,EAAUd,EAAUe,kBAC1BD,EAAQlI,MAAMoI,gBAAkB,UAChC,IAAMC,EAASH,EAAQC,kBACvBE,EAAOV,OAAS,GAChBU,EAAOX,MAAQ,KAzCvB,CAAArK,IAAA,gBAAAC,MAAA,eAAAgL,EAAAjM,OAAAkM,EAAA,EAAAlM,CAAAmM,EAAAnK,EAAAoK,KAAA,SAAAC,EA4CwBnH,GA5CxB,IAAAoH,EAAApL,EAAAhB,KAAA,OAAAiM,EAAAnK,EAAAuK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OA6CQxH,EAAOA,EAAK,GACNoH,EAAUK,KAAKlD,MAAMkD,KAAKC,UAAU1H,IAC1ChF,KAAK+D,MAAQqI,EAAQrI,MACrBqI,EAAQrI,MAAQqI,EAAQrI,MAAMR,IAAI,SAAAa,GAG9B,cAFOA,EAAKC,KACZvE,OAAO6M,OAAOvI,EAAMpD,EAAKyJ,YAClBrG,IAEXpE,KAAKwK,WAAWoC,QAAQR,GArDhC,wBAAAE,EAAAO,SAAAV,EAAAnM,SAAA,gBAAA8M,GAAA,OAAAf,EAAA3J,MAAApC,KAAAd,YAAA,KAAA4B,IAAA,uBAAAC,MAAA,WAyDQf,KAAKwK,WAAWuC,UAChB/M,KAAKwK,WAAa,KAClBxK,KAAKrB,OAAOoO,QAAQ,UAAW/M,KAAKuK,iBA3D5C,CAAAzJ,IAAA,SAAAC,MAAA,WA+DQ,OACIc,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAgBC,UAAU,mBAhE9CqI,EAAA,CAAgCpI,gDCAnB8K,EAAb,SAAArN,GACI,SAAAqN,EAAYpN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgN,IACfnN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkN,GAAA7M,KAAAH,KAAMJ,KAoBVqN,aAAe,SAAAzE,GAAa,IAAV1H,EAAU0H,EAAV1H,IACdjB,EAAK4C,SAAS,CACVyK,SAAUpM,KAvBCjB,EA2BnBsN,YAAc,WACNtN,EAAKwD,MAAM6J,WACXrN,EAAKuN,gBAAgBvN,EAAKwD,MAAM6J,UAChCrN,EAAKlB,OAAOK,SAAS,SAAU,aA9BpBa,EAkCnBwN,WAAa,SAACC,GACV,OACIzL,EAAAC,EAAAC,cAAA2G,EAAA,GAAMlG,QAAS3C,EAAKoN,cAEZK,EAAM/J,IAAI,SAAAgK,GACN,OAAO1L,EAAAC,EAAAC,cAAA2G,EAAA,EAAMK,KAAN,CAAWjI,IAAKyM,GACnB1L,EAAAC,EAAAC,cAAA,SACKwL,QAtCzB1N,EAAKlB,OAASA,EAAOc,cAErBI,EAAK4D,MAAQ,CACT2H,OAAQ,MACR1H,QAAS,OACT8J,eAAgB,SAChBC,WAAY,UAGhB5N,EAAKwD,MAAQ,CACT6J,SAAU,MAGdrN,EAAKuN,gBAAkBxN,EAAMwN,gBAE7BvN,EAAKoN,aAAepN,EAAKoN,aAAanK,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,KAlBLA,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAkN,EAAArN,GAAAG,OAAAe,EAAA,EAAAf,CAAAkN,EAAA,EAAAlM,IAAA,SAAAC,MAAA,WAoDQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAEPjC,KAAKJ,MAAM0N,MAAMnO,OAAS,EACtB0C,EAAAC,EAAAC,cAAA2L,EAAA,GAAUC,QAAS3N,KAAKqN,WAAWrN,KAAKJ,MAAM0N,OAAQM,QAAS,CAAC,UAExD5N,KAAKqD,MAAM6J,SACPrL,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoB4L,KAAK,KACjC7N,KAAKqD,MAAM6J,SADhB,IAC0BrL,EAAAC,EAAAC,cAAA+L,EAAA,GAAM5K,KAAK,UAErCrB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoB4L,KAAK,KAAtC,aACchM,EAAAC,EAAAC,cAAA+L,EAAA,GAAM5K,KAAK,WAIrCrB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoB4L,KAAK,KAAtC,aAIRhM,EAAAC,EAAAC,cAAAyB,EAAA,GAAQN,KAAK,UAAUV,QAASxC,KAAKmN,aAArC,YAvEhBH,EAAA,CAAmC9K,aCAtB6L,EAAb,SAAApO,GAAA,SAAAoO,IAAA,OAAAjO,OAAAC,EAAA,EAAAD,CAAAE,KAAA+N,GAAAjO,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiO,GAAA3L,MAAApC,KAAAd,YAAA,OAAAY,OAAAc,EAAA,EAAAd,CAAAiO,EAAApO,GAAAG,OAAAe,EAAA,EAAAf,CAAAiO,EAAA,EAAAjN,IAAA,oBAAAC,MAAA,WAGQiN,OAAOC,iBAAiB,SAAUjO,KAAKkO,kBACvClO,KAAKkO,qBAJb,CAAApN,IAAA,uBAAAC,MAAA,WAQQiN,OAAOG,oBAAoB,SAAUnO,KAAKkO,oBARlD,CAAApN,IAAA,mBAAAC,MAAA,WAYQ,IACMqN,EADQtD,SAASC,eAAe,cAChBsD,iBAAiB,GACtBvD,SAASC,eAAe,UAChCtH,MAAM2H,OAASgD,EAAQhD,OAAS,OAfjD,CAAAtK,IAAA,SAAAC,MAAA,WAmBQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACRH,EAAAC,EAAAC,cAACuM,EAAD,OAEJzM,EAAAC,EAAAC,cAACwM,EAAD,CAAejB,MAAOtN,KAAKJ,MAAM0N,MAAOF,gBAAiBpN,KAAKJ,MAAMwN,uBAzBpFW,EAAA,CAAqC7L,aCFxBsM,EAAb,WASI,SAAAA,IAAe1O,OAAAC,EAAA,EAAAD,CAAAE,KAAAwO,GAAAxO,KARfyO,MAAQ,CAAC,IAQKzO,KAPd0O,UAAY,CACRlJ,OAAUxF,KAAK2O,YAAY7L,KAAK9C,MAChC0F,KAAQ1F,KAAK4O,UAAU9L,KAAK9C,MAC5B4F,KAAQ5F,KAAK6O,UAAU/L,KAAK9C,MAC5B8O,KAAQ,cAIR9O,KAAKrB,OAASA,EAAOc,cACrBO,KAAK+O,QAAU,EACf/O,KAAK8E,WAAa,GAClB9E,KAAKgP,gBAAkB,GAb/B,OAAAlP,OAAAe,EAAA,EAAAf,CAAA0O,EAAA,EAAA1N,IAAA,UAAAC,MAAA,WAiBQ,QAASf,KAAKK,OAjBtB,CAAAS,IAAA,UAAAC,MAAA,SAoBYV,GACJL,KAAKiP,aACLjP,KAAKK,KAAOA,EACZL,KAAKkP,cAvBb,CAAApO,IAAA,kBAAAC,MAAA,SA0BoBoD,GAAwD,IAA1CgL,EAA0CjQ,UAAAC,OAAA,QAAAsB,IAAAvB,UAAA,GAAAA,UAAA,GAArB,GAAIkQ,EAAiBlQ,UAAAC,OAAA,QAAAsB,IAAAvB,UAAA,IAAAA,UAAA,GAC9DmQ,EAAMrP,KAAKsP,YAAYnL,GAC7B,GAAIkL,EAAK,CACLrP,KAAKgP,gBAAkB7K,EACvB,IAAMsK,EAAQY,EAAIzI,WAAa5G,KAAKuP,oBAAoBF,EAAzBrP,CAA8BmP,GAAsB,GACnFnP,KAAKyO,MAAMtL,KAAKsL,GAChB,IAAMe,EAAcxP,KAAKyP,aAAaJ,EAAIK,MAAOL,EAAInM,MAKrD,OAJAlD,KAAKyO,MAAMkB,MACPP,GACApP,KAAKrB,OAAOK,SAAS,gBAAiBgB,KAAK8E,YAExC0K,KArCnB,CAAA1O,IAAA,eAAAC,MAAA,SAyCiB2O,EAAOE,GAAe,IAC3BJ,EAD2B3P,EAAAG,KA6B/B,OA3BC0P,GAAS,IAAIG,KAAK,SAAAvJ,GACf,IAAMwJ,EAAMrD,KAAKlD,MAAMkD,KAAKC,UAAUpG,IACtC,OAAQwJ,EAAI5L,WACR,IAAK,cACDrE,EAAKkQ,kBAAkBD,EAAKjQ,EAAKmQ,aACjC,MACJ,IAAK,cACDnQ,EAAKoQ,kBAAkBH,EAAKjQ,EAAKmQ,aACjC,MACJ,IAAK,WACDnQ,EAAKuN,gBAAgB0C,EAAIjR,KAAMiR,EAAIlJ,YACnC,MACJ,IAAK,KACD/G,EAAKqQ,SAASJ,GACd,MACJ,IAAK,QACDjQ,EAAKsQ,YAAYL,GACjB,MACJ,IAAK,SAED,OADAN,EAAc3P,EAAKuQ,aAAaN,EAAKF,IAC9B,EACX,QAAS,OAAO,EAEpB,IAAMxL,EAAOvE,EAAKwQ,iBAElB,OADAxQ,EAAKyQ,QAAQlM,EAAM0L,IACZ,IAEJN,IAtEf,CAAA1O,IAAA,iBAAAC,MAAA,WA0EQ,IAEIwP,EAFEC,EAASxQ,KAAKyO,MAAM,GAU1B,OATa3O,OAAO2E,KAAK+L,GAEpBX,KAAK,SAAA/O,GACN,MAAyB,SAArB0P,EAAO1P,GAAKoC,OACZqN,EAASC,EAAO1P,IACT,KAIRyP,IApFf,CAAAzP,IAAA,cAAAC,MAAA,SAuFgBoD,GACR,IAAIoM,EAQJ,OAPAvQ,KAAKK,KAAKoQ,UAAUZ,KAAK,SAAAR,GACrB,OAAIA,EAAIxQ,OAASsF,IACboM,EAASlB,GACF,KAIRkB,IAhGf,CAAAzP,IAAA,aAAAC,MAAA,WAoGQf,KAAKyO,MAAQ,CAAC,IACdzO,KAAK8E,WAAa,KArG1B,CAAAhE,IAAA,YAAAC,MAAA,WAyGQf,KAAKiP,aACLjP,KAAKyO,MAAM,GAAX,KAAwBzO,KAAKuP,oBAAoBvP,KAAKK,KAAK+D,MAC3DpE,KAAK0Q,SAAS1Q,KAAKK,QA3G3B,CAAAS,IAAA,sBAAAC,MAAA,SA8GwBsO,GAAK,IAAArO,EAAAhB,KACrB,OAAO,SAAC2Q,GAGJ,IAFA,IAAM/J,EAAa5F,EAAK4P,gBAAgBvB,EAAIzI,YACtCnC,EAAO3E,OAAO2E,KAAKmC,GAChBiK,EAAI,EAAGA,EAAIpM,EAAKtF,OAAQ0R,IAC7BjK,EAAWnC,EAAKoM,IAAMF,EAAOE,GAAK7P,EAAK0N,UAAU9H,EAAWnC,EAAKoM,IAAI3N,MAAMyN,EAAOE,IAAM,CAAE3N,KAAM,OAAQnC,MAAO,MAEnH,OAAO6F,KArHnB,CAAA9F,IAAA,YAAAC,MAAA,WA0HQ,OAAOf,KAAKyO,MAAMzO,KAAKyO,MAAMtP,OAAS,KA1H9C,CAAA2B,IAAA,WAAAC,MAAA,SA6Ha2O,GAAO,IAAAoB,EAAA9Q,KACN+Q,EAAQ,GACdrB,EAAMsB,cAAgBtB,EAAMsB,aAAa/N,QAAQ,SAAAqD,GAC7C,OAAQA,EAAGpC,WACP,IAAK,cACD4M,EAAKf,kBAAkBzJ,EAAIyK,GAC3B,MACJ,IAAK,cACDD,EAAKb,kBAAkB3J,EAAIyK,MAKvC/Q,KAAKyO,MAAMtL,KAAK4N,KA1IxB,CAAAjQ,IAAA,kBAAAC,MAAA,SA6IoB6F,GACZ,IAAM2J,EAAS,GAOf,OANazQ,OAAO2E,KAAKmC,GACpB3D,QAAQ,SAAAnC,GACTyP,EAAOzP,GAAO,CACVoC,KAAM0D,EAAW9F,MAGlByP,IArJf,CAAAzP,IAAA,SAAAC,MAAA,SAwJWqF,GACH,MAAyB,SAAlBA,EAASlD,MAAsC,OAAnBkD,EAASrF,QAzJpD,CAAAD,IAAA,YAAAC,MAAA,SA4JcqD,GACN,GAAIpE,KAAKiR,OAAO7M,GACZ,OAAOA,EAEX,IAAMvF,EAAOuF,EAAKvF,KACZ+H,EAAaxC,EAAKwC,WACxB,GAAa,SAAT/H,EAAiB,CACjB,GAAuB,aAAnBuF,EAAKF,UACL,OAAOlE,KAAKoN,gBAAgBvO,EAAM+H,GAEtC,IAAMsK,EAAWlR,KAAKmR,mBAAmB/M,EAAMpE,KAAKgQ,aACpD,OAAIkB,QAGJzF,QAAQrC,MAAR,GAAAjD,OAAiBS,EAAjB,gBAGJ,GAAKvH,MAAMoH,QAAQG,IACM,OAAfA,EAMV,MAAO,CACH1D,KAAM,OACNnC,MAHUf,KAAKyO,MAAM,GAAX,KAAsB7H,IAJ5B6E,QAAQrC,MAAR,GAAAjD,OAAiBS,EAAjB,kBA/KhB,CAAA9F,IAAA,cAAAC,MAAA,SA0LgBqF,GACR,QAAiB3F,IAAb2F,EAAwB,OAAOA,EACnC,GAA2B,aAAvBA,EAASlC,UACT,OAAOlE,KAAKoN,gBAAgBhH,EAASvH,KAAMuH,EAASQ,YAExD,IAAMsK,EAAWlR,KAAKmR,mBAAmB/K,EAAUpG,KAAKgQ,aACxD,GAAIkB,EACA,OAAOA,EAEX,IAAMnQ,EAAQqF,EAASrF,MACjBwP,EAASa,OAAOrQ,GACtB,IAAKsQ,MAAMd,GAEP,OADAnK,EAASrF,MAAQwP,EACVnK,EAEX,GAAIA,EAASlC,UAAW,CACpB,IAAMoN,EAAkBtR,KAAKuR,qBAAqBnL,EAASG,KAAMH,EAASI,MAAOJ,EAASlC,WAM1F,cALOkC,EAASG,YACTH,EAASI,aACTJ,EAASlC,UAChBkC,EAASrF,MAAQuQ,EACjBlL,EAASlD,KAAO,SACTkD,EAEXqF,QAAQrC,MAAR,SAAAjD,OAAuBpF,EAAvB,uBAlNR,CAAAD,IAAA,uBAAAC,MAAA,SAqNyBwF,EAAMC,EAAOF,GAC9BC,EAAOvG,KAAK2O,YAAYpI,GAAMxF,MAC9ByF,EAAQxG,KAAK2O,YAAYnI,GAAOzF,MAOhC,MANkB,CACdyQ,IAAK,SAACC,EAAIC,GAAL,OAAYD,EAAKC,GACtBC,IAAK,SAACF,EAAIC,GAAL,OAAYD,EAAKC,GACtBE,IAAK,SAACH,EAAIC,GAAL,OAAYD,EAAKC,GACtBG,IAAK,SAACJ,EAAIC,GAAL,OAAYD,EAAKC,IAETpL,GAAIC,EAAMC,KA9NnC,CAAA1F,IAAA,YAAAC,MAAA,SAiOcuF,GACN,GAAqB,aAAjBA,EAAGpC,UACH,OAAOlE,KAAKoN,gBAAgB9G,EAAGzH,KAAMyH,EAAGM,YAE5C,IAAMsK,EAAWlR,KAAKmR,mBAAmB7K,EAAItG,KAAKgQ,aAClD,GAAIkB,EACA,OAAOA,EAGX,IAAInQ,EAAQf,KAAK8R,UAAUxL,EAAGvF,OAC9B,YAAcN,IAAVM,GACAuF,EAAGvF,MAAQA,EACJuF,GAEPA,EAAGpC,WACHnD,EAAQf,KAAK+R,kBAAkBzL,EAAGpC,UAAWoC,EAAGC,KAAMD,EAAGE,OACzDF,EAAGvF,MAAQA,SACJuF,EAAGpC,iBACHoC,EAAGC,YACHD,EAAGE,MACHF,QANX,IA/OR,CAAAxF,IAAA,oBAAAC,MAAA,SAyPsBiR,EAAUzL,EAAMC,GAC9B,IAAIyL,EACJ,OAAQD,GACJ,IAAK,KAAM,OAAOhS,KAAK4O,UAAUrI,GAAMxF,OAASf,KAAK4O,UAAUpI,GAAOzF,MACtE,IAAK,KAAM,OAAOf,KAAK4O,UAAUrI,GAAMxF,OAASf,KAAK4O,UAAUpI,GAAOzF,MACtE,IAAK,IAAK,OAAOf,KAAK2O,YAAYpI,GAAMxF,MAAQf,KAAK2O,YAAYnI,GAAOzF,MACxE,IAAK,IAAK,OAAOf,KAAK2O,YAAYpI,GAAMxF,MAAQf,KAAK2O,YAAYnI,GAAOzF,MACxE,IAAK,KAAM,OAAOf,KAAK2O,YAAYpI,GAAMxF,OAASf,KAAK2O,YAAYnI,GAAOzF,MAC1E,IAAK,KAAM,OAAOf,KAAK2O,YAAYpI,GAAMxF,OAASf,KAAK2O,YAAYnI,GAAOzF,MAC1E,IAAK,KAED,GADAkR,EAAQjS,KAAKkS,aAAa3L,EAAMC,GAE5B,OAAOyL,EAAM,KAAOA,EAAM,GAE9B,MACJ,IAAK,KAED,GADAA,EAAQjS,KAAKkS,aAAa3L,EAAMC,GAE5B,OAAOyL,EAAM,KAAOA,EAAM,MA3Q9C,CAAAnR,IAAA,YAAAC,MAAA,SAkRcA,GACN,OAAQA,GACJ,IAAK,OAAQ,OAAO,EACpB,IAAK,QAAS,OAAO,KArRjC,CAAAD,IAAA,eAAAC,MAAA,SA0RiBwF,EAAMC,GACf,IACI,IAAM2L,EAAUnS,KAAKmR,mBAAmB5K,EAAMvG,KAAKgQ,aAC7CoC,EAAWpS,KAAKmR,mBAAmB3K,EAAOxG,KAAKgQ,aACrD,GAAImC,GAAWC,EACX,MAAO,CAACD,EAAQpR,MAAOqR,EAASrR,OAEpC,GAAIoR,EAAS,CACT,IAAMjP,EAAOiP,EAAQjP,KACfmP,EAAarS,KAAK0O,UAAUxL,GAAMsD,GACxC,MAAO,CAAC2L,EAAQpR,MAAOsR,EAAWtR,OAEtC,GAAIqR,EAAU,CACV,IAAMlP,EAAOkP,EAASlP,KAEtB,MAAO,CADWlD,KAAK0O,UAAUxL,GAAMqD,GACrBxF,MAAOqR,EAASrR,OAItC,MAAO,CAFPwF,EAAOvG,KAAK2O,YAAYpI,GACxBC,EAAQxG,KAAK2O,YAAYnI,IAE3B,MAAOgD,GACL,UA/SZ,CAAA1I,IAAA,oBAAAC,MAAA,SAmTsBuR,EAAK7D,GACnB,IAAIA,EAAM6D,EAAIlM,UAEP,CACH,IAAMmM,EAAcvS,KAAK0O,UAAU4D,EAAIpP,MAAMoP,EAAIvR,OACjD,YAAoBN,IAAhB8R,IACA9D,EAAM6D,EAAIlM,UAAYmM,GACf,GALX9G,QAAQrC,MAAR,YAAAjD,OAA0BmM,EAAIlM,SAA9B,wBArTZ,CAAAtF,IAAA,oBAAAC,MAAA,SAgUsBuR,EAAK7D,GACnBzO,KAAKwS,uBAAuBF,EAAIlM,SAAUqI,EAAO6D,EAAIvR,SAjU7D,CAAAD,IAAA,eAAAC,MAAA,SAoUiBuR,EAAKpP,GACd,OAAOlD,KAAK0O,UAAUxL,GAAMoP,EAAIvR,SArUxC,CAAAD,IAAA,gBAAAC,MAAA,SAwUkBuR,GAGV,OAFY7F,KAAKlD,MAAMkD,KAAKC,UAAU4F,EAAIlM,oBAAoB/G,MAAQiT,EAAIlM,SAAW,CAACkM,EAAIlM,YACrEc,MAAM,GACXyI,QA3UxB,CAAA7O,IAAA,WAAAC,MAAA,SA8Ua0R,GACL,IAAM/L,EAAY+F,KAAKlD,MAAMkD,KAAKC,UAAU+F,EAAQ/L,YAC5B1G,KAAK4O,UAAUlI,GACnB3F,OAChBf,KAAKyO,MAAMtL,KAAK,IAChBnD,KAAKyP,aAAagD,EAAQ/C,OAC1B1P,KAAKyO,MAAMkB,OAEP8C,EAAQC,OACR1S,KAAKyO,MAAMtL,KAAK,IAChBnD,KAAKyP,aAAagD,EAAQC,MAC1B1S,KAAKyO,MAAMkB,SAzV3B,CAAA7O,IAAA,cAAAC,MAAA,SA8VgB4R,GAER,IADA3S,KAAKyO,MAAMtL,KAAK,MACH,CACT,IAAMuD,EAAY+F,KAAKlD,MAAMkD,KAAKC,UAAUiG,EAAWjM,YAEvD,IADwB1G,KAAK4O,UAAUlI,GAClB3F,MAEjB,YADAf,KAAKyO,MAAMkB,MAGf3P,KAAKyP,aAAakD,EAAWjD,UAvWzC,CAAA5O,IAAA,yBAAAC,MAAA,SA2W2BqF,EAAUqI,EAAOmE,GAAU,IAAAC,EAAA7S,KACxCmH,EAAWf,aAAoB/G,MAAQ+G,EAAW,CAACA,GACrD0M,EAAMrE,EAAMtH,EAAS,IACzB,IAAK2L,EAAK,CACN,IAAK,IAAIjC,EAAI7Q,KAAKyO,MAAMtP,OAAS,EAAG0R,GAAK,EAAGA,IAExC,GADAiC,EAAM9S,KAAKyO,MAAMoC,GAAG1J,EAAS,IACpB,CACL,GAAwB,IAApBA,EAAShI,OAET,YADAa,KAAKyO,MAAMoC,GAAG1J,EAAS,IAAMnH,KAAK0O,UAAU1O,KAAKyO,MAAMoC,GAAG1J,EAAS,IAAIjE,MAAM0P,IAGjF,MAGR,IAAKE,EACD,OAAOrH,QAAQrC,MAAR,YAAAjD,OAA0BgB,EAAS,GAAnC,eAGf,IAAM4L,EAAO5L,EAASD,MAAM,GACtB8L,EAAOD,EAAKpD,MAClBoD,EAAK9P,QAAQ,SAAAgQ,GACY,WAAjBA,EAAQ/P,UAEIzC,KADZqS,EAAMA,EAAI/R,MAAMkS,EAAQpU,QAEpB4M,QAAQrC,MAAR,YAAAjD,OAA0B8M,EAAQpU,KAAlC,eAEoB,UAAjBoU,EAAQ/P,QACf4P,EAAMA,EAAI/R,MAAM8R,EAAKlE,YAAYsE,EAAQ3L,UAErCmE,QAAQrC,MAAR,SAAAjD,OAAuB8M,EAAQ3L,MAA/B,kBAIM,WAAd0L,EAAK9P,UACwBzC,IAAzBqS,EAAI/R,MAAMiS,EAAKnU,MACfiU,EAAI/R,MAAMiS,EAAKnU,MAAQmB,KAAK0O,UAAUoE,EAAI/R,MAAMiS,EAAKnU,MAAMqE,MAAM0P,GAEjEnH,QAAQrC,MAAR,YAAAjD,OAA0B6M,EAAKnU,KAA/B,eAEiB,UAAdmU,EAAK9P,OACZ4P,EAAI/R,MAAMf,KAAK2O,YAAYqE,EAAK1L,QAAUsL,KAnZtD,CAAA9R,IAAA,qBAAAC,MAAA,SAuZuBqF,EAAUqI,EAAOyE,GAChC,IAAM/L,EAAWf,aAAoB/G,MAAQ+G,EAAW,CAACA,GACzD,OAAOpG,KAAKmT,gBAAgBhM,EAAUsH,EAAOyE,KAzZrD,CAAApS,IAAA,kBAAAC,MAAA,SA4ZoBqF,EAAUqI,GAAuB,IAAA2E,EAAApT,KAAhBkT,EAAgBhU,UAAAC,OAAA,QAAAsB,IAAAvB,UAAA,IAAAA,UAAA,GACzC4T,EAAMrE,EAAMrI,EAAS,IACzB,IAAK0M,EAAK,CACN,IAAK,IAAIjC,EAAI7Q,KAAKyO,MAAMtP,OAAS,EAAG0R,GAAK,KACrCiC,EAAM9S,KAAKyO,MAAMoC,GAAGzK,EAAS,KADWyK,KAM5C,IAAKiC,EACD,OAGR,IAAMC,EAAO3M,EAASc,MAAM,GAiB5B,OAhBIgM,GACAH,EAAKpD,MAEToD,EAAK9P,QAAQ,SAAAgQ,GACY,WAAjBA,EAAQ/P,UAEIzC,KADZqS,EAAMA,EAAI/R,MAAMkS,EAAQpU,QAEpB4M,QAAQrC,MAAR,YAAAjD,OAA0B8M,EAAQpU,KAAlC,eAEoB,UAAjBoU,EAAQ/P,QACf4P,EAAMA,EAAI/R,MAAMqS,EAAKzE,YAAYsE,EAAQ3L,UAErCmE,QAAQrC,MAAR,SAAAjD,OAAuB8M,EAAQ3L,MAA/B,kBAILwL,IA1bf,CAAAhS,IAAA,UAAAC,MAAA,SA6bYqD,EAAMkC,GACV,GAAIlC,IACqB,gBAAjBkC,EAAGpC,WAAgD,gBAAjBoC,EAAGpC,WAA6B,CAClE,IAAMc,EAAOlF,OAAO6M,OAAO,CAAEzI,UAAWoC,EAAInC,aAAcnE,KAAKgP,iBAAmBhP,KAAKqT,mBAAmBjP,IAC1GpE,KAAK8E,WAAW3B,KAAK6B,MAjcrC,CAAAlE,IAAA,qBAAAC,MAAA,SAscuBqD,GAEf,OADApE,KAAK+O,QAAU,EACR/O,KAAKsT,sBAAsBlP,EAAM,EAAG,KAxcnD,CAAAtD,IAAA,wBAAAC,MAAA,SA2c0BqD,EAAMpC,EAAIuR,GAAO,IAAAC,EAAAxT,KAC7ByT,EAAO,CACT1P,MAAO,GACPC,MAAO,IAEX,IAAKI,EAAKrD,MAAO,OAAO0S,EACxB,QAAmBhT,IAAf2D,EAAKsP,MAAqB,MAAO,CACjC1R,GAAIoC,EAAKsP,OAEbD,EAAK1P,MAAMZ,KAAK,CAAEnB,KAAI2R,MAAOC,OAAO5R,GAAKqC,KAAMD,EAAKrD,MAAOwS,UAC3DnP,EAAKsP,MAAQ1R,EACb,IACIwK,EADE/H,EAAO3E,OAAO2E,KAAKL,EAAKrD,OAkB9B,OAhBAwS,IACA9O,EAAKxB,QAAQ,SAAAnC,GACT,GAA6B,SAAzBsD,EAAKrD,MAAMD,GAAKoC,MAA6C,OAA1BkB,EAAKrD,MAAMD,GAAKC,MAAgB,CACnEyS,EAAKzE,UACLvC,EAAOgH,EAAKzE,QACZ,IAAMlI,EAAM2M,EAAKF,sBAAsBlP,EAAKrD,MAAMD,GAAM0L,EAAM+G,GAC1D,OAAQ1M,EACR4M,EAAKzP,MAAMb,KAAK,CAAEoB,KAAMvC,EAAIwC,GAAIqC,EAAI7E,GAAI6R,OAAQ,QAEhDJ,EAAKzP,MAAMb,KAAK,CAAEoB,KAAMvC,EAAIwC,GAAIgI,EAAMqH,OAAQ,OAC9CJ,EAAKzP,MAAQyP,EAAKzP,MAAMmC,OAAOU,EAAI7C,OACnCyP,EAAK1P,MAAQ0P,EAAK1P,MAAMoC,OAAOU,EAAI9C,kBAIxCK,EAAKsP,MACLD,MAxefjF,EAAA,GCGasF,EAAb,SAAAnU,GACI,SAAAmU,EAAYlU,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8T,IACfjU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgU,GAAA3T,KAAAH,KAAMJ,KASVyJ,WAAa,SAAChJ,GACVR,EAAKkU,YAAY1T,EAAKoQ,WACtB5Q,EAAKmU,YAAY5T,QAAQC,IAZVR,EAwBnBuN,gBAAkB,SAACjJ,GACXtE,EAAKmU,YAAYC,WACjBpU,EAAKmU,YAAY5G,gBAAgBjJ,EAAc,IAAI,IAvBvDtE,EAAKwD,MAAQ,CACTiK,MAAO,IAGXzN,EAAKmU,YAAc,IAAIxF,EAPR3O,EADvB,OAAAC,OAAAc,EAAA,EAAAd,CAAAgU,EAAAnU,GAAAG,OAAAe,EAAA,EAAAf,CAAAgU,EAAA,EAAAhT,IAAA,cAAAC,MAAA,SAgBgBuM,GACR,IAAM4G,EAAW5G,EAAM/J,IAAI,SAAAgK,GACvB,OAAOA,EAAK1O,OAEhBmB,KAAKyC,SAAS,CACV6K,MAAO4G,MArBnB,CAAApT,IAAA,SAAAC,MAAA,WAgCQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAACoS,EAAD,CAAa9K,WAAYrJ,KAAKqJ,WAAWvG,KAAK9C,QAC9C6B,EAAAC,EAAAC,cAACqS,EAAD,CAAiB9G,MAAOtN,KAAKqD,MAAMiK,MAAOF,gBAAiBpN,KAAKoN,gBAAgBtK,KAAK9C,aAnCrG8T,EAAA,CAA+B5R,+BCFlBmS,EAAb,SAAA1U,GAAA,SAAA0U,IAAA,OAAAvU,OAAAC,EAAA,EAAAD,CAAAE,KAAAqU,GAAAvU,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuU,GAAAjS,MAAApC,KAAAd,YAAA,OAAAY,OAAAc,EAAA,EAAAd,CAAAuU,EAAA1U,GAAAG,OAAAe,EAAA,EAAAf,CAAAuU,EAAA,EAAAvT,IAAA,SAAAC,MAAA,WAEQ,OACIc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKuS,IAAKC,IAASC,IAAI,UAJvCH,EAAA,CAA4BnS,aCabuS,mLATX,OACE5S,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC2S,EAAD,MACA7S,EAAAC,EAAAC,cAAC4S,EAAD,cALUzS,aCKZ0S,EAAcC,QACW,cAA7B7G,OAAOpE,SAASkL,UAEe,UAA7B9G,OAAOpE,SAASkL,UAEhB9G,OAAOpE,SAASkL,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnS,QACf6R,UAAUC,cAAcQ,WAK1BlK,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBkK,MAAM,SAAAxM,GACLqC,QAAQrC,MAAM,4CAA6CA,KCzEjEyM,IAASC,OAAOjU,EAAAC,EAAAC,cAACgU,EAAD,MAASjL,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBmK,UAAW,CAGzE,GADkB,IAAIc,IAAIC,oBAAwBjI,OAAOpE,UAC3CsM,SAAWlI,OAAOpE,SAASsM,OAIvC,OAGFlI,OAAOC,iBAAiB,OAAQ,WAC9B,IAAMgH,EAAK,GAAA9O,OAAM8P,oBAAN,sBAEPrB,GAiDV,SAAiCK,GAE/BkB,MAAMlB,GACHI,KAAK,SAAAe,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMpB,KAAK,SAAAC,GACjCA,EAAaoB,aAAarB,KAAK,WAC7BrH,OAAOpE,SAAS+M,aAKpB3B,EAAgBC,KAGnBW,MAAM,WACLnK,QAAQC,IACN,mEArEAkL,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMpB,KAAK,WACjC5J,QAAQC,IACN,+GAMJsJ,EAAgBC,MCzCxB4B,yDCOA,SAASC,EAAgBnN,EAASoN,EAAUC,EAAOpN,GACjD5J,KAAK2J,QAAWA,EAChB3J,KAAK+W,SAAWA,EAChB/W,KAAKgX,MAAWA,EAChBhX,KAAK4J,SAAWA,EAChB5J,KAAKnB,KAAW,cAEuB,oBAA5BoY,MAAMC,mBACfD,MAAMC,kBAAkBlX,KAAM8W,IAdlC,SAAsBK,EAAOC,GAC3B,SAASC,IAASrX,KAAKsX,YAAcH,EACrCE,EAAKE,UAAYH,EAAOG,UACxBJ,EAAMI,UAAY,IAAIF,EAexBG,CAAaV,EAAiBG,OAE9BH,EAAgBW,aAAe,SAASV,EAAUC,GAChD,IAAIU,EAA2B,CACzBC,QAAS,SAASC,GAChB,MAAO,IAAOC,EAAcD,EAAYlX,MAAQ,KAGlDoX,MAAS,SAASF,GAChB,IACI/G,EADAkH,EAAe,GAGnB,IAAKlH,EAAI,EAAGA,EAAI+G,EAAYI,MAAM7Y,OAAQ0R,IACxCkH,GAAgBH,EAAYI,MAAMnH,aAAcxR,MAC5C4Y,EAAYL,EAAYI,MAAMnH,GAAG,IAAM,IAAMoH,EAAYL,EAAYI,MAAMnH,GAAG,IAC9EoH,EAAYL,EAAYI,MAAMnH,IAGpC,MAAO,KAAO+G,EAAYM,SAAW,IAAM,IAAMH,EAAe,KAGlEI,IAAK,SAASP,GACZ,MAAO,iBAGTQ,IAAK,SAASR,GACZ,MAAO,gBAGTS,MAAO,SAAST,GACd,OAAOA,EAAYU,cAI3B,SAASC,EAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGC,SAAS,IAAIC,cAGvC,SAASd,EAAce,GACrB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,KACpEK,QAAQ,wBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,KAGzE,SAASP,EAAYW,GACnB,OAAOA,EACJC,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASL,GAAM,MAAO,OAASD,EAAIC,KACpEK,QAAQ,wBAAyB,SAASL,GAAM,MAAO,MAASD,EAAIC,KA6CzE,MAAO,YAtCP,SAA0BzB,GACxB,IACIlG,EAAGiI,EANoBlB,EAKvBmB,EAAe,IAAI1Z,MAAM0X,EAAS5X,QAGtC,IAAK0R,EAAI,EAAGA,EAAIkG,EAAS5X,OAAQ0R,IAC/BkI,EAAalI,IATY+G,EASab,EAASlG,GAR1C6G,EAAyBE,EAAY1U,MAAM0U,IAalD,GAFAmB,EAAaC,OAETD,EAAa5Z,OAAS,EAAG,CAC3B,IAAK0R,EAAI,EAAGiI,EAAI,EAAGjI,EAAIkI,EAAa5Z,OAAQ0R,IACtCkI,EAAalI,EAAI,KAAOkI,EAAalI,KACvCkI,EAAaD,GAAKC,EAAalI,GAC/BiI,KAGJC,EAAa5Z,OAAS2Z,EAGxB,OAAQC,EAAa5Z,QACnB,KAAK,EACH,OAAO4Z,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAa7R,MAAM,GAAI,GAAG+R,KAAK,MAClC,QACAF,EAAaA,EAAa5Z,OAAS,IAQxB+Z,CAAiBnC,GAAY,QAJlD,SAAuBC,GACrB,OAAOA,EAAQ,IAAOa,EAAcb,GAAS,IAAO,eAGMmC,CAAcnC,GAAS,WAg+ErF1Y,EAAOC,QAAU,CACf6a,YAAatC,EACbvN,MA/9EF,SAAmB8P,EAAOC,GACxBA,OAAsB,IAAZA,EAAqBA,EAAU,GAEzC,IAkRIC,EAlRAC,EAAa,GAEbC,EAAyB,CAAEC,EAAGC,IAC9BC,EAAyBD,GAEzBE,EAAS,KACTC,EAASC,GAAuB,MAAM,GACtCC,EAAS,KACTC,EAASF,GAAuB,MAAM,GACtCG,EAAS,SAAS5T,EAAI6T,GAAM,OAAOA,EAAK7T,EAAK6T,EAAK7T,GAClD8T,EAAS,IACTC,EAASN,GAAuB,KAAK,GACrCO,EAAS,IACTC,EAASR,GAAuB,KAAK,GACrCS,EAAS,IACTC,EAAUV,GAAuB,KAAK,GACtCW,EAAU,KACVC,EAAUZ,GAAuB,MAAM,GACvCa,EAAU,KACVC,EAAUd,GAAuB,MAAM,GACvCe,EAAU,IACVC,EAAUhB,GAAuB,KAAK,GACtCiB,EAAU,IACVC,EAAUlB,GAAuB,KAAK,GACtCmB,EAAU,IACVC,EAAUpB,GAAuB,KAAK,GACtCqB,EAAU,IACVC,EAAUtB,GAAuB,KAAK,GACtCuB,EAAU,SAAS/U,EAAMD,EAAIE,GAC5B,MAAO,CACAtD,KAAM,OACTgB,UAAWoC,EACRC,OACAC,UAGR+U,EAAU,SAAShV,EAAMD,EAAIE,GAC5B,MAAO,CACAtD,KAAM,SACTgB,UAAWoC,EACRC,OACAC,UAGRgV,EAAU,IACVC,EAAU1B,GAAuB,KAAK,GACtC2B,EAAU,IACVC,EAAU5B,GAAuB,KAAK,GACtC6B,EAAU,SAASC,GAClB,OAAOA,EAAEtY,IAAI,SAAAuY,GACT,OAAOA,EAAE,MAGdC,EAAU,SAASC,GAClB,OAAOA,EAAEzY,IAAI,SAAAuY,GACT,OAAOA,EAAE,MAGdG,EAAU,IACVC,EAAUnC,GAAuB,KAAK,GACtCoC,EAAU,SAASC,GAAM,OAAOA,GAChCC,EAAU,SAASC,EAAOC,GACzB,MAAO,CAACD,GAAOnW,OAAOoW,EAAMhZ,IAAI,SAAAiZ,GAC5B,OAAOA,EAAE,OAGdC,EAAU,SAASvZ,EAAMwZ,EAAM3b,GAC9B,MAAO,CACAmD,UAAW,cACXkC,SAAUsW,EACV3b,MAAOA,EACVmC,KAAMA,IAGXyZ,EAAU,SAASD,EAAM3b,GACxB,MAAO,CACAmD,UAAW,cACXkC,SAAUsW,EACV3b,MAAOA,IAGf6b,EAAU,SACVC,EAAU9C,GAAuB,UAAU,GAC3C+C,EAAU,SAAS/b,GACf,MAAO,CACHmD,UAAW,SACXnD,MAAOA,GAASA,EAAM,KAG9Bgc,EAAU,SAASC,EAAMC,GACxB,OAAOD,GAAMC,EAAK9d,OAAO,EAAI8d,EAAKnW,OAAO,SAACyJ,EAAQiI,GAC9C,OAAOjI,EAAQiI,IACX,KAET0E,EAAU,SAASF,EAAMC,GACrB,OAAOA,IAAS,GAAK,CAACD,GAAQ,CAACA,GAAM7W,OAAO8W,IAEhDE,EAAU,IACVC,EAAUrD,GAAuB,KAAK,GACtCsD,EAAU,IACVC,EAAUvD,GAAuB,KAAK,GACtCwD,EAAU,SAASC,GAClB,MAAO,CACHta,KAAM,QACHoE,MAAOkW,IAGfC,GAAU,IACVC,GAAU3D,GAAuB,KAAK,GACtC4D,GAAU,SAASC,GAClB,MAAO,CACH1a,KAAM,SACHrE,KAAM+e,EAAE,KAGhBC,GAAU,IACVC,GAAU/D,GAAuB,KAAK,GACtCgE,GAAU,SAASC,GAClB,MAAO,CACH9a,KAAM,WACH0D,WAAYoX,EAAI,CAACA,EAAE,IAAI7X,OAAO6X,EAAE,GAAGza,IAAI,SAAAiZ,GACtC,OAAOA,EAAE,MACJ,KAGdyB,GAAU,SAAS9Z,EAAchE,GAC7B,MAAO,CACH+D,UAAW/D,EAAK+C,KAChB0D,WAAYzG,EAAKyG,WACjB/H,KAAMsF,IAGd+Z,GAAU,YACVC,GAAUC,GAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,OAAO,GAAO,GAChEC,GAAU,SACVC,GAAUF,GAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GACpDG,GAAU,IACVC,GAAUzE,GAAuB,KAAK,GAatC0E,GAAU,SACVC,GAAU3E,GAAuB,UAAU,GAC3C4E,GAAU,OACVC,GAAU7E,GAAuB,QAAQ,GACzC8E,GAAU,SACVC,GAAU/E,GAAuB,UAAU,GAC3CgF,GAAU,OACVC,GAAUjF,GAAuB,QAAQ,GACzCkF,GAAU,OACVC,GAAUnF,GAAuB,QAAQ,GACzCoF,GAAU,OACVC,GAAUrF,GAAuB,QAAQ,GACzCsF,GAAU,OACVC,GAAUvF,GAAuB,QAAQ,GACzCwF,GAAU,WACT,MAAO,CACHrc,KAAM,OACHnC,MAAO,OAGfye,GAAU,SAAShH,GAClB,MAAO,CACHtV,KAAM,SACHnC,MAAOyX,EAAG1R,OAAO,SAACD,EAAKiV,GACxB,OAAOjV,EAAKiV,MAInB2D,GAAUC,GAAqB,cAC/BC,GAAU,aACVC,GAAUxB,GAAqB,CAAC,IAAK,KAAM,KAAM,OAAO,GAAO,GAC/DyB,GAAU,OACVC,GAAU/F,GAAuB,QAAQ,GACzCgG,GAAU,QACVC,GAAUjG,GAAuB,SAAS,GAC1CkG,GAAU,SAASC,GAClB,MAAO,CACHhd,KAAM,OACHnC,MAAOmf,IAGfC,GAAU,SAASD,GAClB,OAAOA,GAERE,GAAU,KACVC,GAAUtG,GAAuB,MAAM,GACvCuG,GAAU,SAASC,EAAGvC,EAAGnN,GACxB,MAAO,CAACA,EAAE0P,GAAGvC,GAAQ,MAEtBwC,GAAU,IACVC,GAAU1G,GAAuB,KAAK,GACtC2G,GAAU,IACVC,GAAU5G,GAAuB,KAAK,GACtC6G,GAAU,SAASniB,GAClB,MAAO,CACHyF,UAAW,OACR0C,WAAYnI,GAAK,KAGzBoiB,GAAU,KACVC,GAAU/G,GAAuB,MAAM,GACvCgH,GAAU,SAASjF,EAAGE,EAAGra,GACxB,MAAO,CACHuC,UAAW,KACRwC,UAAWoV,EACXpM,MAAOsM,EACPtJ,KAAM/Q,IAGdqf,GAAU,OACVC,GAAUlH,GAAuB,QAAQ,GACzCmH,GAAU,SAASvf,GAAK,OAAOA,EAAIA,EAAE,GAAK,MAC1Cwf,GAAW,QACXC,GAAWrH,GAAuB,SAAS,GAC3CsH,GAAW,SAASvF,EAAGE,GACtB,MAAO,CACH9X,UAAW,QACRwC,UAAWoV,EACXpM,MAAOsM,IAGfsF,GAAW,SAASxF,GAAK,OAAOA,GAChCyF,GAAW,MACXC,GAAWzH,GAAuB,OAAO,GACzC0H,GAAW,IACXC,GAAW3H,GAAuB,KAAK,GACvC4H,GAAW,SAAS9Q,EAAGpS,EAAG8hB,EAAGvE,GAC5B,MAAO,CACH9X,UAAW,WACRrF,KAAMgS,EACNjK,WAAYnI,GAAK,GACjByE,KAAMqd,EACN7Q,MAAOsM,IAGf4F,GAAW,SAASC,EAAOC,GAC1B,MAAO,CAACD,GAAO1b,OAAO2b,EAAMve,IAAI,SAACgd,GAC7B,OAAOA,EAAE,MACNhd,IAAI,SAAAiZ,GACP,IAAMuF,EAAM,GAEZ,OADGA,EAAIvF,EAAE,IAAMA,EAAE,GACVuF,IACLjb,OAAO,SAACD,EAAKmb,GACf,OAAOliB,OAAO6M,OAAO9F,EAAKmb,MAG/BC,GAAW,QACXC,GAAWnI,GAAuB,SAAS,GAC3CoI,GAAW,SAAStR,EAAG2M,EAAG3B,EAAGG,GAC5B,MAAO,CACH9X,UAAW,QACXE,KAAMoZ,EACNxM,aAAc6K,EACdpL,UAAWuL,IAIhBoG,GAAuB,EAEvBC,GAAuB,CAAC,CAAEvY,KAAM,EAAGC,OAAQ,IAC3CuY,GAAuB,EACvBC,GAAuB,GACvBC,GAAuB,EAI3B,GAAI,cAAelJ,EAAS,CAC1B,KAAMA,EAAQmJ,aAAahJ,GACzB,MAAM,IAAIxC,MAAM,mCAAqCqC,EAAQmJ,UAAY,MAG3E7I,EAAwBH,EAAuBH,EAAQmJ,WA2BzD,SAAS1I,GAAuBrZ,EAAMgiB,GACpC,MAAO,CAAExf,KAAM,UAAWxC,KAAMA,EAAMgiB,WAAYA,GAGpD,SAAStE,GAAqBpG,EAAOE,EAAUwK,GAC7C,MAAO,CAAExf,KAAM,QAAS8U,MAAOA,EAAOE,SAAUA,EAAUwK,WAAYA,GAWxE,SAAShD,GAAqBpH,GAC5B,MAAO,CAAEpV,KAAM,QAASoV,YAAaA,GAGvC,SAASqK,GAAsBC,GAC7B,IAAwCnkB,EAApCokB,EAAUR,GAAoBO,GAElC,GAAIC,EACF,OAAOA,EAGP,IADApkB,EAAImkB,EAAM,GACFP,GAAoB5jB,IAC1BA,IASF,IALAokB,EAAU,CACR/Y,MAFF+Y,EAAUR,GAAoB5jB,IAEZqL,KAChBC,OAAQ8Y,EAAQ9Y,QAGXtL,EAAImkB,GACmB,KAAxBvJ,EAAMZ,WAAWha,IACnBokB,EAAQ/Y,OACR+Y,EAAQ9Y,OAAS,GAEjB8Y,EAAQ9Y,SAGVtL,IAIF,OADA4jB,GAAoBO,GAAOC,EACpBA,EAIX,SAASC,GAAoBC,EAAUC,GACrC,IAAIC,EAAkBN,GAAsBI,GACxCG,EAAkBP,GAAsBK,GAE5C,MAAO,CACLnZ,MAAO,CACLsZ,OAAQJ,EACRjZ,KAAQmZ,EAAgBnZ,KACxBC,OAAQkZ,EAAgBlZ,QAE1BqO,IAAK,CACH+K,OAAQH,EACRlZ,KAAQoZ,EAAcpZ,KACtBC,OAAQmZ,EAAcnZ,SAK5B,SAASqZ,GAASrM,GACZqL,GAAcE,KAEdF,GAAcE,KAChBA,GAAiBF,GACjBG,GAAsB,IAGxBA,GAAoBpf,KAAK4T,IAO3B,SAASsM,GAAyBtM,EAAUC,EAAOpN,GACjD,OAAO,IAAIkN,EACTA,EAAgBW,aAAaV,EAAUC,GACvCD,EACAC,EACApN,GAIJ,SAAS+P,KAKP,OA87DF,WACE,IAAI2J,EAAIC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAAUC,EA6G3D,OA3GAP,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOH,IACnCsB,EAAKtB,GACLG,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASlB,KAEpCqB,IAAO/J,GACJuK,OACMvK,IACTgK,EAAKQ,QACMxK,GACJuK,OACMvK,GAC6B,MAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAKjD,GACL4B,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAS3C,KAEpCgD,IAAOjK,GACJuK,OACMvK,IACTkK,EA1hBd,WACE,IAAIJ,EAAIC,EAAQC,EAAQC,EAAQC,EAsEhC,OApEAJ,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOjD,IACnCoE,EAAKpE,GACLiD,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAShE,KAEpCmE,IAAO/J,GACJuK,OACMvK,GAC6B,MAAlCH,EAAMZ,WAAW2J,KACnBoB,EAAKhD,GACL4B,OAEAoB,EAAKhK,EACmB,IAApBgJ,IAAyBY,GAAS3C,KAEpC+C,IAAOhK,GACJuK,OACMvK,IACTiK,EAAKQ,QACMzK,IACTiK,EAAK,MAEHA,IAAOjK,GACJuK,OACMvK,GAC6B,MAAlCH,EAAMZ,WAAW2J,KACnBsB,EAAKhD,GACL0B,OAEAsB,EAAKlK,EACmB,IAApBgJ,IAAyBY,GAASzC,KAEpC+C,IAAOlK,GAET+J,EAAK3C,GAAQ6C,GACbH,EAAKC,IAELnB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAmdUY,MACM1K,GACJuK,OACMvK,IACTmK,EAtlDlB,WACE,IAAQJ,EAAIY,EAAIX,EAAIY,EAmBpB,IAjBKhC,GACLmB,EAAK,GACLY,EAAK/B,IACLoB,EAAKa,QACM7K,IACT4K,EAAKL,QACMvK,EAET2K,EADAX,EAAK,CAACA,EAAIY,IAOZhC,GAAc+B,EACdA,EAAK3K,GAEA2K,IAAO3K,GACZ+J,EAAGpgB,KAAKghB,GACRA,EAAK/B,IACLoB,EAAKa,QACM7K,IACT4K,EAAKL,QACMvK,EAET2K,EADAX,EAAK,CAACA,EAAIY,IAOZhC,GAAc+B,EACdA,EAAK3K,GAST,OANI+J,IAAO/J,IAET+J,EAAK3H,EAAQ2H,IAEVA,EA4iDgBe,MACM9K,GACHuK,OACMvK,IACVoK,EA3iDtB,WACE,IAAQL,EAAIY,EAAIX,EAAIY,EAmBpB,IAjBKhC,GACLmB,EAAK,GACLY,EAAK/B,IACLoB,EAAKe,QACM/K,IACT4K,EAAKL,QACMvK,EAET2K,EADAX,EAAK,CAACA,EAAIY,IAOZhC,GAAc+B,EACdA,EAAK3K,GAEA2K,IAAO3K,GACZ+J,EAAGpgB,KAAKghB,GACRA,EAAK/B,IACLoB,EAAKe,QACM/K,IACT4K,EAAKL,QACMvK,EAET2K,EADAX,EAAK,CAACA,EAAIY,IAOZhC,GAAc+B,EACdA,EAAK3K,GAST,OANI+J,IAAO/J,IAET+J,EAAKxH,EAAQwH,IAEVA,EAigDqBiB,MACMhL,GACJuK,OACMvK,GAC4B,MAAlCH,EAAMZ,WAAW2J,KACnByB,EAAMnD,GACN0B,OAEAyB,EAAMrK,EACkB,IAApBgJ,IAAyBY,GAASzC,KAEpCkD,IAAQrK,GACJuK,OACMvK,GAEV+J,EAAKpB,GAASqB,EAAIE,EAAIC,EAAIC,GAC1BN,EAAKC,IAMPnB,GAAckB,EACdA,EAAK9J,KA+BrB4I,GAAckB,EACdA,EAAK9J,KAeb4I,GAAckB,EACdA,EAAK9J,GAGA8J,EA9iEFmB,GAKP,SAASC,KACP,IAAIpB,EAsBJ,OApBIjK,EAAMyK,OAAO1B,GAAa,KAAOvI,GACnCyJ,EAAKzJ,EACLuI,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAStJ,IAEpCwJ,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOpI,GACnCsJ,EAAKtJ,EACLoI,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASnJ,IAEpCqJ,IAAO9J,IACT8J,EAON,WACE,IAAIA,EAAIC,EAAIY,EAsBZ,OApBAb,EAAKlB,IACLmB,EAsBF,WACE,IAAID,EAmBJ,OAjBsC,KAAlCjK,EAAMZ,WAAW2J,KACnBkB,EAAKlJ,EACLgI,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS/I,IAEpCiJ,IAAO9J,IAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBkB,EAAKhJ,EACL8H,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS7I,KAInC+I,EA1CFqB,MACMnL,IACT2K,EA2CJ,WACE,IAAIb,EAUJ,OARsC,KAAlCjK,EAAMZ,WAAW2J,KACnBkB,EAAK9I,EACL4H,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS3I,IAGjC6I,EAtDAsB,MACMpL,IACT2K,EAAK,MAEHA,IAAO3K,GAET+J,EAAKrJ,EAAOqJ,EAAIY,GAChBb,EAAKC,IAELnB,GAAckB,EACdA,EAAK9J,KAGP4I,GAAckB,EACdA,EAAK9J,GAGA8J,EA9BEuB,KAIFvB,EAuIT,SAASwB,KACP,IAAIxB,EAAIC,EAAQC,EAAQC,EAwCxB,OAtCAH,EAAKlB,IACLmB,EAAKwB,QACMvL,GACJuK,OACMvK,IACTgK,EAAKkB,QACMlL,GACJuK,OACMvK,IACTiK,EAAKsB,QACMvL,EAGT8J,EADAC,EAAKjI,EAAQiI,EAAIC,EAAIC,IAmB7BrB,GAAckB,EACdA,EAAK9J,GAEH8J,IAAO9J,IACT8J,EAAKyB,MAGAzB,EAGT,SAASyB,KACP,IAAIzB,EAAIC,EAAQC,EAAQC,EAwCxB,OAtCAH,EAAKlB,IACLmB,EAAKyB,QACMxL,GACJuK,OACMvK,IACTgK,EAzHN,WACE,IAAIF,EAmBJ,OAjBIjK,EAAMyK,OAAO1B,GAAa,KAAO1H,GACnC4I,EAAK5I,EACL0H,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASzI,IAEpC2I,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOxH,GACnC0I,EAAK1I,EACLwH,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASvI,KAInCyI,EAqGE2B,MACMzL,GACJuK,OACMvK,IACTiK,EAAKsB,QACMvL,EAGT8J,EADAC,EAAKjI,EAAQiI,EAAIC,EAAIC,IAmB7BrB,GAAckB,EACdA,EAAK9J,GAEH8J,IAAO9J,IACT8J,EAAK0B,MAGA1B,EAGT,SAAS0B,KACP,IAAI1B,EAAIC,EAAQC,EAAQC,EAwCxB,OAtCAH,EAAKlB,IACLmB,EAAK2B,QACM1L,GACJuK,OACMvK,IACTgK,EA9IN,WACE,IAAIF,EAmBJ,OAjBsC,KAAlCjK,EAAMZ,WAAW2J,KACnBkB,EAAKxI,EACLsH,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASrI,IAEpCuI,IAAO9J,IAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBkB,EAAKtI,EACLoH,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASnI,KAInCqI,EA0HE6B,MACM3L,GACJuK,OACMvK,IACTiK,EAAKuB,QACMxL,EAGT8J,EADAC,EAAKhI,EAAQgI,EAAIC,EAAIC,IAmB7BrB,GAAckB,EACdA,EAAK9J,GAEH8J,IAAO9J,IACT8J,EAAK4B,MAGA5B,EAGT,SAAS4B,KACP,IAAI5B,EAAIC,EAAQC,EAAQC,EAwCxB,OAtCAH,EAAKlB,IACLmB,EAAK6B,QACM5L,GACJuK,OACMvK,IACTgK,EAnKN,WACE,IAAIF,EAmBJ,OAjBsC,KAAlCjK,EAAMZ,WAAW2J,KACnBkB,EAAKpI,EACLkH,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASjI,IAEpCmI,IAAO9J,IAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBkB,EAAKlI,EACLgH,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS/H,KAInCiI,EA+IE+B,MACM7L,GACJuK,OACMvK,IACTiK,EAAKyB,QACM1L,EAGT8J,EADAC,EAAKhI,EAAQgI,EAAIC,EAAIC,IAmB7BrB,GAAckB,EACdA,EAAK9J,GAEH8J,IAAO9J,IACT8J,EAAK8B,MAGA9B,EAGT,SAAS8B,KACP,IAAI9B,EAAIC,EAAIY,EAAIX,EAmDhB,OAjDAF,EA25BF,WACE,IAAQC,EAAIY,EAKZ,GAHK/B,GACLmB,EAAK,IACLY,EAAKmB,QACM9L,EACT,KAAO2K,IAAO3K,GACZ+J,EAAGpgB,KAAKghB,GACRA,EAAKmB,UAGP/B,EAAK/J,EAQP,OANI+J,IAAO/J,IAET+J,EAAK/D,GAAQ+D,IAEVA,EA76BAgC,MACM/L,IACT8J,EA4+BJ,WACE,IAAQC,EAyBR,OAvBKnB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOvC,IACnC0D,EAAK1D,GACLuC,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAStD,KAEpCyD,IAAO/J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOrC,IACnCwD,EAAKxD,GACLqC,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASpD,MAGtCuD,IAAO/J,IAET+J,EAAKtD,GAAQsD,IAEVA,EApgCEiC,MACMhM,IACT8J,EAm4BN,WACE,IAAQC,EAgBR,OAdKnB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAO/C,IACnCkE,EAAKlE,GACL+C,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS9D,KAEpCiE,IAAO/J,IAET+J,EAAKhE,MAEFgE,EAl5BIkC,MACMjM,IACT8J,EAAKoC,QACMlM,IACT8J,EAAKqC,QACMnM,IACT8J,EAAKlB,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBmB,EAAK/H,EACL4G,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS3H,IAEpC8H,IAAO/J,IACT2K,EAAKW,QACMtL,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBoB,EAAK9H,EACL0G,OAEAoB,EAAKhK,EACmB,IAApBgJ,IAAyBY,GAASzH,IAEpC6H,IAAOhK,EAET8J,EADAC,EAAK,CAACA,EAAIY,EAAIX,IAGdpB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,IAQV8J,EAiGT,SAASe,KACP,IAAIf,EAAIC,EAAQC,EAwChB,OAtCAF,EAAKlB,IACLmB,EAAKmC,QACMlM,IACT+J,EA4NJ,WACE,IAAID,EAAIC,EAAIY,EAAIX,EAAIY,EA0CpB,OAxCAd,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOxF,GACnC2G,EAAK3G,EACLwF,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASvG,IAEpC0G,IAAO/J,GACT2K,EAAK/B,IACLoB,EAAKoC,QACMpM,IACT4K,EAAKU,QACMtL,EAET2K,EADAX,EAAK,CAACA,EAAIY,IAOZhC,GAAc+B,EACdA,EAAK3K,GAEH2K,IAAO3K,IACT2K,EAAK,MAEHA,IAAO3K,GAET+J,EAAKzG,EAAQqH,GACbb,EAAKC,IAELnB,GAAckB,EACdA,EAAK9J,KAGP4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAvQAuC,MACMrM,IACT+J,EAgHN,WACE,IAAID,EAAIC,EAAQC,EAAQC,EAAQC,EAuDhC,OArDAJ,EAAKlB,IACLmB,EAAKuC,QACMtM,GACJoM,OACMpM,IACTgK,EAAKQ,QACMxK,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAKjJ,EACL4H,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAS3I,IAEpCgJ,IAAOjK,GACJuK,OACMvK,IACTkK,EAAKoB,QACMtL,GAET+J,EAAK9G,EAAQ8G,EAAIC,EAAIE,GACrBJ,EAAKC,IAUTnB,GAAckB,EACdA,EAAK9J,KAeb4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAxKEyC,MACMvM,IACT+J,EAyKR,WACE,IAAID,EAAIC,EAAQC,EAAQC,EA2CxB,OAzCAH,EAAKlB,IACLmB,EAAKoC,QACMnM,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBoB,EAAKhJ,EACL4H,OAEAoB,EAAKhK,EACmB,IAApBgJ,IAAyBY,GAAS3I,IAEpC+I,IAAOhK,GACJuK,OACMvK,IACTiK,EAAKqB,QACMtL,GAET+J,EAAK5G,EAAQ4G,EAAIE,GACjBH,EAAKC,IAUTnB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,GAGA8J,EArNI0C,IAIPzC,IAAO/J,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBoB,EAAKvH,EACLmG,OAEAoB,EAAKhK,EACmB,IAApBgJ,IAAyBY,GAASlH,IAEpCsH,IAAOhK,EAGT8J,EADAC,EAAKpH,EAAQoH,IAGbnB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAGT,SAAS2C,KACP,IAAI3C,EAOJ,OALAA,EAAK4C,QACM1M,IACT8J,EAomCJ,WACE,IAAIA,EAAIC,EAAQC,EAAQC,EA2CxB,OAzCAH,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOjB,IACnCoC,EAAKpC,GACLiB,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAShC,KAEpCmC,IAAO/J,GACJuK,OACMvK,IACTgK,EAAK2C,QACM3M,GACJuK,OACMvK,IACTiK,EAAK2C,QACM5M,GAET+J,EAAKlC,GAASmC,EAAIC,GAClBH,EAAKC,IAkBbnB,GAAckB,EACdA,EAAK9J,GAGA8J,EAhpCA+C,IAGA/C,EA4NT,SAASU,KACP,IAAIV,EAAIC,EAAIY,EAAIX,EAIhB,GAFAF,EAAKlB,IACLmB,EAAK+C,QACM9M,EAAY,CASrB,IARA2K,EAAK,IACLX,EAAK8C,QACM9M,IACTgK,EAAK8B,QACM9L,IACTgK,EAAK+C,MAGF/C,IAAOhK,GACZ2K,EAAGhhB,KAAKqgB,IACRA,EAAK8C,QACM9M,IACTgK,EAAK8B,QACM9L,IACTgK,EAAK+C,MAIPpC,IAAO3K,EAGT8J,EADAC,EAAKxG,EAAQwG,EAAIY,IAGjB/B,GAAckB,EACdA,EAAK9J,QAGP4I,GAAckB,EACdA,EAAK9J,EAGP,OAAO8J,EAGT,SAASqC,KACP,IAAIrC,EAAIC,EAAIY,EAAIX,EAIhB,GAFAF,EAAKlB,IACLmB,EAAKS,QACMxK,EAAY,CAGrB,IAFA2K,EAAK,GACLX,EAAKgD,KACEhD,IAAOhK,GACZ2K,EAAGhhB,KAAKqgB,GACRA,EAAKgD,KAEHrC,IAAO3K,EAGT8J,EADAC,EAAKrG,EAAQqG,EAAIY,IAGjB/B,GAAckB,EACdA,EAAK9J,QAGP4I,GAAckB,EACdA,EAAK9J,EAGP,OAAO8J,EAyNT,SAASoC,KACP,IAAIpC,EAAIC,EAAIY,EAmBZ,OAjBAb,EAAKlB,IACLmB,EAAKS,QACMxK,IACT2K,EArIJ,WACE,IAAIb,EAAIC,EAAQC,EAAIY,EAAIX,EAAIgD,EAAI/C,EAAIgD,EAAI/C,EAUxC,GARAL,EAAKlB,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBmB,EAAK/H,EACL4G,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS3H,IAEpC8H,IAAO/J,EAET,GADKuK,OACMvK,EAAY,CAGrB,GAFAgK,EAAKpB,IACLgC,EAAKU,QACMtL,EAAY,CA6BrB,IA5BAiK,EAAK,GACLgD,EAAKrE,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBsB,EAAK7F,GACLuE,OAEAsB,EAAKlK,EACmB,IAApBgJ,IAAyBY,GAAStF,KAEpC4F,IAAOlK,IACTkN,EAAK3C,QACMvK,IACTmK,EAAKmB,QACMtL,EAETiN,EADA/C,EAAK,CAACA,EAAIgD,EAAI/C,IAWlBvB,GAAcqE,EACdA,EAAKjN,GAEAiN,IAAOjN,GACZiK,EAAGtgB,KAAKsjB,GACRA,EAAKrE,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBsB,EAAK7F,GACLuE,OAEAsB,EAAKlK,EACmB,IAApBgJ,IAAyBY,GAAStF,KAEpC4F,IAAOlK,IACTkN,EAAK3C,QACMvK,IACTmK,EAAKmB,QACMtL,EAETiN,EADA/C,EAAK,CAACA,EAAIgD,EAAI/C,IAWlBvB,GAAcqE,EACdA,EAAKjN,GAGLiK,IAAOjK,EAETgK,EADAY,EAAK,CAACA,EAAIX,IAGVrB,GAAcoB,EACdA,EAAKhK,QAGP4I,GAAcoB,EACdA,EAAKhK,EAEHgK,IAAOhK,IACTgK,EAAK,MAEHA,IAAOhK,IACT4K,EAAKL,QACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAK/H,EACL0G,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAASzH,IAEpC8H,IAAOjK,EAGT8J,EADAC,EAAKxF,GAAQyF,IAGbpB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,QAGP4I,GAAckB,EACdA,EAAK9J,OAGP4I,GAAckB,EACdA,EAAK9J,EAGP,OAAO8J,EASAqD,MACMnN,EAGT8J,EADAC,EAAKtF,GAAQsF,EAAIY,IAOnB/B,GAAckB,EACdA,EAAK9J,GAGA8J,EAGT,SAASkD,KACP,IAAIlD,EAOJ,OALAA,EAhPF,WACE,IAAIA,EAAIC,EAAQC,EAAQC,EAiDxB,OA/CAH,EAAKlB,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBmB,EAAKpG,EACLiF,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAShG,IAEpCmG,IAAO/J,GACJuK,OACMvK,IACTgK,EAAKsB,QACMtL,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAKpG,EACL+E,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAS9F,IAEpCmG,IAAOjK,EAGT8J,EADAC,EAAKhG,EAAQiG,IAGbpB,GAAckB,EACdA,EAAK9J,KAeb4I,GAAckB,EACdA,EAAK9J,GAGA8J,EA8LFsD,MACMpN,IACT8J,EA7LJ,WACE,IAAQC,EAAIY,EAAIX,EA8BhB,OA5BKpB,GACLmB,EAAKnB,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnB+B,EAAK1G,GACL2E,OAEA+B,EAAK3K,EACmB,IAApBgJ,IAAyBY,GAAS1F,KAEpCyG,IAAO3K,IACTgK,EAAKQ,QACMxK,EAET+J,EADAY,EAAK,CAACA,EAAIX,IAOZpB,GAAcmB,EACdA,EAAK/J,GAEH+J,IAAO/J,IAET+J,EAAK5F,GAAQ4F,IAEVA,EAgKEsD,IAGAvD,EAGT,SAASgD,KACP,IAAIhD,EAUJ,OARIpF,GAAQ4I,KAAKzN,EAAM0N,OAAO3E,MAC5BkB,EAAKjK,EAAM0N,OAAO3E,IAClBA,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASjF,KAGjCmF,EAGT,SAASgC,KACP,IAAIhC,EAUJ,OARIjF,GAAQyI,KAAKzN,EAAM0N,OAAO3E,MAC5BkB,EAAKjK,EAAM0N,OAAO3E,IAClBA,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS9E,KAGjCgF,EAGT,SAASiD,KACP,IAAIjD,EAUJ,OARsC,KAAlCjK,EAAMZ,WAAW2J,KACnBkB,EAAK/E,GACL6D,OAEAkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS5E,KAGjC8E,EAuET,SAASwC,KACP,IAAIxC,EAuDJ,OArDIjK,EAAMyK,OAAO1B,GAAa,KAAO3D,IACnC6E,EAAK7E,GACL2D,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAS1E,KAEpC4E,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOzD,IACnC2E,EAAK3E,GACLyD,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASxE,KAEpC0E,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOvD,IACnCyE,EAAKzE,GACLuD,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAStE,KAEpCwE,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOrD,IACnCuE,EAAKvE,GACLqD,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASpE,KAEpCsE,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOnD,IACnCqE,EAAKrE,GACLmD,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAASlE,KAEpCoE,IAAO9J,IACLH,EAAMyK,OAAO1B,GAAa,KAAOjD,IACnCmE,EAAKnE,GACLiD,IAAe,IAEfkB,EAAK9J,EACmB,IAApBgJ,IAAyBY,GAAShE,UAQ3CkE,EA8CT,SAASS,KACP,IAAIT,EAAIC,EAWR,IATAf,KACAc,EAAK,GACD3D,GAAQmH,KAAKzN,EAAM0N,OAAO3E,MAC5BmB,EAAKlK,EAAM0N,OAAO3E,IAClBA,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASxD,KAEjC2D,IAAO/J,GACZ8J,EAAGngB,KAAKogB,GACJ5D,GAAQmH,KAAKzN,EAAM0N,OAAO3E,MAC5BmB,EAAKlK,EAAM0N,OAAO3E,IAClBA,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASxD,KAS1C,OANA4C,KACIc,IAAO9J,IACT+J,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS3D,KAGjC6D,EAGT,SAASsC,KACP,IAAItC,EAAIC,EAUR,GARAD,EAAK,GACD3D,GAAQmH,KAAKzN,EAAM0N,OAAO3E,MAC5BmB,EAAKlK,EAAM0N,OAAO3E,IAClBA,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASxD,KAEpC2D,IAAO/J,EACT,KAAO+J,IAAO/J,GACZ8J,EAAGngB,KAAKogB,GACJ5D,GAAQmH,KAAKzN,EAAM0N,OAAO3E,MAC5BmB,EAAKlK,EAAM0N,OAAO3E,IAClBA,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAASxD,UAI1C0D,EAAK9J,EAGP,OAAO8J,EAgCT,SAAS6C,KACP,IAAI7C,EAAIC,EAAQC,EAAQC,EAiDxB,OA/CAH,EAAKlB,GACiC,KAAlC/I,EAAMZ,WAAW2J,KACnBmB,EAAK/H,EACL4G,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS3H,IAEpC8H,IAAO/J,GACJuK,OACMvK,IACTgK,EAAKsB,QACMtL,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAK/H,EACL0G,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAASzH,IAEpC8H,IAAOjK,EAGT8J,EADAC,EAAKpD,GAAQqD,IAGbpB,GAAckB,EACdA,EAAK9J,KAeb4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAGT,SAAS0D,KACP,IAAI1D,EAAIC,EAAIY,EAAQC,EAwCpB,OAtCAd,EAAKlB,IACLmB,EAAKuC,QACMtM,GACLH,EAAMyK,OAAO1B,GAAa,KAAOhC,IACnC+D,EAAK/D,GACLgC,IAAe,IAEf+B,EAAK3K,EACmB,IAApBgJ,IAAyBY,GAAS/C,KAEpC8D,IAAO3K,IACT2K,EAAK,MAEHA,IAAO3K,GACJoM,OACMpM,IACT4K,EAAKJ,QACMxK,EAGT8J,EADAC,EAAKjD,GAAQiD,EAAIY,EAAIC,IAWzBhC,GAAckB,EACdA,EAAK9J,KAGP4I,GAAckB,EACdA,EAAK9J,GAGA8J,EA6ET,SAAS4C,KACP,IAAI5C,EAAIC,EAAQC,EAAQC,EAAQC,EAuDhC,OArDAJ,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOvB,IACnC0C,EAAK1C,GACLuB,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAStC,KAEpCyC,IAAO/J,GACJuK,OACMvK,IACTgK,EAAK2C,QACM3M,GACJuK,OACMvK,IACTiK,EAAK2C,QACM5M,GACJuK,OACMvK,IACTkK,EAqCd,WACE,IAAQH,EAAIY,EAAIX,EAAIY,EAuCpB,OArCKhC,GACLmB,EAAKnB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOpB,IACnCmD,EAAKnD,GACLoB,IAAe,IAEf+B,EAAK3K,EACmB,IAApBgJ,IAAyBY,GAASnC,KAEpCkD,IAAO3K,IACTgK,EAAKO,QACMvK,IACT4K,EA4BN,WACE,IAAId,EAOJ,OALAA,EAAK4C,QACM1M,IACT8J,EAAK8C,MAGA9C,EApCE2D,MACMzN,EAET+J,EADAY,EAAK,CAACA,EAAIX,EAAIY,IAWlBhC,GAAcmB,EACdA,EAAK/J,GAEH+J,IAAO/J,IACT+J,EAAK,MAEHA,IAAO/J,IAET+J,EAAKrC,GAAQqC,IAEVA,EA3EY2D,MACM1N,EAGT8J,EADAC,EAAKxC,GAAQyC,EAAIC,EAAIC,IA2BjCtB,GAAckB,EACdA,EAAK9J,GAGA8J,EAwGT,SAAS8C,KACP,IAAI9C,EAAIC,EAAQC,EAAQC,EAoDxB,OAlDAH,EAAKlB,GACiC,MAAlC/I,EAAMZ,WAAW2J,KACnBmB,EAAK/C,GACL4B,OAEAmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS3C,KAEpC8C,IAAO/J,GACJuK,OACMvK,IACTgK,EA3pCN,WACE,IAAIF,EAAIC,EAAIY,EAAIX,EAAIY,EAAIX,EAOxB,GALAH,EAAKlB,IACLmB,EAAKc,QACM7K,IACT+J,EAAK0C,MAEH1C,IAAO/J,EAAY,CAoBrB,IAnBA2K,EAAK,GACLX,EAAKpB,IACLgC,EAAKL,QACMvK,IACTiK,EAAKY,QACM7K,IACTiK,EAAKwC,MAEHxC,IAAOjK,EAETgK,EADAY,EAAK,CAACA,EAAIX,IAGVrB,GAAcoB,EACdA,EAAKhK,KAGP4I,GAAcoB,EACdA,EAAKhK,GAEAgK,IAAOhK,GACZ2K,EAAGhhB,KAAKqgB,GACRA,EAAKpB,IACLgC,EAAKL,QACMvK,IACTiK,EAAKY,QACM7K,IACTiK,EAAKwC,MAEHxC,IAAOjK,EAETgK,EADAY,EAAK,CAACA,EAAIX,IAGVrB,GAAcoB,EACdA,EAAKhK,KAGP4I,GAAcoB,EACdA,EAAKhK,GAGL2K,IAAO3K,EAGT8J,EADAC,EAAKlH,EAAQkH,EAAIY,IAGjB/B,GAAckB,EACdA,EAAK9J,QAGP4I,GAAckB,EACdA,EAAK9J,EAGP,OAAO8J,EA6lCE6D,MACM3N,IACTgK,EAAK,MAEHA,IAAOhK,GACJuK,OACMvK,GAC6B,MAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAK/C,GACL0B,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAASzC,KAEpC8C,IAAOjK,EAGT8J,EADAC,EAAKjC,GAASkC,IAGdpB,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAGT,SAASiB,KACP,IAAIjB,EAAIC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAAUC,EAAUuD,EA4HrE,OA1HA9D,EAAKlB,GACD/I,EAAMyK,OAAO1B,GAAa,KAAOb,IACnCgC,EAAKhC,GACLa,IAAe,IAEfmB,EAAK/J,EACmB,IAApBgJ,IAAyBY,GAAS5B,KAEpC+B,IAAO/J,GACJoM,OACMpM,IACTgK,EAAKQ,QACMxK,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAKjI,EACL4G,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAS3H,IAEpCgI,IAAOjK,GACJuK,OACMvK,IACTkK,EAAKO,QACMzK,IACTkK,EAAK,MAEHA,IAAOlK,GACJuK,OACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBuB,EAAKjI,EACL0G,OAEAuB,EAAKnK,EACmB,IAApBgJ,IAAyBY,GAASzH,IAEpCgI,IAAOnK,GACHuK,OACMvK,GAC4B,KAAlCH,EAAMZ,WAAW2J,KACnBwB,EAAMnC,GACNW,OAEAwB,EAAMpK,EACkB,IAApBgJ,IAAyBY,GAAS1B,KAEpCkC,IAAQpK,GACJuK,OACMvK,IACVqK,EAAMiC,QACMtM,GACJuK,OACMvK,IACV4N,EAAMhB,QACM5M,EAGV8J,EADAC,EAAK5B,GAAS6B,EAAIE,EAAIG,EAAKuD,IAmBnChF,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAOT4I,GAAckB,EACdA,EAAK9J,KAeb4I,GAAckB,EACdA,EAAK9J,GAGA8J,EAGT,SAASW,KACP,IAAIX,EAAIC,EAAIY,EAAIX,EAAIY,EAAIX,EAAIgD,EAAI/C,EAIhC,GAFAJ,EAAKlB,IACLmB,EAAKyD,QACMxN,EAAY,CAmCrB,IAlCA2K,EAAK,GACLX,EAAKpB,IACLgC,EAAKL,QACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAK5F,GACLuE,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAStF,KAEpC2F,IAAOjK,IACTiN,EAAK1C,QACMvK,IACTkK,EAAKsD,QACMxN,EAETgK,EADAY,EAAK,CAACA,EAAIX,EAAIgD,EAAI/C,IAWtBtB,GAAcoB,EACdA,EAAKhK,KAGP4I,GAAcoB,EACdA,EAAKhK,GAEAgK,IAAOhK,GACZ2K,EAAGhhB,KAAKqgB,GACRA,EAAKpB,IACLgC,EAAKL,QACMvK,GAC6B,KAAlCH,EAAMZ,WAAW2J,KACnBqB,EAAK5F,GACLuE,OAEAqB,EAAKjK,EACmB,IAApBgJ,IAAyBY,GAAStF,KAEpC2F,IAAOjK,IACTiN,EAAK1C,QACMvK,IACTkK,EAAKsD,QACMxN,EAETgK,EADAY,EAAK,CAACA,EAAIX,EAAIgD,EAAI/C,IAWtBtB,GAAcoB,EACdA,EAAKhK,KAGP4I,GAAcoB,EACdA,EAAKhK,GAGL2K,IAAO3K,EAGT8J,EADAC,EAAK3B,GAAS2B,EAAIY,IAGlB/B,GAAckB,EACdA,EAAK9J,QAGP4I,GAAckB,EACdA,EAAK9J,EAGP,OAAO8J,EAsHT,IAFA/J,EAAaK,OAEMJ,GAAc4I,KAAgB/I,EAAMla,OACrD,OAAOoa,EAMP,MAJIA,IAAeC,GAAc4I,GAAc/I,EAAMla,QACnDikB,GA5oEK,CAAElgB,KAAM,QA+oETmgB,GACJd,GACAD,GAAiBjJ,EAAMla,OAASka,EAAM0N,OAAOzE,IAAkB,KAC/DA,GAAiBjJ,EAAMla,OACnB2jB,GAAoBR,GAAgBA,GAAiB,GACrDQ,GAAoBR,GAAgBA","file":"static/js/main.b15a910a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/newLogo.a247b4ce.svg\";","import { Signal } from 'signals';\n\nclass EventManager {\n    events = {};\n\n    add = (name, callback) => {\n        events[name] = new Signal();\n        events[name].add(callback);\n    }\n\n    dispatch = (name, ...params) => {\n        events[name] && events[name].dispatch(params);\n    }\n\n    remove = (name, callback) => {\n        events[name] && events[name].remove(callback);\n    }\n}\n\nexport const events = (() => {\n    let instance;\n\n    const createInstance = () => {\n        if (!instance) {\n            instance = new EventManager();\n        }\n        return instance;\n    }\n\n    return {\n        getInstance: createInstance\n    }\n})();","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { edit, config } from 'ace-builds';\n\nexport class AceEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n        this.events.add('setCode', this.setCode);\n\n        this.editor = undefined;\n        this.text = '';\n        this.panelCallback = props.panelCallback;\n    }\n\n    setCode = (code) => {\n        code = code[0];\n        if (this.editor) {\n            this.editor.getSession().setValue(code);\n        }\n    }\n\n    componentDidMount() {\n        this.editor = edit('ace-container');\n        config.set('basePath', '/VisualStructures/lib/ace/');\n        this.editor.setTheme('ace/theme/tomorrow_night');\n        this.editor.getSession().setUseWorker(false);\n        this.editor.getSession().setTabSize(4);\n        this.editor.setOptions({\n            fontFamily: 'monaco',\n            showPrintMargin: false\n        });\n        // this.editor.getSession().setMode('ace/mode/javascript');\n        this.editor.getSession().on('change', (e) => {\n            this.panelCallback(this.editor.getSession().getValue());\n        });\n    }\n\n    render() {\n        return (\n            <div id='ace-container' className=\"Ace\"></div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport class EditorBar extends Component {\n    render() {\n        return (\n            <div className=\"EditorBar\">\n                <div className=\"TextDiv\">\n                    <span>{this.props.errorText}</span>\n                </div>\n                <div className=\"LocationDiv\">\n                    <span>{this.props.errorLocation}</span>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { events } from './EventManager';\nimport { Button } from 'antd';\n\nexport class Tabs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.tabs = [];\n\n        this.events = events.getInstance();\n\n        this.events.add('setTab', this.setTab.bind(this));\n\n        (props.children || []).forEach(tab => {\n            if (tab.type === 'tab') {\n                this.tabs.push({\n                    name: tab.props.name || '',\n                    elements: tab.props.children || []\n                });\n            }\n        });\n        this.state = {\n            visibleTab: this.tabs.length && this.tabs[0].name\n        }\n    }\n\n    onClick = (e) => {\n        this.setState({ visibleTab: e.tab });\n    }\n\n    setTab(tabName) {\n        this.setState({ visibleTab: tabName[0] });\n    }\n\n    render() {\n        return (\n            <div className=\"Tabs\">\n                <div className='TabButtons' id=\"tabButtons\">\n                    {\n                        this.tabs.map(tab => {\n                            return <Button type={this.state.visibleTab === tab.name ? 'primary' : 'default'} key={tab.name} onClick={this.onClick.bind(this, { tab: tab.name })}>{tab.name}</Button>\n                        })\n                    }\n                </div>\n                <div className='TabContents'>\n                    {\n                        this.tabs.map(tab => {\n                            return (\n                                <div key={tab.name} style={this.state.visibleTab === tab.name ? {} : {display: 'none'}}>\n                                    {tab.elements}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport class DocumentationPanel extends Component {\n    render() {\n        return (\n            <div className=\"DocumentationPanel\" style={{display: 'block', overflowY: 'auto'}}>\n                <h1>VsLang</h1>\n                <h2>Class</h2>\n                <p>\n                    Every module of this language is a essencialy a class, this is where all the definitions must be. Every class must have a definition of a Node, which will be explained next, and a name.\n                    The most basic example of a class would be\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"class Example {\\n    Node {\\n    }\\n}\"}\n                        </code>\n                    </pre>\n                </div>\n                <h2>Node</h2>\n                <p>\n                    The Node is a must have on every class because the ideia of the language is to work around data structures, and the best way to control data in data structures is with nodes. \n                    The way you define a Node is the same way you define parameters, type of the property followed by the name of the property. An example of a Node would be\n\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"Node {\\n\"}\n                            {\"    number value,\\n\"}\n                            {\"    Node next\\n\"}\n                            {\"}\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    The types available available in the language are number, string, bool and Node.\n                </p>\n                <h2>Declaration</h2>\n                <p>\n                    The declarations are the made writing the type of the variable, followed by the name of it, equals the value. For example\n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"Node root = Node(2);\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    As you can see, we have just created a Node called root, with value equals 2. When calling functions, every property not passed on the function called will be set to null.\n                    In this case, the property next of our variable is set to null, since a value was not passed.\n                </p>\n                <h2>Attribution</h2>\n                <p>\n                    Well, the attribution has not a lot of mistery, is the same as the declaration, but without the type definition. The variable must have already been defined, of course.\n                </p>\n                <h2>Function</h2>\n                <p>\n                    Functions are declared using the word 'fun', followed by its name and the parameters inside braces, followed by ':' and its return type.\n                    The code of the function comes next inside curly braces. Just like this \n                </p>\n                <div className=\"Code\">\n                    <pre>\n                        <code>\n                            {\"fun add(number val): void {\\n\"}\n                            {\"    Node aux = root;\\n\"}\n                            {\"    if (aux == null) {\\n\"}\n                            {\"        Node aux = Node(val);\\n\"}\n                            {\"    } else {\\n\"}\n                            {\"        while (aux.next != null) {\\n\"}\n                            {\"            aux = aux.next;\\n\"}\n                            {\"        }\\n\"}\n                            {\"        aux.next = Node(val);\\n\"}\n                            {\"    }\\n\"}\n                            {\"}\\n\"}\n                        </code>\n                    </pre>\n                </div>\n                <p>\n                    Preety cool, huh? And as you select the add function on the visualizer bar and press Run, you will see the root node being drawn. \n                    Remender, the first node declared will be the the one vizualied. At least for now.\n                </p>\n            </div>\n        );\n    }\n}","export class Step {\n    nodes = {};\n    edges = [];\n\n    constructor(info) {\n        this.setUp(info);\n    }\n\n    setUp(info) {\n        this.operation = info.operation;\n        this.functionName = info.functionName;\n        (info.nodes || []).forEach(node => {\n            this.nodes[node.id] = {\n                prop: node.prop,\n            };\n            delete node.prop;\n            this.nodes[node.id].info = node;\n        });\n        (info.edges || []).forEach(edge => {\n            this.edges.push(edge);\n            this.nodes[edge.from].edge = {\n                to: edge.to\n            };\n        });\n    }\n\n    getEdges() {\n        return this.edges;\n    }\n\n    getNodes() {\n        return Object.keys(this.nodes).map(key => this.nodes[key].info);\n    }\n\n    getVisualStep() {\n        return {\n            nodes: this.getNodes(),\n            edges: this.getEdges()\n        }\n    }\n}","import { events } from './EventManager';\nimport { Step } from './Step';\n\nexport class History {\n    constructor(al) {\n        this.events = events.getInstance();\n        this.actionList = al || [];\n        this.currentStep = 0;\n    }\n\n    pushStep(step) {\n        this.actionList.push(new Step(step));\n    }\n\n    setStepList(sl) {\n        this.actionList = sl.map(action => new Step(action));\n        this.currentStep = 0;\n        this.displayStep();\n    }\n\n    clear() {\n        this.actionList = [];\n        this.currentStep = 0;\n    }\n\n    nextStep() {\n        this.currentStep = this.currentStep + 1 === this.actionList.length ? this.currentStep : this.currentStep + 1;\n        this.displayStep();\n    }\n\n    lastStep() {\n        this.currentStep = this.currentStep === 0 ? this.currentStep : this.currentStep - 1;\n        this.displayStep();\n    }\n\n    jumpToStep(idx) {\n        if (idx >=0 && idx < this.actionList.length) {\n            this.currentStep = idx;\n            this.displayStep();\n        }\n    }\n\n    displayStep() {\n        const step = this.actionList[this.currentStep].getVisualStep();\n        this.events.dispatch('newStep', step);\n    }\n}","export class Humanizer {\n    types = {\n        'number': this.humanizeNumber.bind(this),\n        'bool': this.humanizeBool.bind(this),\n        'Node': this.humanizeNode.bind(this)\n    }\n\n    humanizeStep(step) {\n        switch (step.operation) {\n            case 'Declaration':\n                return this.humanizeDeclaration(step);\n            case 'Attribution':\n                return this.humanizeAttribution(step);\n            case 'Function':\n                return this.humanizeFunction(step);\n            case 'if':\n                return this.humanizeIf(step);\n            case 'while':\n                return this.humanizeWhile(step);\n            case 'Return':\n                return;\n            default: return false;\n        }\n    }\n\n    humanizeDeclaration(step) {\n        return `${step.type} ${step.variable} = ${step.value.type ? this.types[step.value.type](step.value) : this.humanizeFunction(step.value)}`\n    }\n\n    humanizeAttribution(step) {\n        return `${this.humanizeVariable(step.variable)} = ${step.value.type ? this.types[step.value.type](step.value) : this.humanizeFunction(step.value)}`\n    }\n\n    humanizeNumber(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (op.operation) {\n            return `(${this.humanizeNumber(op.left)} ${op.operation} ${this.humanizeNumber(op.right)})`\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        return op.value;\n    }\n\n    humanizeNode(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        if (Array.isArray(op.value)) {\n            return this.humanizeVariable(op.value);\n        }\n        return op.value;\n    }\n\n    humanizeBool(op) {\n        if (op.operation === 'Function') {\n            return this.humanizeFunction(op);\n        }\n        if (op.operation) {\n            return `(${this.humanizeBool(op.left)} ${op.operation} ${this.humanizeBool(op.right)})`\n        }\n        return op.value;\n    }\n\n    humanizeIf(op) {\n        return `if (${this.humanizeBool(op.condition)})`\n    }\n\n    humanizeWhile(op) {\n        return `while (${this.humanizeBool(op.condition)})`\n    }\n\n    humanizeFunction(op) {\n        if (Array.isArray(op)) {\n            return this.humanizeVariable(op);\n        }\n        return `${op.name}(${this.humanizeParameters(op.parameters)})`;\n    }\n\n    humanizeParameters(parameters) {\n        const res = parameters.reduce((current, parameter) => {\n            return current + (parameter.type ? this.types[parameter.type](parameter) : this.humanizeVariable(parameter)) + ', ';\n        }, '') || '';\n        if (res.endsWith(', ')) {\n            return res.slice(0, -2);\n        }\n        return res;\n    }\n\n    humanizeVariable(variable) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        const first = arrayVar[0];\n        const rest = arrayVar.slice(1);\n        return rest.reduce((current, access) => {\n            return current + (access.type === 'Object' ? `.${access.name}` : `[${access.index}]`)\n        }, first);\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { History } from '../../History';\nimport { Humanizer } from './Humanizer';\nimport { Pagination } from 'antd';\n\nexport class HistoryBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.events.add('updateHistory', this.updateHistory.bind(this));\n\n        this.history = new History();\n\n        this.humanizer = new Humanizer();\n\n        this.state = {\n            numberOfItems: 0,\n            functionName: '',\n            stepName: ''\n        }\n    }\n\n    onChange = (idx) => {\n        idx = idx - 1;\n        this.history.jumpToStep(idx);\n        const step = this.history.actionList[idx]\n        this.setState({\n            functionName: step.functionName,\n            stepName: this.humanizer.humanizeStep(step.operation),\n            numberOfItems: this.state.numberOfItems\n        });\n        this.updateHistory();\n    }\n\n    updateHistory(actionList) {\n        if (actionList) {\n            actionList = actionList[0]\n            this.history.setStepList(actionList);\n            this.setState({\n                functionName: actionList[0] ?actionList[0].functionName : '',\n                stepName: actionList[0] ? this.humanizer.humanizeStep(actionList[0].operation) : '',\n                numberOfItems: actionList.length\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"HistoryBar\">\n                <div className=\"Step\">\n                    <span className=\"Function\">{this.state.functionName}</span>\n                    <span className=\"Operation\">{this.state.stepName}</span>\n                </div>\n                {\n                    this.state.numberOfItems > 0 ? <Pagination total={this.state.numberOfItems * 10} onChange={this.onChange} /> : null\n                }\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { HistoryBar } from './HistoryBar';\n\nexport class RuntimePanel extends Component {\n    render() {\n        return (\n            <div className=\"RuntimePanel\">\n                <HistoryBar />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Menu } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { events } from '../../EventManager.js';\n\nconst examples = require('./Examples/examples.json')\n\nexport class ExamplesPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n    }\n\n    onClick = ({key}) => {\n        const path = key.split('/');\n        const text = path.reduce((current, key) => current[key], examples);\n        this.events.dispatch('setCode', text);\n        this.events.dispatch('setTab', 'Code');\n    }\n\n    parseExaples() {\n        const types = Object.keys(examples);\n        return (\n            <Menu mode='inline' onClick={this.onClick}>\n                {\n                    types.map(key => {\n                        return (\n                            <SubMenu key={key} title={key}>\n                                {\n                                    Object.keys(examples[key]).map(subKey => {\n                                        return <Menu.Item key={key+'/'+subKey}>{subKey}</Menu.Item>\n                                    })\n                                }\n                            </SubMenu>\n                        );\n                    })\n                }\n            </Menu>\n        );\n    }\n\n    render() {\n        return this.parseExaples();\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../EventManager';\nimport { parse } from '../grammar/grammar';\nimport { AceEditor } from '../outsiders/ace/Ace';\nimport { EditorBar } from '../bars/EditorBar';\nimport { Tabs } from '../Tabs';\nimport { DocumentationPanel } from './DocumentationPanel';\nimport { RuntimePanel } from './Runtime/RuntimePanel';\nimport { ExamplesPanel } from './ExamplesTab/ExamplesPanel';\n\nexport class EditorPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n        this.events.add('textChanged', this.textChanged);\n        this.text = '';\n        this.error = undefined;\n        this.errorLocation = undefined;\n\n        this.state = {\n            error: '',\n            errorLocation: ''\n        };\n        this.updateCode = props.updateCode;\n    }\n\n    textChanged = (text) => {\n        this.text = text;\n        this.parseText();\n    }\n\n    parseText() {\n        try {\n            const parsed = parse(this.text);\n            this.updateCode(parsed);\n            this.error = 'Compiled!';\n            this.errorLocation = null;\n        } catch (err) {\n            this.parseErrorMessage(err);\n        } finally {\n            this.setErrorMessage();\n        }\n    }\n\n    parseErrorMessage(error) {\n        this.error = error.name + ': ' + error.message;\n        this.errorLocation = error.location && `Line ${error.location.start.line}, Column ${error.location.start.column}`;\n        this.setErrorMessage();\n    }\n\n    setErrorMessage() {\n        this.setState({\n            error: this.error,\n            errorLocation: this.errorLocation\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"EditorPanel\">\n                <Tabs>\n                    <tab name='Code'>\n                        <AceEditor \n                            panelCallback = {this.textChanged.bind(this)}  \n                        />\n                    </tab>\n                    <tab name='Runtime'>\n                        <RuntimePanel />\n                    </tab>\n                    <tab name='Documentation'>\n                        <DocumentationPanel />\n                    </tab>\n                    <tab name='Examples'>\n                        <ExamplesPanel />\n                    </tab>\n                </Tabs>\n                <EditorBar \n                    errorText = {this.state.error}\n                    errorLocation = {this.state.errorLocation}\n                />\n            </div>\n        );\n}\n}","import React, { Component } from 'react';\nimport { events } from '../../EventManager';\nimport { Network } from 'vis';\n\nexport class Visualizer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.events.add('newStep', this.updateNetwork.bind(this));\n\n        this.visualizer = undefined;\n\n        this.nodes = [];\n\n        this.nodeColors = {\n            color: {\n                background: '#e5ffff',\n                border: '#80cbc4'\n            }\n        }\n    }\n\n    componentDidMount() {\n        const container = document.getElementById('vis-container');\n        const options = {\n            physics: false,\n            autoResize: true,\n            width: '',\n            height: '',\n            layout: {\n                hierarchical: {\n                    direction: 'UD'\n                }\n            }\n        }\n        this.visualizer = new Network(container, {}, options);\n        this.visualizer.on('click', (properties) => {\n            console.log(properties)\n        });\n        const network = container.firstElementChild;\n        network.style.backgroundColor = '#1D1F21';\n        const canvas = network.firstElementChild;\n        canvas.height = '';\n        canvas.width = '';\n    }\n\n    async updateNetwork(step) {\n        step = step[0];\n        const newStep = JSON.parse(JSON.stringify(step));\n        this.nodes = newStep.nodes;\n        newStep.nodes = newStep.nodes.map(node => {\n            delete node.prop;\n            Object.assign(node, this.nodeColors);\n            return node;\n        })\n        this.visualizer.setData(newStep);\n    }\n\n    componentWillUnmount() {\n        this.visualizer.destroy();\n        this.visualizer = null;\n        this.events.destroy('newStep', this.updateNetwork);\n    }\n\n    render() {\n        return (\n            <div id='vis-container' className=\"Visualizer\"></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { events } from '../EventManager';\nimport { Button, Dropdown, Icon, Menu } from 'antd';\n\nexport class VisualizerBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.events = events.getInstance();\n\n        this.style = {\n            height: '10%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        };\n\n        this.state = {\n            selected: null\n        }\n\n        this.executeFunction = props.executeFunction;\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = ({ key }) => {\n        this.setState({\n            selected: key\n        });\n    }\n\n    runFunction = () => {\n        if (this.state.selected) {\n            this.executeFunction(this.state.selected);\n            this.events.dispatch('setTab', 'Runtime');\n        }\n    }\n\n    createMenu = (items) => {\n        return (\n            <Menu onClick={this.handleChange}>\n                {\n                    items.map(item => {\n                        return <Menu.Item key={item}>\n                            <a>\n                                {item}\n                            </a>\n                        </Menu.Item>\n                    })\n                }\n            </Menu>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"VisualizerBar\">\n                {\n                    this.props.items.length > 0 ?\n                        <Dropdown overlay={this.createMenu(this.props.items)} trigger={['click']}>\n                            {\n                                this.state.selected ?\n                                    <a className=\"ant-dropdown-link\" href=\"#\">\n                                        {this.state.selected} <Icon type=\"down\" />\n                                    </a> :\n                                    <a className=\"ant-dropdown-link\" href=\"#\">\n                                        Functions <Icon type=\"down\" />\n                                    </a>\n                            }\n                        </Dropdown> :\n                        <a className=\"ant-dropdown-link\" href=\"#\">\n                            Functions\n                        </a>\n                }\n                <Button type=\"primary\" onClick={this.runFunction}>Run</Button>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Visualizer } from '../outsiders/visjs/Visualizer';\nimport { VisualizerBar } from '../bars/VisualizerBar';\n\nexport class VisualizerPanel extends Component {\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n        this.updateDimensions();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    updateDimensions() {\n        const tabEl = document.getElementById('tabButtons');\n        const tabSize = tabEl.getClientRects()[0];\n        const fillerEl = document.getElementById('filler');\n        fillerEl.style.height = tabSize.height + 'px';\n    }\n\n    render() {\n        return (\n            <div className=\"VisualizerPanel\">\n                <div className=\"container\">\n                    <div id=\"filler\"></div>\n                    <Visualizer />\n                </div>\n                <VisualizerBar items={this.props.items} executeFunction={this.props.executeFunction} />\n            </div>\n        );\n    }\n}","import { events } from './EventManager';\n\nexport class Interpreter {\n    scope = [{}];\n    typeParse = {\n        'number': this.parseNumber.bind(this),\n        'bool': this.parseBool.bind(this),\n        'Node': this.parseNode.bind(this),\n        'void': () => undefined\n    }\n\n    constructor() {\n        this.events = events.getInstance();\n        this.idCount = 0;\n        this.actionList = [];\n        this.currentFunction = '';\n    }\n\n    hasCode() {\n        return !!this.code;\n    }\n\n    setCode(code) {\n        this.clearScope();\n        this.code = code;\n        this.setGlobal();\n    }\n\n    executeFunction(functionName, functionParameters = [], initial = false) {\n        const fun = this.getFunction(functionName);\n        if (fun) {\n            this.currentFunction = functionName;\n            const scope = fun.parameters ? this.createFunctionScope(fun)(functionParameters) : {};\n            this.scope.push(scope);\n            const returnValue = this.executeBlock(fun.block, fun.type);\n            this.scope.pop();\n            if (initial) {\n                this.events.dispatch('updateHistory', this.actionList);\n            }\n            return returnValue;\n        }\n    }\n\n    executeBlock(block, functionType,) {\n        let returnValue;\n        (block || []).some(op => {\n            const ope = JSON.parse(JSON.stringify(op));\n            switch (ope.operation) {\n                case 'Declaration':\n                    this.handleDeclaration(ope, this.lastScope());\n                    break;\n                case 'Attribution':\n                    this.handleAttribution(ope, this.lastScope());\n                    break;\n                case 'Function':\n                    this.executeFunction(ope.name, ope.parameters);\n                    break;\n                case 'if':\n                    this.handleIf(ope);\n                    break;\n                case 'while':\n                    this.handleWhile(ope);\n                    break;\n                case 'Return':\n                    returnValue = this.handleReturn(ope, functionType);\n                    return true;\n                default: return false;\n            }\n            const node = this.findGlobalNode();\n            this.addStep(node, ope);\n            return false;\n        });\n        return returnValue;\n    }\n\n    findGlobalNode() {\n        const global = this.scope[1];\n        const keys = Object.keys(global);\n        let result;\n        keys.some(key => {\n            if (global[key].type === 'Node') {\n                result = global[key];\n                return true;\n            }\n            return false;\n        });\n        return result;\n    }\n\n    getFunction(functionName) {\n        let result;\n        this.code.functions.some(fun => {\n            if (fun.name === functionName) {\n                result = fun;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    }\n\n    clearScope() {\n        this.scope = [{}];\n        this.actionList = [];\n    }\n\n    setGlobal() {\n        this.clearScope();\n        this.scope[0]['Node'] = this.createFunctionScope(this.code.node);\n        this.addScope(this.code);\n    }\n\n    createFunctionScope(fun) {\n        return (values) => {\n            const parameters = this.parseParameters(fun.parameters);\n            const keys = Object.keys(parameters);\n            for (let i = 0; i < keys.length; i++) {\n                parameters[keys[i]] = values[i] ? this.typeParse[parameters[keys[i]].type](values[i]) : { type: 'Node', value: null };\n            }\n            return parameters;\n        };\n    }\n\n    lastScope() {\n        return this.scope[this.scope.length - 1];\n    }\n\n    addScope(block) {\n        const layer = {};\n        block.attributions && block.attributions.forEach(op => {\n            switch (op.operation) {\n                case 'Declaration':\n                    this.handleDeclaration(op, layer);\n                    break;\n                case 'Attribution':\n                    this.handleAttribution(op, layer);\n                    break;\n                default: break;\n            }\n        });\n        this.scope.push(layer);\n    }\n\n    parseParameters(parameters) {\n        const result = {}\n        const keys = Object.keys(parameters);\n        keys.forEach(key => {\n            result[key] = {\n                type: parameters[key]\n            }\n        });\n        return result;\n    }\n\n    isNull(variable) {\n        return variable.type === 'Node' && variable.value === null;\n    }\n\n    parseNode(node) {\n        if (this.isNull(node)) {\n            return node;\n        }\n        const name = node.name;\n        const parameters = node.parameters;\n        if (name !== 'Node') {\n            if (node.operation === 'Function') {\n                return this.executeFunction(name, parameters);\n            }\n            const memValue = this.getValueFromMemory(node, this.lastScope());\n            if (memValue) {\n                return memValue;\n            }\n            console.error(`${parameters} not a Node`);\n            return;\n        }\n        if (!Array.isArray(parameters)) {\n            if (!(parameters === null)) {\n                console.error(`${parameters} not a Node`);\n                return;\n            }\n        }\n        const value = this.scope[0]['Node'](parameters);\n        return {\n            type: 'Node',\n            value\n        }\n    }\n\n    parseNumber(variable) {\n        if (variable === undefined) return variable;\n        if (variable.operation === 'Function') {\n            return this.executeFunction(variable.name, variable.parameters);\n        }\n        const memValue = this.getValueFromMemory(variable, this.lastScope());\n        if (memValue) {\n            return memValue;\n        }\n        const value = variable.value;\n        const result = Number(value);\n        if (!isNaN(result)) {\n            variable.value = result;\n            return variable;\n        }\n        if (variable.operation) {\n            const operationResult = this.parseNumberOperation(variable.left, variable.right, variable.operation);\n            delete variable.left;\n            delete variable.right;\n            delete variable.operation;\n            variable.value = operationResult;\n            variable.type = 'number';\n            return variable;\n        }\n        console.error(`Value ${value} is not a number`);\n    }\n\n    parseNumberOperation(left, right, op) {\n        left = this.parseNumber(left).value;\n        right = this.parseNumber(right).value;\n        const operators = {\n            '+': (d1, d2) => d1 + d2,\n            '-': (d1, d2) => d1 - d2,\n            '*': (d1, d2) => d1 * d2,\n            '/': (d1, d2) => d1 / d2,\n        }\n        return operators[op](left, right);\n    }\n\n    parseBool(op) {\n        if (op.operation === 'Function') {\n            return this.executeFunction(op.name, op.parameters);\n        }\n        const memValue = this.getValueFromMemory(op, this.lastScope());\n        if (memValue) {\n            return memValue;\n        }\n\n        let value = this.toBoolean(op.value);\n        if (value !== undefined) {\n            op.value = value;\n            return op;\n        }\n        if (op.operation) {\n            value = this.parseBoolOperator(op.operation, op.left, op.right);\n            op.value = value;\n            delete op.operation;\n            delete op.left;\n            delete op.right;\n            return op;\n        }\n    }\n\n    parseBoolOperator(operator, left, right) {\n        let sides;\n        switch (operator) {\n            case '||': return this.parseBool(left).value || this.parseBool(right).value;\n            case '&&': return this.parseBool(left).value && this.parseBool(right).value;\n            case '<': return this.parseNumber(left).value < this.parseNumber(right).value;\n            case '>': return this.parseNumber(left).value > this.parseNumber(right).value;\n            case '<=': return this.parseNumber(left).value <= this.parseNumber(right).value;\n            case '>=': return this.parseNumber(left).value >= this.parseNumber(right).value;\n            case '==':\n                sides = this.getBothSides(left, right);\n                if (sides) {\n                    return sides[0] === sides[1];\n                }\n                break;\n            case '!=':\n                sides = this.getBothSides(left, right);\n                if (sides) {\n                    return sides[0] !== sides[1];\n                }\n                break;\n            default: break;\n        }\n    }\n\n    toBoolean(value) {\n        switch (value) {\n            case 'true': return true;\n            case 'false': return false;\n            default: break;\n        }\n    }\n\n    getBothSides(left, right) {\n        try {\n            const memLeft = this.getValueFromMemory(left, this.lastScope());\n            const memRight = this.getValueFromMemory(right, this.lastScope());\n            if (memLeft && memRight) {\n                return [memLeft.value, memRight.value];\n            }\n            if (memLeft) {\n                const type = memLeft.type;\n                const rightValue = this.typeParse[type](right);\n                return [memLeft.value, rightValue.value];\n            }\n            if (memRight) {\n                const type = memRight.type;\n                const leftValue = this.typeParse[type](left);\n                return [leftValue.value, memRight.value];\n            }\n            left = this.parseNumber(left);\n            right = this.parseNumber(right);\n            return [left, right]\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    handleDeclaration(com, scope) {\n        if (scope[com.variable]) {\n            console.error(`Variable ${com.variable} already declared`);\n        } else {\n            const parsedValue = this.typeParse[com.type](com.value);\n            if (parsedValue !== undefined) {\n                scope[com.variable] = parsedValue;\n                return true;\n            }\n            return false;\n        }\n    }\n\n    handleAttribution(com, scope) {\n        this.sustituteValueInMemory(com.variable, scope, com.value);\n    }\n\n    handleReturn(com, type) {\n        return this.typeParse[type](com.value);\n    }\n\n    getLastAccess(com) {\n        const arr = JSON.parse(JSON.stringify(com.variable instanceof Array ? com.variable : [com.variable]));\n        const arrayVar = arr.slice(1);\n        return arrayVar.pop();\n    }\n\n    handleIf(ifBlock) {\n        const condition = JSON.parse(JSON.stringify(ifBlock.condition));\n        const parsedCondition = this.parseBool(condition);\n        if (parsedCondition.value) {\n            this.scope.push({});\n            this.executeBlock(ifBlock.block);\n            this.scope.pop();\n        } else {\n            if (ifBlock.else) {\n                this.scope.push({});\n                this.executeBlock(ifBlock.else);\n                this.scope.pop();\n            }\n        }\n    }\n\n    handleWhile(whileBlock) {\n        this.scope.push({});\n        while (true) {\n            const condition = JSON.parse(JSON.stringify(whileBlock.condition));\n            const parsedCondition = this.parseBool(condition);\n            if (!parsedCondition.value) {\n                this.scope.pop();\n                return;\n            }\n            this.executeBlock(whileBlock.block);\n        }\n    }\n\n    sustituteValueInMemory(variable, scope, newValue) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        let ret = scope[arrayVar[0]];\n        if (!ret) {\n            for (let i = this.scope.length - 1; i >= 0; i--) {\n                ret = this.scope[i][arrayVar[0]];\n                if (ret) {\n                    if (arrayVar.length === 1) {\n                        this.scope[i][arrayVar[0]] = this.typeParse[this.scope[i][arrayVar[0]].type](newValue);\n                        return;\n                    }\n                    break;\n                }\n            }\n            if (!ret) {\n                return console.error(`Variable ${arrayVar[0]} not found`);\n            }\n        }\n        const rest = arrayVar.slice(1);\n        const last = rest.pop();\n        rest.forEach(element => {\n            if (element.type === 'Object') {\n                ret = ret.value[element.name];\n                if (ret === undefined) {\n                    console.error(`Property ${element.name} not found`);\n                }\n            } else if (element.type === 'Array') {\n                ret = ret.value[this.parseNumber(element.index)];\n                if (!ret) {\n                    console.error(`Index ${element.index} not found`);\n                }\n            }\n        });\n        if (last.type === 'Object') {\n            if (ret.value[last.name] !== undefined) {\n                ret.value[last.name] = this.typeParse[ret.value[last.name].type](newValue);\n            } else {\n                console.error(`Property ${last.name} not found`);\n            }\n        } else if (last.type === 'Array') {\n            ret.value[this.parseNumber(last.index)] = newValue;\n        }\n    }\n\n    getValueFromMemory(variable, scope, father) {\n        const arrayVar = variable instanceof Array ? variable : [variable];\n        return this.getVarFromArray(arrayVar, scope, father);\n    }\n\n    getVarFromArray(variable, scope, father = false) {\n        let ret = scope[variable[0]];\n        if (!ret) {\n            for (let i = this.scope.length - 1; i >= 0; i--) {\n                ret = this.scope[i][variable[0]];\n                if (ret) {\n                    break;\n                }\n            }\n            if (!ret) {\n                return undefined;\n            }\n        }\n        const rest = variable.slice(1);\n        if (father) {\n            rest.pop();\n        }\n        rest.forEach(element => {\n            if (element.type === 'Object') {\n                ret = ret.value[element.name];\n                if (ret === undefined) {\n                    console.error(`Property ${element.name} not found`);\n                }\n            } else if (element.type === 'Array') {\n                ret = ret.value[this.parseNumber(element.index)];\n                if (!ret) {\n                    console.error(`Index ${element.index} not found`);\n                }\n            }\n        });\n        return ret;\n    }\n\n    addStep(node, op) {\n        if (node) {\n            if (op.operation === 'Attribution' || op.operation === 'Declaration') {\n                const step = Object.assign({ operation: op, functionName: this.currentFunction }, this.createStepFromNode(node));\n                this.actionList.push(step);\n            }\n        }\n    }\n\n    createStepFromNode(node) {\n        this.idCount = 0;\n        return this.createStepFromNodeRec(node, 0, 0);\n    }\n\n    createStepFromNodeRec(node, id, level) {\n        const data = {\n            nodes: [],\n            edges: []\n        };\n        if (!node.value) return data;\n        if (node.$been !== undefined) return {\n            id: node.$been\n        };\n        data.nodes.push({ id, label: String(id), prop: node.value, level });\n        node.$been = id;\n        const keys = Object.keys(node.value);\n        let next;\n        level++;\n        keys.forEach(key => {\n            if (node.value[key].type === 'Node' && node.value[key].value !== null) {\n                this.idCount++;\n                next = this.idCount;\n                const res = this.createStepFromNodeRec(node.value[key], next, level);\n                if ('id' in res) {\n                    data.edges.push({ from: id, to: res.id, arrows: 'to' });\n                } else {\n                    data.edges.push({ from: id, to: next, arrows: 'to' });\n                    data.edges = data.edges.concat(res.edges);\n                    data.nodes = data.nodes.concat(res.nodes);\n                }\n            }\n        });\n        delete node.$been;\n        return data;\n    }\n}","import React, { Component } from 'react';\nimport { EditorPanel } from './EditorPanel';\nimport { VisualizerPanel } from './VisualizerPanel';\nimport { Interpreter } from '../Interpreter';\n\nexport class MainPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        }\n\n        this.interpreter = new Interpreter();\n    }\n\n    updateCode = (code) => {\n        this.updateItems(code.functions);\n        this.interpreter.setCode(code);\n    }\n\n    updateItems(items) {\n        const newItems = items.map(item => {\n            return item.name\n        }); \n        this.setState({\n            items: newItems\n        });\n    }\n\n    executeFunction = (functionName) => {\n        if (this.interpreter.hasCode()) {\n            this.interpreter.executeFunction(functionName, [], true);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MainPanel\">\n                <EditorPanel updateCode={this.updateCode.bind(this)}/>\n                <VisualizerPanel items={this.state.items} executeFunction={this.executeFunction.bind(this)}/>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport newLogo from '../images/newLogo.svg';\n\nexport class Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <img src={newLogo} alt=''></img>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './styles/css/index.css';\nimport { MainPanel } from './panels/MainPanel';\nimport { Header } from './bars/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <MainPanel />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { M: peg$parseM },\n      peg$startRuleFunction  = peg$parseM,\n\n      peg$c0 = \"!=\",\n      peg$c1 = peg$literalExpectation(\"!=\", false),\n      peg$c2 = \"==\",\n      peg$c3 = peg$literalExpectation(\"==\", false),\n      peg$c4 = function(op, eq) { return eq ? op + eq : op },\n      peg$c5 = \">\",\n      peg$c6 = peg$literalExpectation(\">\", false),\n      peg$c7 = \"<\",\n      peg$c8 = peg$literalExpectation(\"<\", false),\n      peg$c9 = \"=\",\n      peg$c10 = peg$literalExpectation(\"=\", false),\n      peg$c11 = \"&&\",\n      peg$c12 = peg$literalExpectation(\"&&\", false),\n      peg$c13 = \"||\",\n      peg$c14 = peg$literalExpectation(\"||\", false),\n      peg$c15 = \"+\",\n      peg$c16 = peg$literalExpectation(\"+\", false),\n      peg$c17 = \"-\",\n      peg$c18 = peg$literalExpectation(\"-\", false),\n      peg$c19 = \"*\",\n      peg$c20 = peg$literalExpectation(\"*\", false),\n      peg$c21 = \"/\",\n      peg$c22 = peg$literalExpectation(\"/\", false),\n      peg$c23 = function(left, op, right) {\n      \treturn {\n              type: 'bool',\n          \toperation: op,\n              left,\n              right\n          }\n      },\n      peg$c24 = function(left, op, right) {\n      \treturn {\n              type: 'number',\n          \toperation: op,\n              left,\n              right\n          }\n      },\n      peg$c25 = \"(\",\n      peg$c26 = peg$literalExpectation(\"(\", false),\n      peg$c27 = \")\",\n      peg$c28 = peg$literalExpectation(\")\", false),\n      peg$c29 = function(l) {\n      \treturn l.map(c => {\n          \treturn c[0];\n          })\n      },\n      peg$c30 = function(f) {\n      \treturn f.map(c => {\n          \treturn c[0];\n          })\n      },\n      peg$c31 = \";\",\n      peg$c32 = peg$literalExpectation(\";\", false),\n      peg$c33 = function(atr) {return atr},\n      peg$c34 = function(cHead, cTail) {\n      \treturn [cHead].concat(cTail.map(d => {\n          \treturn d[1];\n          }));\n      },\n      peg$c35 = function(type, vari, value) {\n      \treturn {\n              operation: \"Declaration\",\n              variable: vari,\n              value: value,\n          \ttype: type\t\n          }\n      },\n      peg$c36 = function(vari, value) {\n      \treturn {\n              operation: \"Attribution\",\n              variable: vari,\n              value: value\t\n          }\n      },\n      peg$c37 = \"return\",\n      peg$c38 = peg$literalExpectation(\"return\", false),\n      peg$c39 = function(value) {\n          return {\n              operation: 'Return',\n              value: value && value[1]\n          }\n      },\n      peg$c40 = function(head, tail) {\n      \treturn head+(tail.length>0 ? tail.reduce((result, ch) => {\n          \treturn result+=ch;\n          }) : \"\");\n      },\n      peg$c41 = function(head, tail) {\n          return tail === [] ? [head] : [head].concat(tail);\n      },\n      peg$c42 = \"[\",\n      peg$c43 = peg$literalExpectation(\"[\", false),\n      peg$c44 = \"]\",\n      peg$c45 = peg$literalExpectation(\"]\", false),\n      peg$c46 = function(n) {\n      \treturn {\n          \ttype: 'Array',\n              index: n\n          }\n      },\n      peg$c47 = \".\",\n      peg$c48 = peg$literalExpectation(\".\", false),\n      peg$c49 = function(r) {\n      \treturn {\n          \ttype: 'Object',\n              name: r[1]\n          }\n      },\n      peg$c50 = \",\",\n      peg$c51 = peg$literalExpectation(\",\", false),\n      peg$c52 = function(v) {\n      \treturn {\n          \ttype: 'Function',\n              parameters: v ? [v[0]].concat(v[1].map(d => {\n              \treturn d[2]\n              })) : []\n          }\n      },\n      peg$c53 = function(functionName, call) {\n          return {\n              operation: call.type,\n              parameters: call.parameters,\n              name: functionName\n          }\n      },\n      peg$c54 = /^[a-zA-Z]/,\n      peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c56 = /^[0-9]/,\n      peg$c57 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c58 = \"_\",\n      peg$c59 = peg$literalExpectation(\"_\", false),\n      peg$c60 = function(head, tail) {\n      \treturn [head].concat((tail).map(d => {\n          \treturn d[1]\n          })).map(d => {\n          \treturn {\n              \tvalue: d\n              }\n          }).reduceRight((res, v) => {\n          \tv.next = res\n              return v\n          })\n      },\n      peg$c61 = \"number\",\n      peg$c62 = peg$literalExpectation(\"number\", false),\n      peg$c63 = \"void\",\n      peg$c64 = peg$literalExpectation(\"void\", false),\n      peg$c65 = \"string\",\n      peg$c66 = peg$literalExpectation(\"string\", false),\n      peg$c67 = \"bool\",\n      peg$c68 = peg$literalExpectation(\"bool\", false),\n      peg$c69 = \"char\",\n      peg$c70 = peg$literalExpectation(\"char\", false),\n      peg$c71 = \"Node\",\n      peg$c72 = peg$literalExpectation(\"Node\", false),\n      peg$c73 = \"null\",\n      peg$c74 = peg$literalExpectation(\"null\", false),\n      peg$c75 = function() {\n      \treturn {\n          \ttype: 'Node',\n              value: null\n          }\n      },\n      peg$c76 = function(ch) {\n      \treturn {\n          \ttype: 'number',\n              value: ch.reduce((res, c) => {\n          \t\t\treturn res+=c;\n          \t})\n          }\n      },\n      peg$c77 = peg$otherExpectation(\"whitespace\"),\n      peg$c78 = /^[ \\t\\n\\r]/,\n      peg$c79 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false),\n      peg$c80 = \"true\",\n      peg$c81 = peg$literalExpectation(\"true\", false),\n      peg$c82 = \"false\",\n      peg$c83 = peg$literalExpectation(\"false\", false),\n      peg$c84 = function(b) {\n      \treturn {\n          \ttype: 'bool',\n              value: b\n          }; \n      },\n      peg$c85 = function(b) {\n      \treturn b;\n      },\n      peg$c86 = \"[]\",\n      peg$c87 = peg$literalExpectation(\"[]\", false),\n      peg$c88 = function(t, v, i) {\n      \treturn [i,t+(v ? v : \"\")]\n      },\n      peg$c89 = \"{\",\n      peg$c90 = peg$literalExpectation(\"{\", false),\n      peg$c91 = \"}\",\n      peg$c92 = peg$literalExpectation(\"}\", false),\n      peg$c93 = function(p) { \n      \treturn {\n          \toperation: \"node\",\n              parameters: p || {}\n          }\n      },\n      peg$c94 = \"if\",\n      peg$c95 = peg$literalExpectation(\"if\", false),\n      peg$c96 = function(c, f, e) {\n      \treturn {\n          \toperation: \"if\",\n              condition: c,\n              block: f,\n              else: e\n          }\n      },\n      peg$c97 = \"else\",\n      peg$c98 = peg$literalExpectation(\"else\", false),\n      peg$c99 = function(e) { return e ? e[2] : null; },\n      peg$c100 = \"while\",\n      peg$c101 = peg$literalExpectation(\"while\", false),\n      peg$c102 = function(c, f) {\n      \treturn {\n          \toperation: \"while\",\n              condition: c,\n              block: f\n          }\n      },\n      peg$c103 = function(c) { return c; },\n      peg$c104 = \"fun\",\n      peg$c105 = peg$literalExpectation(\"fun\", false),\n      peg$c106 = \":\",\n      peg$c107 = peg$literalExpectation(\":\", false),\n      peg$c108 = function(i, p, t, f) {\n      \treturn {\n          \toperation: \"function\",\n              name: i,\n              parameters: p || {},\n              type: t,\n              block: f\n          }\n      },\n      peg$c109 = function(vHead, vTail) {\n      \treturn [vHead].concat(vTail.map((t) => {\n          \treturn t[3]\n          })).map(d => {\n          \tconst aux = {};\n              aux[d[0]] = d[1]\n          \treturn aux;\n          }).reduce((res, val) => {\n          \treturn Object.assign(res, val);\n          })\n      },\n      peg$c110 = \"class\",\n      peg$c111 = peg$literalExpectation(\"class\", false),\n      peg$c112 = function(i, n, l, f) {\n      \treturn { \n          \toperation: \"class\",\n          \tnode: n,\n          \tattributions: l,\n          \tfunctions: f\n          }\n      },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseM() {\n    var s0;\n\n    s0 = peg$parseClass();\n\n    return s0;\n  }\n\n  function peg$parseRelational() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c0) {\n      s0 = peg$c0;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c1); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c2) {\n        s0 = peg$c2;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCompares();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCompares() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCompareOperators();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEquals();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCompareOperators() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 62) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 60) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEquals() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c9;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseBoolOperator() {\n    var s0;\n\n    if (input.substr(peg$currPos, 2) === peg$c11) {\n      s0 = peg$c11;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c13) {\n        s0 = peg$c13;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePlusMinus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c15;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultDiv() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c19;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c21;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseB();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseRelational();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseB();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c23(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseB();\n    }\n\n    return s0;\n  }\n\n  function peg$parseB() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditive();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseBoolOperator();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseB();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c23(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAdditive();\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditive() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseMult();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePlusMinus();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseAdditive();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c24(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMult();\n    }\n\n    return s0;\n  }\n\n  function peg$parseMult() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePrimary();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseMultDiv();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseMult();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c24(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrimary();\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimary() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parseNumber();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseBool();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseNull();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFunctionCall();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseIdRS();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s1 = peg$c25;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c26); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseExpression();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s3 = peg$c27;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseLineCommands() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseLineCommand();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parseLineCommand();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c29(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFunctions() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseFunction();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$currPos;\n      s3 = peg$parseFunction();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c30(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLineCommand() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseFunctionCall();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseReturn();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseDeclaration();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseAttribution();\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s3 = peg$c31;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c32); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c33(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBlockCommand() {\n    var s0;\n\n    s0 = peg$parseIf();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseWhile();\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommands() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLineCommand();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseBlockCommand();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseLineCommand();\n        if (s5 === peg$FAILED) {\n          s5 = peg$parseBlockCommand();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseLineCommand();\n          if (s5 === peg$FAILED) {\n            s5 = peg$parseBlockCommand();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c34(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDeclaration() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseType();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_1();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c9;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c10); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseExpression();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c35(s1, s3, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAttribution() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIdRS();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c9;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseExpression();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c36(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_1();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseExpression();\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseId() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseOneChar();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseOneChar();\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseOneNumber();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseUnderline();\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseOneChar();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseOneNumber();\n          if (s3 === peg$FAILED) {\n            s3 = peg$parseUnderline();\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdRS() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseRS();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseRS();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArrayAccess() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c42;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c44;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c46(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseObjectAccess() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c47;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parseId();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c49(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFunctionAccess() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = peg$parseExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c50;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c51); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parseExpression();\n              if (s9 !== peg$FAILED) {\n                s7 = [s7, s8, s9];\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s6;\n            s6 = peg$FAILED;\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c50;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c51); }\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parseExpression();\n                if (s9 !== peg$FAILED) {\n                  s7 = [s7, s8, s9];\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c27;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c52(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionCall() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseFunctionAccess();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c53(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRS() {\n    var s0;\n\n    s0 = peg$parseArrayAccess();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseObjectAccess();\n    }\n\n    return s0;\n  }\n\n  function peg$parseOneChar() {\n    var s0;\n\n    if (peg$c54.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseOneNumber() {\n    var s0;\n\n    if (peg$c56.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnderline() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 95) {\n      s0 = peg$c58;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIdAtribbute() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseId();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s4 = peg$c47;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseId();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c47;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseId();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c60(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseType() {\n    var s0;\n\n    if (input.substr(peg$currPos, 6) === peg$c61) {\n      s0 = peg$c61;\n      peg$currPos += 6;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.substr(peg$currPos, 4) === peg$c63) {\n        s0 = peg$c63;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c65) {\n          s0 = peg$c65;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c67) {\n            s0 = peg$c67;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 4) === peg$c69) {\n              s0 = peg$c69;\n              peg$currPos += 4;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c71) {\n                s0 = peg$c71;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNull() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c73) {\n      s1 = peg$c73;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c74); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c75();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseOneNumber();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseOneNumber();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c76(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c78.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c79); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c78.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c79); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_1() {\n    var s0, s1;\n\n    s0 = [];\n    if (peg$c78.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c79); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c78.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c79); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBool() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c80) {\n      s1 = peg$c80;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c84(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCondition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c27;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c85(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVar() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseType();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c86) {\n        s2 = peg$c86;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_1();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseId();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c88(s1, s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNode() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c71) {\n      s1 = peg$c71;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s3 = peg$c89;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c90); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseParameters();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s7 = peg$c91;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c93(s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIf() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c94) {\n      s1 = peg$c94;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c95); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCondition();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseFunctionBlock();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseElseA();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c96(s3, s5, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElseA() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c97) {\n      s2 = peg$c97;\n      peg$currPos += 4;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c98); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseElseB();\n        if (s4 !== peg$FAILED) {\n          s2 = [s2, s3, s4];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c99(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseElseB() {\n    var s0;\n\n    s0 = peg$parseIf();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionBlock();\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c100) {\n      s1 = peg$c100;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c101); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCondition();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseFunctionBlock();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c102(s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunctionBlock() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c89;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c90); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseCommands();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s5 = peg$c91;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c92); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c103(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c104) {\n      s1 = peg$c104;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c105); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_1();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 40) {\n              s5 = peg$c25;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c26); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseParameters();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 41) {\n                      s9 = peg$c27;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 58) {\n                          s11 = peg$c106;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c107); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            s13 = peg$parseType();\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                s15 = peg$parseFunctionBlock();\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c108(s3, s7, s13, s15);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseParameters() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseVar();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c50;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseVar();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c50;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c51); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseVar();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c109(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClass() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c110) {\n      s1 = peg$c110;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c111); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseId();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s5 = peg$c89;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c90); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseNode();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseLineCommands();\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$parseFunctions();\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                              s13 = peg$c91;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c92); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c112(s3, s7, s9, s11);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}